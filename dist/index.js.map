{"version":3,"file":"index.js","sources":["../webpack://typescript-action/./lib/main.js","../webpack://typescript-action/./node_modules/@actions/core/lib/command.js","../webpack://typescript-action/./node_modules/@actions/core/lib/core.js","../webpack://typescript-action/./node_modules/@actions/core/lib/file-command.js","../webpack://typescript-action/./node_modules/@actions/core/lib/utils.js","../webpack://typescript-action/./node_modules/@actions/github/lib/context.js","../webpack://typescript-action/./node_modules/@actions/github/lib/github.js","../webpack://typescript-action/./node_modules/@actions/github/lib/internal/utils.js","../webpack://typescript-action/./node_modules/@actions/github/lib/utils.js","../webpack://typescript-action/./node_modules/@actions/http-client/index.js","../webpack://typescript-action/./node_modules/@actions/http-client/proxy.js","../webpack://typescript-action/./node_modules/@octokit/auth-token/dist-node/index.js","../webpack://typescript-action/./node_modules/@octokit/core/dist-node/index.js","../webpack://typescript-action/./node_modules/@octokit/endpoint/dist-node/index.js","../webpack://typescript-action/./node_modules/@octokit/graphql/dist-node/index.js","../webpack://typescript-action/./node_modules/@octokit/plugin-paginate-rest/dist-node/index.js","../webpack://typescript-action/./node_modules/@octokit/plugin-rest-endpoint-methods/dist-node/index.js","../webpack://typescript-action/./node_modules/@octokit/request-error/dist-node/index.js","../webpack://typescript-action/./node_modules/@octokit/request/dist-node/index.js","../webpack://typescript-action/./node_modules/before-after-hook/index.js","../webpack://typescript-action/./node_modules/before-after-hook/lib/add.js","../webpack://typescript-action/./node_modules/before-after-hook/lib/register.js","../webpack://typescript-action/./node_modules/before-after-hook/lib/remove.js","../webpack://typescript-action/./node_modules/deprecation/dist-node/index.js","../webpack://typescript-action/./node_modules/is-plain-object/dist/is-plain-object.js","../webpack://typescript-action/./node_modules/js-yaml/index.js","../webpack://typescript-action/./node_modules/js-yaml/lib/common.js","../webpack://typescript-action/./node_modules/js-yaml/lib/dumper.js","../webpack://typescript-action/./node_modules/js-yaml/lib/exception.js","../webpack://typescript-action/./node_modules/js-yaml/lib/loader.js","../webpack://typescript-action/./node_modules/js-yaml/lib/schema.js","../webpack://typescript-action/./node_modules/js-yaml/lib/schema/core.js","../webpack://typescript-action/./node_modules/js-yaml/lib/schema/default.js","../webpack://typescript-action/./node_modules/js-yaml/lib/schema/failsafe.js","../webpack://typescript-action/./node_modules/js-yaml/lib/schema/json.js","../webpack://typescript-action/./node_modules/js-yaml/lib/snippet.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/binary.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/bool.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/float.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/int.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/map.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/merge.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/null.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/omap.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/pairs.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/seq.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/set.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/str.js","../webpack://typescript-action/./node_modules/js-yaml/lib/type/timestamp.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/BasicAsyncEnumerable.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/OrderedAsyncEnumerable.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_ordered/asAsyncKeyMap.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_ordered/asAsyncKeyMapSync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_ordered/asAsyncSortedKeyValues.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_ordered/asAsyncSortedKeyValuesSync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_ordered/asKeyMap.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_ordered/asKeyMapSync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_ordered/asSortedKeyValues.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_ordered/asSortedKeyValuesSync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/aggregate.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/all.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/allAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/any.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/anyAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/asParallel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/average.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/averageAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/concatenate.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/contains.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/containsAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/count.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/countAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/distinct.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/distinctAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/each.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/eachAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/elementAt.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/elementAtOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/except.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/exceptAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/first.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/firstAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/firstOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/firstOrDefaultAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/groupBy.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/groupByAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/groupByWithSel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/intersect.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/intersectAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/join.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/last.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/lastAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/lastOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/lastOrDefaultAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/max.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/maxAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/min.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/minAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/ofType.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/orderBy.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/orderByAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/orderByDescending.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/orderByDescendingAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/reverse.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/select.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/selectAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/selectMany.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/selectManyAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/sequenceEquals.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/sequenceEqualsAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/single.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/singleAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/singleOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/singleOrDefaultAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/skip.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/skipWhile.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/skipWhileAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/sum.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/sumAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/take.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/takeWhile.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/takeWhileAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/toArray.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/toMap.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/toMapAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/toSet.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/union.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/unionAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/where.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/whereAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/zip.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/_private/zipAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/isAsyncEnumerable.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/static/emptyAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/static/enumerateObjectAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/static/flattenAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/static/fromAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/static/index.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/static/partitionAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/static/rangeAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/async/static/repeatAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/index.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/initializer/bindArray.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/initializer/bindArrayEnumerable.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/initializer/bindLinq.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/initializer/bindLinqAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/initializer/bindLinqParallel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/initializer/bindString.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/initializer/initializeLinq.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/initializer/initializer.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/BasicParallelEnumerable.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/OrderedParallelEnumerable.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_ordered/asAsyncKeyMap.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_ordered/asAsyncKeyMapSync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_ordered/asAsyncSortedKeyValues.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_ordered/asAsyncSortedKeyValuesSync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_ordered/asKeyMap.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_ordered/asKeyMapSync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_ordered/asSortedKeyValues.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_ordered/asSortedKeyValuesSync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/_nextIteration.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/_nextIterationAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/_nextIterationWithIndex.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/_nextIterationWithIndexAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/aggregate.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/all.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/allAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/any.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/anyAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/asAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/average.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/averageAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/concatenate.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/contains.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/containsAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/count.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/countAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/distinct.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/distinctAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/each.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/eachAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/elementAt.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/elementAtOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/except.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/exceptAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/first.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/firstAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/firstOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/firstOrDefaultAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/groupBy.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/groupByAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/groupByWithSel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/intersect.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/intersectAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/join.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/last.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/lastAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/lastOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/lastOrDefaultAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/max.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/maxAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/min.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/minAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/ofType.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/orderBy.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/orderByAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/orderByDescending.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/orderByDescendingAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/reverse.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/select.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/selectAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/selectMany.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/selectManyAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/sequenceEquals.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/sequenceEqualsAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/single.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/singleAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/singleOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/singleOrDefaultAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/skip.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/skipWhile.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/skipWhileAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/sum.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/sumAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/take.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/takeWhile.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/takeWhileAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/toArray.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/toMap.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/toMapAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/toSet.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/union.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/unionAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/where.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/whereAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/zip.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/_private/zipAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/isParallelEnumerable.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/static/emptyParallel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/static/flattenParallel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/static/fromParallel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/static/index.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/static/partitionParallel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/static/rangeParallel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/parallel/static/repeatParallel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/shared/ArgumentOutOfRangeException.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/shared/EqualityComparer.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/shared/ErrorString.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/shared/InvalidOperationException.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/shared/NumberComparer.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/shared/StrictEqualityComparer.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/shared/StringifyComparer.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/shared/index.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/ArrayEnumerable.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/BasicEnumerable.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/Grouping.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/OrderedEnumerable.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_ordered/asKeyMap.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_ordered/asKeyMapAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_ordered/asSortedKeyValues.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_ordered/asSortedKeyValuesAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/aggregate.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/all.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/allAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/any.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/anyAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/asAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/asParallel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/average.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/averageAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/concatenate.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/contains.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/containsAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/count.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/countAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/distinct.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/distinctAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/each.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/eachAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/elementAt.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/elementAtOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/except.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/exceptAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/first.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/firstAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/firstOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/firstOrDefaultAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/groupBy.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/groupByAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/groupByShared.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/groupByWithSel.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/intersect.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/intersectAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/join.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/last.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/lastAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/lastOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/lastOrDefaultAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/max.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/maxAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/min.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/minAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/ofType.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/orderBy.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/orderByAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/orderByDescending.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/orderByDescendingAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/reverse.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/select.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/selectAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/selectMany.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/selectManyAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/sequenceEquals.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/sequenceEqualsAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/single.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/singleAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/singleOrDefault.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/singleOrDefaultAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/skip.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/skipWhile.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/skipWhileAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/sum.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/sumAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/take.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/takeWhile.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/takeWhileAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/toArray.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/toMap.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/toMapAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/toSet.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/union.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/unionAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/where.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/whereAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/zip.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/_private/zipAsync.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/isEnumerable.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/static/empty.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/static/enumerateObject.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/static/flatten.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/static/from.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/static/index.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/static/partition.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/static/range.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/sync/static/repeat.js","../webpack://typescript-action/./node_modules/linq-to-typescript/commonjs/types/index.js","../webpack://typescript-action/./node_modules/lru-cache/index.js","../webpack://typescript-action/./node_modules/node-fetch/lib/index.js","../webpack://typescript-action/./node_modules/once/once.js","../webpack://typescript-action/./node_modules/sax/lib/sax.js","../webpack://typescript-action/./node_modules/semver/classes/comparator.js","../webpack://typescript-action/./node_modules/semver/classes/range.js","../webpack://typescript-action/./node_modules/semver/classes/semver.js","../webpack://typescript-action/./node_modules/semver/functions/clean.js","../webpack://typescript-action/./node_modules/semver/functions/cmp.js","../webpack://typescript-action/./node_modules/semver/functions/coerce.js","../webpack://typescript-action/./node_modules/semver/functions/compare-build.js","../webpack://typescript-action/./node_modules/semver/functions/compare-loose.js","../webpack://typescript-action/./node_modules/semver/functions/compare.js","../webpack://typescript-action/./node_modules/semver/functions/diff.js","../webpack://typescript-action/./node_modules/semver/functions/eq.js","../webpack://typescript-action/./node_modules/semver/functions/gt.js","../webpack://typescript-action/./node_modules/semver/functions/gte.js","../webpack://typescript-action/./node_modules/semver/functions/inc.js","../webpack://typescript-action/./node_modules/semver/functions/lt.js","../webpack://typescript-action/./node_modules/semver/functions/lte.js","../webpack://typescript-action/./node_modules/semver/functions/major.js","../webpack://typescript-action/./node_modules/semver/functions/minor.js","../webpack://typescript-action/./node_modules/semver/functions/neq.js","../webpack://typescript-action/./node_modules/semver/functions/parse.js","../webpack://typescript-action/./node_modules/semver/functions/patch.js","../webpack://typescript-action/./node_modules/semver/functions/prerelease.js","../webpack://typescript-action/./node_modules/semver/functions/rcompare.js","../webpack://typescript-action/./node_modules/semver/functions/rsort.js","../webpack://typescript-action/./node_modules/semver/functions/satisfies.js","../webpack://typescript-action/./node_modules/semver/functions/sort.js","../webpack://typescript-action/./node_modules/semver/functions/valid.js","../webpack://typescript-action/./node_modules/semver/index.js","../webpack://typescript-action/./node_modules/semver/internal/constants.js","../webpack://typescript-action/./node_modules/semver/internal/debug.js","../webpack://typescript-action/./node_modules/semver/internal/identifiers.js","../webpack://typescript-action/./node_modules/semver/internal/parse-options.js","../webpack://typescript-action/./node_modules/semver/internal/re.js","../webpack://typescript-action/./node_modules/semver/ranges/gtr.js","../webpack://typescript-action/./node_modules/semver/ranges/intersects.js","../webpack://typescript-action/./node_modules/semver/ranges/ltr.js","../webpack://typescript-action/./node_modules/semver/ranges/max-satisfying.js","../webpack://typescript-action/./node_modules/semver/ranges/min-satisfying.js","../webpack://typescript-action/./node_modules/semver/ranges/min-version.js","../webpack://typescript-action/./node_modules/semver/ranges/outside.js","../webpack://typescript-action/./node_modules/semver/ranges/simplify.js","../webpack://typescript-action/./node_modules/semver/ranges/subset.js","../webpack://typescript-action/./node_modules/semver/ranges/to-comparators.js","../webpack://typescript-action/./node_modules/semver/ranges/valid.js","../webpack://typescript-action/./node_modules/tslib/tslib.js","../webpack://typescript-action/./node_modules/tunnel/index.js","../webpack://typescript-action/./node_modules/tunnel/lib/tunnel.js","../webpack://typescript-action/./node_modules/universal-user-agent/dist-node/index.js","../webpack://typescript-action/./node_modules/wrappy/wrappy.js","../webpack://typescript-action/./node_modules/xml2js/lib/bom.js","../webpack://typescript-action/./node_modules/xml2js/lib/builder.js","../webpack://typescript-action/./node_modules/xml2js/lib/defaults.js","../webpack://typescript-action/./node_modules/xml2js/lib/parser.js","../webpack://typescript-action/./node_modules/xml2js/lib/processors.js","../webpack://typescript-action/./node_modules/xml2js/lib/xml2js.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/DocumentPosition.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/NodeType.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/Utility.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/WriterState.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLAttribute.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLCData.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLCharacterData.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLComment.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDOMConfiguration.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDOMImplementation.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDOMStringList.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDTDAttList.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDTDElement.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDTDEntity.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDTDNotation.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDeclaration.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDocType.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDocument.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDocumentCB.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLDummy.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLElement.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLNamedNodeMap.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLNode.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLNodeList.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLRaw.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLStreamWriter.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLStringWriter.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLStringifier.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLText.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/XMLWriterBase.js","../webpack://typescript-action/./node_modules/xmlbuilder/lib/index.js","../webpack://typescript-action/./node_modules/yallist/iterator.js","../webpack://typescript-action/./node_modules/yallist/yallist.js","../webpack://typescript-action/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://typescript-action/external \"assert\"","../webpack://typescript-action/external \"events\"","../webpack://typescript-action/external \"fs\"","../webpack://typescript-action/external \"http\"","../webpack://typescript-action/external \"https\"","../webpack://typescript-action/external \"net\"","../webpack://typescript-action/external \"os\"","../webpack://typescript-action/external \"path\"","../webpack://typescript-action/external \"stream\"","../webpack://typescript-action/external \"string_decoder\"","../webpack://typescript-action/external \"timers\"","../webpack://typescript-action/external \"tls\"","../webpack://typescript-action/external \"url\"","../webpack://typescript-action/external \"util\"","../webpack://typescript-action/external \"zlib\"","../webpack://typescript-action/webpack/bootstrap","../webpack://typescript-action/webpack/runtime/compat","../webpack://typescript-action/webpack/startup"],"sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ServicePaths = exports.VersionFiles = void 0;\r\nconst core_1 = require(\"@actions/core\");\r\nconst github_1 = require(\"@actions/github\");\r\nconst linq_to_typescript_1 = require(\"linq-to-typescript\");\r\nconst semver_1 = require(\"semver\");\r\nconst path_1 = require(\"path\");\r\nconst fs_1 = require(\"fs\");\r\nconst YAML = require('js-yaml');\r\nconst path = require('path');\r\nconst xml2js = require('xml2js');\r\nfunction getLatestVersion(octo, service, owner, repo, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const { repository } = yield octo.graphql(`\r\n  {\r\n    repository(owner: \"${owner}\", name: \"${repo}\") {\r\n      refs(refPrefix: \"refs/tags/\", query: \"${service}\", orderBy: {field: TAG_COMMIT_DATE, direction: ASC}, last: 1) {\r\n        edges {\r\n          node {\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`);\r\n        const result = repository.refs.edges[0].node.name.replace(`${service}/v`, '');\r\n        core_1.debug(`Latest tag for service ${service}: ${result}`);\r\n        return result;\r\n    });\r\n}\r\nfunction bump(version, release_type) {\r\n    return semver_1.inc(version, release_type);\r\n}\r\nfunction run() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            const pull_number = core_1.getInput('pull_number', { required: true });\r\n            const owner = core_1.getInput('owner', { required: true });\r\n            const repo = core_1.getInput('repo', { required: true });\r\n            const token = core_1.getInput('token', { required: true });\r\n            const workingDirectory = core_1.getInput('working_directory', { required: true });\r\n            const servicesPath = core_1.getInput('services_path');\r\n            const customServicesPaths = core_1.getMultilineInput('custom_services_path').map(function (x) {\r\n                return {\r\n                    name: x.split(',')[0],\r\n                    path: x.split(':')[1],\r\n                    versionFiles: new Array()\r\n                };\r\n            });\r\n            core_1.debug(`Context:\\n ${JSON.stringify(github_1.context)}`);\r\n            core_1.debug(`Context repo owner: ${github_1.context.repo.owner}`);\r\n            core_1.debug(`Checking labels for pull request number ${pull_number}`);\r\n            const octokit = github_1.getOctokit(token);\r\n            const pull = yield octokit.request('GET /repos/{owner}/{repo}/pulls/{pull_number}', {\r\n                owner,\r\n                repo,\r\n                pull_number: Number(pull_number)\r\n            });\r\n            const tags = pull.data.labels.map(a => a == null ? '' : a.name);\r\n            const versionPriorities = ['major', 'minor', 'patch'];\r\n            const bumpLabels = tags.filter(x => versionPriorities.some(x.includes.bind(x)));\r\n            core_1.debug(`Versioning Labels ${JSON.stringify(bumpLabels)}`);\r\n            const versionsByService = linq_to_typescript_1.from(bumpLabels).groupBy(function (x) { return x.split(':')[0]; })\r\n                .select(function (x) {\r\n                return {\r\n                    name: x.key,\r\n                    releaseType: JSON.stringify(x.select(x => x.split(':')[1]).toArray().sort(function (a, b) {\r\n                        const aKey = versionPriorities.indexOf(a);\r\n                        const bKey = versionPriorities.indexOf(b);\r\n                        return aKey - bKey;\r\n                    })[0]).replace(/['\"]+/g, ''),\r\n                    currentVersion: null,\r\n                    nextVersion: null,\r\n                    paths: setServicePath(x.key, workingDirectory, servicesPath, customServicesPaths)\r\n                };\r\n            }).toArray();\r\n            if (versionsByService.length === 0) {\r\n                core_1.debug('No service to bump');\r\n                return;\r\n            }\r\n            let itemsProcessed = 0;\r\n            versionsByService.forEach(function (service) {\r\n                core_1.debug(`Getting current version for ${service.name}`);\r\n                getLatestVersion(octokit, service.name, owner, repo, token)\r\n                    .then((latest_version) => {\r\n                    service.currentVersion = latest_version;\r\n                    service.nextVersion = bump(latest_version, service.releaseType);\r\n                    core_1.debug(`Bumped service ${service.name} version from ${latest_version} to ${service.nextVersion}`);\r\n                    editVersionFiles(service);\r\n                    itemsProcessed++;\r\n                    if (itemsProcessed === versionsByService.length) {\r\n                        core_1.setOutput('versions_by_service', versionsByService);\r\n                    }\r\n                }).catch((error) => {\r\n                    core_1.debug(error);\r\n                });\r\n            });\r\n        }\r\n        catch (error) {\r\n            core_1.setFailed(error.message);\r\n        }\r\n    });\r\n}\r\nrun();\r\nfunction editVersionFiles(service) {\r\n    const filesTypesAndPathsToBumpPath = path_1.join(core_1.getInput('services_path'), service.name);\r\n}\r\nfunction setDotNetCoreBuildPropVersion(path, version, serviceName) {\r\n    try {\r\n        const data = fs_1.readFileSync(path, { encoding: \"utf8\" });\r\n        // convert XML data to JSON object\r\n        xml2js.parseString(data, (err, result) => {\r\n            if (err) {\r\n                throw err;\r\n            }\r\n            result.Project.PropertyGroup[0].Version = version;\r\n            const builder = new xml2js.Builder({ headless: true });\r\n            const xml = builder.buildObject(result);\r\n            fs_1.writeFileSync(path, xml);\r\n            core_1.debug(`Service ${serviceName}: Updated .Net Core BuildPropVersion. Path: ${path} with ${xml}`);\r\n        });\r\n    }\r\n    catch (err) {\r\n        throw new Error(`An error occured trying to update helm chart for service ${serviceName} - err: ${err}`);\r\n    }\r\n}\r\nfunction setHelmChartAppVersion(path, version, serviceName) {\r\n    try {\r\n        const file = fs_1.readFileSync(path, { encoding: \"utf8\" });\r\n        let doc = YAML.load(file);\r\n        doc.appVersion = version;\r\n        fs_1.writeFileSync(path, YAML.dump(doc));\r\n        core_1.debug(`Service ${serviceName}: Updated Helm Chart appVersion to ${version}. Path: ${path}`);\r\n    }\r\n    catch (err) {\r\n        throw new Error(`An error occured trying to update helm chart for service ${serviceName} - err: ${err}`);\r\n    }\r\n}\r\nfunction getVersionFilesTypesAndPaths(serviceName, metadataFilePath) {\r\n    let versionFiles = new Array();\r\n    try {\r\n        const doc = YAML.load(fs_1.readFileSync(metadataFilePath, { encoding: \"utf8\" }));\r\n        doc.versionFiles.forEach((element) => {\r\n            core_1.debug(`Versioning metadata for ${serviceName}: ${element.type} : ${element.path}`);\r\n            versionFiles.push(new VersionFiles(element.type, element.path));\r\n        });\r\n        return versionFiles;\r\n    }\r\n    catch (err) {\r\n        if (err) {\r\n            if (err && err.code == 'ENOENT') {\r\n                core_1.warning(`Versioning file metadata not found for ${serviceName}.\r\n        Searched Path: ${metadataFilePath}, the service will be released without any version files changed \\n ${err}`);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\nfunction setServicePath(name, workingDirectory, servicePath, customServicePaths) {\r\n    core_1.debug(`Setting service path for ${name}`);\r\n    let servicePaths = new ServicePaths();\r\n    const customeServiceNames = customServicePaths.map(function (x) { return x.name; });\r\n    const customServicePathIndex = customeServiceNames.indexOf(name);\r\n    let serviceRootPath;\r\n    if (customServicePathIndex === -1) {\r\n        serviceRootPath = path.join(workingDirectory, servicePath, name);\r\n    }\r\n    else {\r\n        core_1.debug(`Setting custom path for service ${name} to ${serviceRootPath}`);\r\n        serviceRootPath = path.join(workingDirectory, customServicePaths[customServicePathIndex].path, name);\r\n    }\r\n    if (!fs_1.existsSync(serviceRootPath)) {\r\n        throw new Error(`An expected service root folder is missing. Service name: ${name}, Path: ${serviceRootPath}\\nMake sure to checkout your repo`);\r\n    }\r\n    servicePaths.path = serviceRootPath;\r\n    core_1.debug(`Root folder for service ${name} has been set to ${serviceRootPath}`);\r\n    servicePaths.versionFiles = getVersionFilesTypesAndPaths(name, path_1.join(serviceRootPath, 'versioning.yaml'));\r\n    return servicePaths;\r\n}\r\nclass VersionFiles {\r\n    constructor(type = null, path = null) {\r\n        this.type = type;\r\n        this.path = path;\r\n    }\r\n}\r\nexports.VersionFiles = VersionFiles;\r\nclass ServicePaths {\r\n    constructor(name = null, path = null, versionFiles = null) {\r\n        this.name = name;\r\n        this.path = path;\r\n        this.versionFiles = versionFiles;\r\n    }\r\n}\r\nexports.ServicePaths = ServicePaths;\r\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Context = void 0;\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nclass Context {\n    /**\n     * Hydrate the context from the environment\n     */\n    constructor() {\n        var _a, _b, _c;\n        this.payload = {};\n        if (process.env.GITHUB_EVENT_PATH) {\n            if (fs_1.existsSync(process.env.GITHUB_EVENT_PATH)) {\n                this.payload = JSON.parse(fs_1.readFileSync(process.env.GITHUB_EVENT_PATH, { encoding: 'utf8' }));\n            }\n            else {\n                const path = process.env.GITHUB_EVENT_PATH;\n                process.stdout.write(`GITHUB_EVENT_PATH ${path} does not exist${os_1.EOL}`);\n            }\n        }\n        this.eventName = process.env.GITHUB_EVENT_NAME;\n        this.sha = process.env.GITHUB_SHA;\n        this.ref = process.env.GITHUB_REF;\n        this.workflow = process.env.GITHUB_WORKFLOW;\n        this.action = process.env.GITHUB_ACTION;\n        this.actor = process.env.GITHUB_ACTOR;\n        this.job = process.env.GITHUB_JOB;\n        this.runNumber = parseInt(process.env.GITHUB_RUN_NUMBER, 10);\n        this.runId = parseInt(process.env.GITHUB_RUN_ID, 10);\n        this.apiUrl = (_a = process.env.GITHUB_API_URL) !== null && _a !== void 0 ? _a : `https://api.github.com`;\n        this.serverUrl = (_b = process.env.GITHUB_SERVER_URL) !== null && _b !== void 0 ? _b : `https://github.com`;\n        this.graphqlUrl = (_c = process.env.GITHUB_GRAPHQL_URL) !== null && _c !== void 0 ? _c : `https://api.github.com/graphql`;\n    }\n    get issue() {\n        const payload = this.payload;\n        return Object.assign(Object.assign({}, this.repo), { number: (payload.issue || payload.pull_request || payload).number });\n    }\n    get repo() {\n        if (process.env.GITHUB_REPOSITORY) {\n            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');\n            return { owner, repo };\n        }\n        if (this.payload.repository) {\n            return {\n                owner: this.payload.repository.owner.login,\n                repo: this.payload.repository.name\n            };\n        }\n        throw new Error(\"context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'\");\n    }\n}\nexports.Context = Context;\n//# sourceMappingURL=context.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOctokit = exports.context = void 0;\nconst Context = __importStar(require(\"./context\"));\nconst utils_1 = require(\"./utils\");\nexports.context = new Context.Context();\n/**\n * Returns a hydrated octokit ready to use for GitHub Actions\n *\n * @param     token    the repo PAT or GITHUB_TOKEN\n * @param     options  other options to set\n */\nfunction getOctokit(token, options) {\n    return new utils_1.GitHub(utils_1.getOctokitOptions(token, options));\n}\nexports.getOctokit = getOctokit;\n//# sourceMappingURL=github.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApiBaseUrl = exports.getProxyAgent = exports.getAuthString = void 0;\nconst httpClient = __importStar(require(\"@actions/http-client\"));\nfunction getAuthString(token, options) {\n    if (!token && !options.auth) {\n        throw new Error('Parameter token or opts.auth is required');\n    }\n    else if (token && options.auth) {\n        throw new Error('Parameters token and opts.auth may not both be specified');\n    }\n    return typeof options.auth === 'string' ? options.auth : `token ${token}`;\n}\nexports.getAuthString = getAuthString;\nfunction getProxyAgent(destinationUrl) {\n    const hc = new httpClient.HttpClient();\n    return hc.getAgent(destinationUrl);\n}\nexports.getProxyAgent = getProxyAgent;\nfunction getApiBaseUrl() {\n    return process.env['GITHUB_API_URL'] || 'https://api.github.com';\n}\nexports.getApiBaseUrl = getApiBaseUrl;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOctokitOptions = exports.GitHub = exports.context = void 0;\nconst Context = __importStar(require(\"./context\"));\nconst Utils = __importStar(require(\"./internal/utils\"));\n// octokit + plugins\nconst core_1 = require(\"@octokit/core\");\nconst plugin_rest_endpoint_methods_1 = require(\"@octokit/plugin-rest-endpoint-methods\");\nconst plugin_paginate_rest_1 = require(\"@octokit/plugin-paginate-rest\");\nexports.context = new Context.Context();\nconst baseUrl = Utils.getApiBaseUrl();\nconst defaults = {\n    baseUrl,\n    request: {\n        agent: Utils.getProxyAgent(baseUrl)\n    }\n};\nexports.GitHub = core_1.Octokit.plugin(plugin_rest_endpoint_methods_1.restEndpointMethods, plugin_paginate_rest_1.paginateRest).defaults(defaults);\n/**\n * Convience function to correctly format Octokit Options to pass into the constructor.\n *\n * @param     token    the repo PAT or GITHUB_TOKEN\n * @param     options  other options to set\n */\nfunction getOctokitOptions(token, options) {\n    const opts = Object.assign({}, options || {}); // Shallow clone - don't mutate the object provided by the caller\n    // Auth\n    const auth = Utils.getAuthString(token, opts);\n    if (auth) {\n        opts.auth = auth;\n    }\n    return opts;\n}\nexports.getOctokitOptions = getOctokitOptions;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst pm = require(\"./proxy\");\nlet tunnel;\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return new Promise(async (resolve, reject) => {\n            let output = Buffer.alloc(0);\n            this.message.on('data', (chunk) => {\n                output = Buffer.concat([output, chunk]);\n            });\n            this.message.on('end', () => {\n                resolve(output.toString());\n            });\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    let parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n    }\n    get(requestUrl, additionalHeaders) {\n        return this.request('GET', requestUrl, null, additionalHeaders || {});\n    }\n    del(requestUrl, additionalHeaders) {\n        return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return this.request('POST', requestUrl, data, additionalHeaders || {});\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return this.request('PUT', requestUrl, data, additionalHeaders || {});\n    }\n    head(requestUrl, additionalHeaders) {\n        return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return this.request(verb, requestUrl, stream, additionalHeaders);\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    async getJson(requestUrl, additionalHeaders = {}) {\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        let res = await this.get(requestUrl, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async postJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.post(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async putJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.put(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async patchJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.patch(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    async request(verb, requestUrl, data, headers) {\n        if (this._disposed) {\n            throw new Error('Client has already been disposed.');\n        }\n        let parsedUrl = new URL(requestUrl);\n        let info = this._prepareRequest(verb, parsedUrl, headers);\n        // Only perform retries on reads since writes may not be idempotent.\n        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1\n            ? this._maxRetries + 1\n            : 1;\n        let numTries = 0;\n        let response;\n        while (numTries < maxTries) {\n            response = await this.requestRaw(info, data);\n            // Check if it's an authentication challenge\n            if (response &&\n                response.message &&\n                response.message.statusCode === HttpCodes.Unauthorized) {\n                let authenticationHandler;\n                for (let i = 0; i < this.handlers.length; i++) {\n                    if (this.handlers[i].canHandleAuthentication(response)) {\n                        authenticationHandler = this.handlers[i];\n                        break;\n                    }\n                }\n                if (authenticationHandler) {\n                    return authenticationHandler.handleAuthentication(this, info, data);\n                }\n                else {\n                    // We have received an unauthorized response but have no handlers to handle it.\n                    // Let the response return to the caller.\n                    return response;\n                }\n            }\n            let redirectsRemaining = this._maxRedirects;\n            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&\n                this._allowRedirects &&\n                redirectsRemaining > 0) {\n                const redirectUrl = response.message.headers['location'];\n                if (!redirectUrl) {\n                    // if there's no location to redirect to, we won't\n                    break;\n                }\n                let parsedRedirectUrl = new URL(redirectUrl);\n                if (parsedUrl.protocol == 'https:' &&\n                    parsedUrl.protocol != parsedRedirectUrl.protocol &&\n                    !this._allowRedirectDowngrade) {\n                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                }\n                // we need to finish reading the response before reassigning response\n                // which will leak the open socket.\n                await response.readBody();\n                // strip authorization header if redirected to a different hostname\n                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                    for (let header in headers) {\n                        // header names are case insensitive\n                        if (header.toLowerCase() === 'authorization') {\n                            delete headers[header];\n                        }\n                    }\n                }\n                // let's make the request with the new redirectUrl\n                info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                response = await this.requestRaw(info, data);\n                redirectsRemaining--;\n            }\n            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {\n                // If not a retry code, return immediately instead of retrying\n                return response;\n            }\n            numTries += 1;\n            if (numTries < maxTries) {\n                await response.readBody();\n                await this._performExponentialBackoff(numTries);\n            }\n        }\n        return response;\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return new Promise((resolve, reject) => {\n            let callbackForResult = function (err, res) {\n                if (err) {\n                    reject(err);\n                }\n                resolve(res);\n            };\n            this.requestRawWithCallback(info, data, callbackForResult);\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        let socket;\n        if (typeof data === 'string') {\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        let handleResult = (err, res) => {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        };\n        let req = info.httpModule.request(info.options, (msg) => {\n            let res = new HttpClientResponse(msg);\n            handleResult(null, res);\n        });\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error('Request timeout: ' + info.options.path), null);\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err, null);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        let parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            this.handlers.forEach(handler => {\n                handler.prepareRequest(info.options);\n            });\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        let proxyUrl = pm.getProxyUrl(parsedUrl);\n        let useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (!!agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (!!this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        if (useProxy) {\n            // If using proxy, need tunnel\n            if (!tunnel) {\n                tunnel = require('tunnel');\n            }\n            const agentOptions = {\n                maxSockets: maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: {\n                    ...((proxyUrl.username || proxyUrl.password) && {\n                        proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                    }),\n                    host: proxyUrl.hostname,\n                    port: proxyUrl.port\n                }\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n        return new Promise(resolve => setTimeout(() => resolve(), ms));\n    }\n    static dateTimeDeserializer(key, value) {\n        if (typeof value === 'string') {\n            let a = new Date(value);\n            if (!isNaN(a.valueOf())) {\n                return a;\n            }\n        }\n        return value;\n    }\n    async _processResponse(res, options) {\n        return new Promise(async (resolve, reject) => {\n            const statusCode = res.message.statusCode;\n            const response = {\n                statusCode: statusCode,\n                result: null,\n                headers: {}\n            };\n            // not found leads to null obj returned\n            if (statusCode == HttpCodes.NotFound) {\n                resolve(response);\n            }\n            let obj;\n            let contents;\n            // get the result from the body\n            try {\n                contents = await res.readBody();\n                if (contents && contents.length > 0) {\n                    if (options && options.deserializeDates) {\n                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);\n                    }\n                    else {\n                        obj = JSON.parse(contents);\n                    }\n                    response.result = obj;\n                }\n                response.headers = res.message.headers;\n            }\n            catch (err) {\n                // Invalid resource (contents not json);  leaving result obj null\n            }\n            // note that 3xx redirects are handled by the http layer.\n            if (statusCode > 299) {\n                let msg;\n                // if exception/error in body, attempt to get better error\n                if (obj && obj.message) {\n                    msg = obj.message;\n                }\n                else if (contents && contents.length > 0) {\n                    // it may be the case that the exception is in the body message as string\n                    msg = contents;\n                }\n                else {\n                    msg = 'Failed request: (' + statusCode + ')';\n                }\n                let err = new HttpClientError(msg, statusCode);\n                err.result = response.result;\n                reject(err);\n            }\n            else {\n                resolve(response);\n            }\n        });\n    }\n}\nexports.HttpClient = HttpClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getProxyUrl(reqUrl) {\n    let usingSsl = reqUrl.protocol === 'https:';\n    let proxyUrl;\n    if (checkBypass(reqUrl)) {\n        return proxyUrl;\n    }\n    let proxyVar;\n    if (usingSsl) {\n        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n    }\n    else {\n        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];\n    }\n    if (proxyVar) {\n        proxyUrl = new URL(proxyVar);\n    }\n    return proxyUrl;\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    let upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (let upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nasync function auth(token) {\n  const tokenType = token.split(/\\./).length === 3 ? \"app\" : /^v\\d+\\./.test(token) ? \"installation\" : \"oauth\";\n  return {\n    type: \"token\",\n    token: token,\n    tokenType\n  };\n}\n\n/**\n * Prefix token for usage in the Authorization header\n *\n * @param token OAuth token or JSON Web Token\n */\nfunction withAuthorizationPrefix(token) {\n  if (token.split(/\\./).length === 3) {\n    return `bearer ${token}`;\n  }\n\n  return `token ${token}`;\n}\n\nasync function hook(token, request, route, parameters) {\n  const endpoint = request.endpoint.merge(route, parameters);\n  endpoint.headers.authorization = withAuthorizationPrefix(token);\n  return request(endpoint);\n}\n\nconst createTokenAuth = function createTokenAuth(token) {\n  if (!token) {\n    throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n  }\n\n  if (typeof token !== \"string\") {\n    throw new Error(\"[@octokit/auth-token] Token passed to createTokenAuth is not a string\");\n  }\n\n  token = token.replace(/^(token|bearer) +/i, \"\");\n  return Object.assign(auth.bind(null, token), {\n    hook: hook.bind(null, token)\n  });\n};\n\nexports.createTokenAuth = createTokenAuth;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar universalUserAgent = require('universal-user-agent');\nvar beforeAfterHook = require('before-after-hook');\nvar request = require('@octokit/request');\nvar graphql = require('@octokit/graphql');\nvar authToken = require('@octokit/auth-token');\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nconst VERSION = \"3.5.1\";\n\nconst _excluded = [\"authStrategy\"];\nclass Octokit {\n  constructor(options = {}) {\n    const hook = new beforeAfterHook.Collection();\n    const requestDefaults = {\n      baseUrl: request.request.endpoint.DEFAULTS.baseUrl,\n      headers: {},\n      request: Object.assign({}, options.request, {\n        // @ts-ignore internal usage only, no need to type\n        hook: hook.bind(null, \"request\")\n      }),\n      mediaType: {\n        previews: [],\n        format: \"\"\n      }\n    }; // prepend default user agent with `options.userAgent` if set\n\n    requestDefaults.headers[\"user-agent\"] = [options.userAgent, `octokit-core.js/${VERSION} ${universalUserAgent.getUserAgent()}`].filter(Boolean).join(\" \");\n\n    if (options.baseUrl) {\n      requestDefaults.baseUrl = options.baseUrl;\n    }\n\n    if (options.previews) {\n      requestDefaults.mediaType.previews = options.previews;\n    }\n\n    if (options.timeZone) {\n      requestDefaults.headers[\"time-zone\"] = options.timeZone;\n    }\n\n    this.request = request.request.defaults(requestDefaults);\n    this.graphql = graphql.withCustomRequest(this.request).defaults(requestDefaults);\n    this.log = Object.assign({\n      debug: () => {},\n      info: () => {},\n      warn: console.warn.bind(console),\n      error: console.error.bind(console)\n    }, options.log);\n    this.hook = hook; // (1) If neither `options.authStrategy` nor `options.auth` are set, the `octokit` instance\n    //     is unauthenticated. The `this.auth()` method is a no-op and no request hook is registered.\n    // (2) If only `options.auth` is set, use the default token authentication strategy.\n    // (3) If `options.authStrategy` is set then use it and pass in `options.auth`. Always pass own request as many strategies accept a custom request instance.\n    // TODO: type `options.auth` based on `options.authStrategy`.\n\n    if (!options.authStrategy) {\n      if (!options.auth) {\n        // (1)\n        this.auth = async () => ({\n          type: \"unauthenticated\"\n        });\n      } else {\n        // (2)\n        const auth = authToken.createTokenAuth(options.auth); // @ts-ignore  ¯\\_(ツ)_/¯\n\n        hook.wrap(\"request\", auth.hook);\n        this.auth = auth;\n      }\n    } else {\n      const {\n        authStrategy\n      } = options,\n            otherOptions = _objectWithoutProperties(options, _excluded);\n\n      const auth = authStrategy(Object.assign({\n        request: this.request,\n        log: this.log,\n        // we pass the current octokit instance as well as its constructor options\n        // to allow for authentication strategies that return a new octokit instance\n        // that shares the same internal state as the current one. The original\n        // requirement for this was the \"event-octokit\" authentication strategy\n        // of https://github.com/probot/octokit-auth-probot.\n        octokit: this,\n        octokitOptions: otherOptions\n      }, options.auth)); // @ts-ignore  ¯\\_(ツ)_/¯\n\n      hook.wrap(\"request\", auth.hook);\n      this.auth = auth;\n    } // apply plugins\n    // https://stackoverflow.com/a/16345172\n\n\n    const classConstructor = this.constructor;\n    classConstructor.plugins.forEach(plugin => {\n      Object.assign(this, plugin(this, options));\n    });\n  }\n\n  static defaults(defaults) {\n    const OctokitWithDefaults = class extends this {\n      constructor(...args) {\n        const options = args[0] || {};\n\n        if (typeof defaults === \"function\") {\n          super(defaults(options));\n          return;\n        }\n\n        super(Object.assign({}, defaults, options, options.userAgent && defaults.userAgent ? {\n          userAgent: `${options.userAgent} ${defaults.userAgent}`\n        } : null));\n      }\n\n    };\n    return OctokitWithDefaults;\n  }\n  /**\n   * Attach a plugin (or many) to your Octokit instance.\n   *\n   * @example\n   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n   */\n\n\n  static plugin(...newPlugins) {\n    var _a;\n\n    const currentPlugins = this.plugins;\n    const NewOctokit = (_a = class extends this {}, _a.plugins = currentPlugins.concat(newPlugins.filter(plugin => !currentPlugins.includes(plugin))), _a);\n    return NewOctokit;\n  }\n\n}\nOctokit.VERSION = VERSION;\nOctokit.plugins = [];\n\nexports.Octokit = Octokit;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar isPlainObject = require('is-plain-object');\nvar universalUserAgent = require('universal-user-agent');\n\nfunction lowercaseKeys(object) {\n  if (!object) {\n    return {};\n  }\n\n  return Object.keys(object).reduce((newObj, key) => {\n    newObj[key.toLowerCase()] = object[key];\n    return newObj;\n  }, {});\n}\n\nfunction mergeDeep(defaults, options) {\n  const result = Object.assign({}, defaults);\n  Object.keys(options).forEach(key => {\n    if (isPlainObject.isPlainObject(options[key])) {\n      if (!(key in defaults)) Object.assign(result, {\n        [key]: options[key]\n      });else result[key] = mergeDeep(defaults[key], options[key]);\n    } else {\n      Object.assign(result, {\n        [key]: options[key]\n      });\n    }\n  });\n  return result;\n}\n\nfunction removeUndefinedProperties(obj) {\n  for (const key in obj) {\n    if (obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n\n  return obj;\n}\n\nfunction merge(defaults, route, options) {\n  if (typeof route === \"string\") {\n    let [method, url] = route.split(\" \");\n    options = Object.assign(url ? {\n      method,\n      url\n    } : {\n      url: method\n    }, options);\n  } else {\n    options = Object.assign({}, route);\n  } // lowercase header names before merging with defaults to avoid duplicates\n\n\n  options.headers = lowercaseKeys(options.headers); // remove properties with undefined values before merging\n\n  removeUndefinedProperties(options);\n  removeUndefinedProperties(options.headers);\n  const mergedOptions = mergeDeep(defaults || {}, options); // mediaType.previews arrays are merged, instead of overwritten\n\n  if (defaults && defaults.mediaType.previews.length) {\n    mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(preview => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews);\n  }\n\n  mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map(preview => preview.replace(/-preview/, \"\"));\n  return mergedOptions;\n}\n\nfunction addQueryParameters(url, parameters) {\n  const separator = /\\?/.test(url) ? \"&\" : \"?\";\n  const names = Object.keys(parameters);\n\n  if (names.length === 0) {\n    return url;\n  }\n\n  return url + separator + names.map(name => {\n    if (name === \"q\") {\n      return \"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\");\n    }\n\n    return `${name}=${encodeURIComponent(parameters[name])}`;\n  }).join(\"&\");\n}\n\nconst urlVariableRegex = /\\{[^}]+\\}/g;\n\nfunction removeNonChars(variableName) {\n  return variableName.replace(/^\\W+|\\W+$/g, \"\").split(/,/);\n}\n\nfunction extractUrlVariableNames(url) {\n  const matches = url.match(urlVariableRegex);\n\n  if (!matches) {\n    return [];\n  }\n\n  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\n\nfunction omit(object, keysToOmit) {\n  return Object.keys(object).filter(option => !keysToOmit.includes(option)).reduce((obj, key) => {\n    obj[key] = object[key];\n    return obj;\n  }, {});\n}\n\n// Based on https://github.com/bramstein/url-template, licensed under BSD\n// TODO: create separate package.\n//\n// Copyright (c) 2012-2014, Bram Stein\n// All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions\n// are met:\n//  1. Redistributions of source code must retain the above copyright\n//     notice, this list of conditions and the following disclaimer.\n//  2. Redistributions in binary form must reproduce the above copyright\n//     notice, this list of conditions and the following disclaimer in the\n//     documentation and/or other materials provided with the distribution.\n//  3. The name of the author may not be used to endorse or promote products\n//     derived from this software without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE AUTHOR \"AS IS\" AND ANY EXPRESS OR IMPLIED\n// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n// EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* istanbul ignore file */\nfunction encodeReserved(str) {\n  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n    if (!/%[0-9A-Fa-f]/.test(part)) {\n      part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n    }\n\n    return part;\n  }).join(\"\");\n}\n\nfunction encodeUnreserved(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n    return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\nfunction encodeValue(operator, value, key) {\n  value = operator === \"+\" || operator === \"#\" ? encodeReserved(value) : encodeUnreserved(value);\n\n  if (key) {\n    return encodeUnreserved(key) + \"=\" + value;\n  } else {\n    return value;\n  }\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n  return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\n\nfunction getValues(context, operator, key, modifier) {\n  var value = context[key],\n      result = [];\n\n  if (isDefined(value) && value !== \"\") {\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n      value = value.toString();\n\n      if (modifier && modifier !== \"*\") {\n        value = value.substring(0, parseInt(modifier, 10));\n      }\n\n      result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n    } else {\n      if (modifier === \"*\") {\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function (value) {\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n          });\n        } else {\n          Object.keys(value).forEach(function (k) {\n            if (isDefined(value[k])) {\n              result.push(encodeValue(operator, value[k], k));\n            }\n          });\n        }\n      } else {\n        const tmp = [];\n\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function (value) {\n            tmp.push(encodeValue(operator, value));\n          });\n        } else {\n          Object.keys(value).forEach(function (k) {\n            if (isDefined(value[k])) {\n              tmp.push(encodeUnreserved(k));\n              tmp.push(encodeValue(operator, value[k].toString()));\n            }\n          });\n        }\n\n        if (isKeyOperator(operator)) {\n          result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n        } else if (tmp.length !== 0) {\n          result.push(tmp.join(\",\"));\n        }\n      }\n    }\n  } else {\n    if (operator === \";\") {\n      if (isDefined(value)) {\n        result.push(encodeUnreserved(key));\n      }\n    } else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n      result.push(encodeUnreserved(key) + \"=\");\n    } else if (value === \"\") {\n      result.push(\"\");\n    }\n  }\n\n  return result;\n}\n\nfunction parseUrl(template) {\n  return {\n    expand: expand.bind(null, template)\n  };\n}\n\nfunction expand(template, context) {\n  var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n  return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n    if (expression) {\n      let operator = \"\";\n      const values = [];\n\n      if (operators.indexOf(expression.charAt(0)) !== -1) {\n        operator = expression.charAt(0);\n        expression = expression.substr(1);\n      }\n\n      expression.split(/,/g).forEach(function (variable) {\n        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n        values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n      });\n\n      if (operator && operator !== \"+\") {\n        var separator = \",\";\n\n        if (operator === \"?\") {\n          separator = \"&\";\n        } else if (operator !== \"#\") {\n          separator = operator;\n        }\n\n        return (values.length !== 0 ? operator : \"\") + values.join(separator);\n      } else {\n        return values.join(\",\");\n      }\n    } else {\n      return encodeReserved(literal);\n    }\n  });\n}\n\nfunction parse(options) {\n  // https://fetch.spec.whatwg.org/#methods\n  let method = options.method.toUpperCase(); // replace :varname with {varname} to make it RFC 6570 compatible\n\n  let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n  let headers = Object.assign({}, options.headers);\n  let body;\n  let parameters = omit(options, [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"mediaType\"]); // extract variable names from URL to calculate remaining variables later\n\n  const urlVariableNames = extractUrlVariableNames(url);\n  url = parseUrl(url).expand(parameters);\n\n  if (!/^http/.test(url)) {\n    url = options.baseUrl + url;\n  }\n\n  const omittedParameters = Object.keys(options).filter(option => urlVariableNames.includes(option)).concat(\"baseUrl\");\n  const remainingParameters = omit(parameters, omittedParameters);\n  const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n\n  if (!isBinaryRequest) {\n    if (options.mediaType.format) {\n      // e.g. application/vnd.github.v3+json => application/vnd.github.v3.raw\n      headers.accept = headers.accept.split(/,/).map(preview => preview.replace(/application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`)).join(\",\");\n    }\n\n    if (options.mediaType.previews.length) {\n      const previewsFromAcceptHeader = headers.accept.match(/[\\w-]+(?=-preview)/g) || [];\n      headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map(preview => {\n        const format = options.mediaType.format ? `.${options.mediaType.format}` : \"+json\";\n        return `application/vnd.github.${preview}-preview${format}`;\n      }).join(\",\");\n    }\n  } // for GET/HEAD requests, set URL query parameters from remaining parameters\n  // for PATCH/POST/PUT/DELETE requests, set request body from remaining parameters\n\n\n  if ([\"GET\", \"HEAD\"].includes(method)) {\n    url = addQueryParameters(url, remainingParameters);\n  } else {\n    if (\"data\" in remainingParameters) {\n      body = remainingParameters.data;\n    } else {\n      if (Object.keys(remainingParameters).length) {\n        body = remainingParameters;\n      } else {\n        headers[\"content-length\"] = 0;\n      }\n    }\n  } // default content-type for JSON if body is set\n\n\n  if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n    headers[\"content-type\"] = \"application/json; charset=utf-8\";\n  } // GitHub expects 'content-length: 0' header for PUT/PATCH requests without body.\n  // fetch does not allow to set `content-length` header, but we can set body to an empty string\n\n\n  if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n    body = \"\";\n  } // Only return body/request keys if present\n\n\n  return Object.assign({\n    method,\n    url,\n    headers\n  }, typeof body !== \"undefined\" ? {\n    body\n  } : null, options.request ? {\n    request: options.request\n  } : null);\n}\n\nfunction endpointWithDefaults(defaults, route, options) {\n  return parse(merge(defaults, route, options));\n}\n\nfunction withDefaults(oldDefaults, newDefaults) {\n  const DEFAULTS = merge(oldDefaults, newDefaults);\n  const endpoint = endpointWithDefaults.bind(null, DEFAULTS);\n  return Object.assign(endpoint, {\n    DEFAULTS,\n    defaults: withDefaults.bind(null, DEFAULTS),\n    merge: merge.bind(null, DEFAULTS),\n    parse\n  });\n}\n\nconst VERSION = \"6.0.12\";\n\nconst userAgent = `octokit-endpoint.js/${VERSION} ${universalUserAgent.getUserAgent()}`; // DEFAULTS has all properties set that EndpointOptions has, except url.\n// So we use RequestParameters and add method as additional required property.\n\nconst DEFAULTS = {\n  method: \"GET\",\n  baseUrl: \"https://api.github.com\",\n  headers: {\n    accept: \"application/vnd.github.v3+json\",\n    \"user-agent\": userAgent\n  },\n  mediaType: {\n    format: \"\",\n    previews: []\n  }\n};\n\nconst endpoint = withDefaults(null, DEFAULTS);\n\nexports.endpoint = endpoint;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar request = require('@octokit/request');\nvar universalUserAgent = require('universal-user-agent');\n\nconst VERSION = \"4.6.4\";\n\nclass GraphqlError extends Error {\n  constructor(request, response) {\n    const message = response.data.errors[0].message;\n    super(message);\n    Object.assign(this, response.data);\n    Object.assign(this, {\n      headers: response.headers\n    });\n    this.name = \"GraphqlError\";\n    this.request = request; // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n\n}\n\nconst NON_VARIABLE_OPTIONS = [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"query\", \"mediaType\"];\nconst FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nconst GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request, query, options) {\n  if (options) {\n    if (typeof query === \"string\" && \"query\" in options) {\n      return Promise.reject(new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`));\n    }\n\n    for (const key in options) {\n      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;\n      return Promise.reject(new Error(`[@octokit/graphql] \"${key}\" cannot be used as variable name`));\n    }\n  }\n\n  const parsedOptions = typeof query === \"string\" ? Object.assign({\n    query\n  }, options) : query;\n  const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n\n    if (!result.variables) {\n      result.variables = {};\n    }\n\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {}); // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix\n  // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451\n\n  const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;\n\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n\n  return request(requestOptions).then(response => {\n    if (response.data.errors) {\n      const headers = {};\n\n      for (const key of Object.keys(response.headers)) {\n        headers[key] = response.headers[key];\n      }\n\n      throw new GraphqlError(requestOptions, {\n        headers,\n        data: response.data\n      });\n    }\n\n    return response.data.data;\n  });\n}\n\nfunction withDefaults(request$1, newDefaults) {\n  const newRequest = request$1.defaults(newDefaults);\n\n  const newApi = (query, options) => {\n    return graphql(newRequest, query, options);\n  };\n\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: request.request.endpoint\n  });\n}\n\nconst graphql$1 = withDefaults(request.request, {\n  headers: {\n    \"user-agent\": `octokit-graphql.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\n\nexports.graphql = graphql$1;\nexports.withCustomRequest = withCustomRequest;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst VERSION = \"2.15.1\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n/**\n * Some “list” response that can be paginated have a different response structure\n *\n * They have a `total_count` key in the response (search also has `incomplete_results`,\n * /installation/repositories also has `repository_selection`), as well as a key with\n * the list of the items which name varies from endpoint to endpoint.\n *\n * Octokit normalizes these responses so that paginated results are always returned following\n * the same structure. One challenge is that if the list response has only one page, no Link\n * header is provided, so this header alone is not sufficient to check wether a response is\n * paginated or not.\n *\n * We check if a \"total_count\" key is present in the response data, but also make sure that\n * a \"url\" property is not, as the \"Get the combined status for a specific ref\" endpoint would\n * otherwise match: https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref\n */\nfunction normalizePaginatedListResponse(response) {\n  // endpoints can respond with 204 if repository is empty\n  if (!response.data) {\n    return _objectSpread2(_objectSpread2({}, response), {}, {\n      data: []\n    });\n  }\n\n  const responseNeedsNormalization = \"total_count\" in response.data && !(\"url\" in response.data);\n  if (!responseNeedsNormalization) return response; // keep the additional properties intact as there is currently no other way\n  // to retrieve the same information.\n\n  const incompleteResults = response.data.incomplete_results;\n  const repositorySelection = response.data.repository_selection;\n  const totalCount = response.data.total_count;\n  delete response.data.incomplete_results;\n  delete response.data.repository_selection;\n  delete response.data.total_count;\n  const namespaceKey = Object.keys(response.data)[0];\n  const data = response.data[namespaceKey];\n  response.data = data;\n\n  if (typeof incompleteResults !== \"undefined\") {\n    response.data.incomplete_results = incompleteResults;\n  }\n\n  if (typeof repositorySelection !== \"undefined\") {\n    response.data.repository_selection = repositorySelection;\n  }\n\n  response.data.total_count = totalCount;\n  return response;\n}\n\nfunction iterator(octokit, route, parameters) {\n  const options = typeof route === \"function\" ? route.endpoint(parameters) : octokit.request.endpoint(route, parameters);\n  const requestMethod = typeof route === \"function\" ? route : octokit.request;\n  const method = options.method;\n  const headers = options.headers;\n  let url = options.url;\n  return {\n    [Symbol.asyncIterator]: () => ({\n      async next() {\n        if (!url) return {\n          done: true\n        };\n\n        try {\n          const response = await requestMethod({\n            method,\n            url,\n            headers\n          });\n          const normalizedResponse = normalizePaginatedListResponse(response); // `response.headers.link` format:\n          // '<https://api.github.com/users/aseemk/followers?page=2>; rel=\"next\", <https://api.github.com/users/aseemk/followers?page=2>; rel=\"last\"'\n          // sets `url` to undefined if \"next\" URL is not present or `link` header is not set\n\n          url = ((normalizedResponse.headers.link || \"\").match(/<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n          return {\n            value: normalizedResponse\n          };\n        } catch (error) {\n          if (error.status !== 409) throw error;\n          url = \"\";\n          return {\n            value: {\n              status: 200,\n              headers: {},\n              data: []\n            }\n          };\n        }\n      }\n\n    })\n  };\n}\n\nfunction paginate(octokit, route, parameters, mapFn) {\n  if (typeof parameters === \"function\") {\n    mapFn = parameters;\n    parameters = undefined;\n  }\n\n  return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);\n}\n\nfunction gather(octokit, results, iterator, mapFn) {\n  return iterator.next().then(result => {\n    if (result.done) {\n      return results;\n    }\n\n    let earlyExit = false;\n\n    function done() {\n      earlyExit = true;\n    }\n\n    results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);\n\n    if (earlyExit) {\n      return results;\n    }\n\n    return gather(octokit, results, iterator, mapFn);\n  });\n}\n\nconst composePaginateRest = Object.assign(paginate, {\n  iterator\n});\n\nconst paginatingEndpoints = [\"GET /app/hook/deliveries\", \"GET /app/installations\", \"GET /applications/grants\", \"GET /authorizations\", \"GET /enterprises/{enterprise}/actions/permissions/organizations\", \"GET /enterprises/{enterprise}/actions/runner-groups\", \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations\", \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners\", \"GET /enterprises/{enterprise}/actions/runners\", \"GET /enterprises/{enterprise}/actions/runners/downloads\", \"GET /events\", \"GET /gists\", \"GET /gists/public\", \"GET /gists/starred\", \"GET /gists/{gist_id}/comments\", \"GET /gists/{gist_id}/commits\", \"GET /gists/{gist_id}/forks\", \"GET /installation/repositories\", \"GET /issues\", \"GET /marketplace_listing/plans\", \"GET /marketplace_listing/plans/{plan_id}/accounts\", \"GET /marketplace_listing/stubbed/plans\", \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\", \"GET /networks/{owner}/{repo}/events\", \"GET /notifications\", \"GET /organizations\", \"GET /orgs/{org}/actions/permissions/repositories\", \"GET /orgs/{org}/actions/runner-groups\", \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories\", \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners\", \"GET /orgs/{org}/actions/runners\", \"GET /orgs/{org}/actions/runners/downloads\", \"GET /orgs/{org}/actions/secrets\", \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\", \"GET /orgs/{org}/blocks\", \"GET /orgs/{org}/credential-authorizations\", \"GET /orgs/{org}/events\", \"GET /orgs/{org}/failed_invitations\", \"GET /orgs/{org}/hooks\", \"GET /orgs/{org}/hooks/{hook_id}/deliveries\", \"GET /orgs/{org}/installations\", \"GET /orgs/{org}/invitations\", \"GET /orgs/{org}/invitations/{invitation_id}/teams\", \"GET /orgs/{org}/issues\", \"GET /orgs/{org}/members\", \"GET /orgs/{org}/migrations\", \"GET /orgs/{org}/migrations/{migration_id}/repositories\", \"GET /orgs/{org}/outside_collaborators\", \"GET /orgs/{org}/projects\", \"GET /orgs/{org}/public_members\", \"GET /orgs/{org}/repos\", \"GET /orgs/{org}/team-sync/groups\", \"GET /orgs/{org}/teams\", \"GET /orgs/{org}/teams/{team_slug}/discussions\", \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\", \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\", \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\", \"GET /orgs/{org}/teams/{team_slug}/invitations\", \"GET /orgs/{org}/teams/{team_slug}/members\", \"GET /orgs/{org}/teams/{team_slug}/projects\", \"GET /orgs/{org}/teams/{team_slug}/repos\", \"GET /orgs/{org}/teams/{team_slug}/team-sync/group-mappings\", \"GET /orgs/{org}/teams/{team_slug}/teams\", \"GET /projects/columns/{column_id}/cards\", \"GET /projects/{project_id}/collaborators\", \"GET /projects/{project_id}/columns\", \"GET /repos/{owner}/{repo}/actions/artifacts\", \"GET /repos/{owner}/{repo}/actions/runners\", \"GET /repos/{owner}/{repo}/actions/runners/downloads\", \"GET /repos/{owner}/{repo}/actions/runs\", \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\", \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\", \"GET /repos/{owner}/{repo}/actions/secrets\", \"GET /repos/{owner}/{repo}/actions/workflows\", \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\", \"GET /repos/{owner}/{repo}/assignees\", \"GET /repos/{owner}/{repo}/autolinks\", \"GET /repos/{owner}/{repo}/branches\", \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\", \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\", \"GET /repos/{owner}/{repo}/code-scanning/alerts\", \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\", \"GET /repos/{owner}/{repo}/code-scanning/analyses\", \"GET /repos/{owner}/{repo}/collaborators\", \"GET /repos/{owner}/{repo}/comments\", \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\", \"GET /repos/{owner}/{repo}/commits\", \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\", \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\", \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\", \"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\", \"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\", \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\", \"GET /repos/{owner}/{repo}/contributors\", \"GET /repos/{owner}/{repo}/deployments\", \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\", \"GET /repos/{owner}/{repo}/events\", \"GET /repos/{owner}/{repo}/forks\", \"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\", \"GET /repos/{owner}/{repo}/hooks\", \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\", \"GET /repos/{owner}/{repo}/invitations\", \"GET /repos/{owner}/{repo}/issues\", \"GET /repos/{owner}/{repo}/issues/comments\", \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\", \"GET /repos/{owner}/{repo}/issues/events\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/events\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\", \"GET /repos/{owner}/{repo}/keys\", \"GET /repos/{owner}/{repo}/labels\", \"GET /repos/{owner}/{repo}/milestones\", \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\", \"GET /repos/{owner}/{repo}/notifications\", \"GET /repos/{owner}/{repo}/pages/builds\", \"GET /repos/{owner}/{repo}/projects\", \"GET /repos/{owner}/{repo}/pulls\", \"GET /repos/{owner}/{repo}/pulls/comments\", \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\", \"GET /repos/{owner}/{repo}/releases\", \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\", \"GET /repos/{owner}/{repo}/secret-scanning/alerts\", \"GET /repos/{owner}/{repo}/stargazers\", \"GET /repos/{owner}/{repo}/subscribers\", \"GET /repos/{owner}/{repo}/tags\", \"GET /repos/{owner}/{repo}/teams\", \"GET /repositories\", \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\", \"GET /scim/v2/enterprises/{enterprise}/Groups\", \"GET /scim/v2/enterprises/{enterprise}/Users\", \"GET /scim/v2/organizations/{org}/Users\", \"GET /search/code\", \"GET /search/commits\", \"GET /search/issues\", \"GET /search/labels\", \"GET /search/repositories\", \"GET /search/topics\", \"GET /search/users\", \"GET /teams/{team_id}/discussions\", \"GET /teams/{team_id}/discussions/{discussion_number}/comments\", \"GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions\", \"GET /teams/{team_id}/discussions/{discussion_number}/reactions\", \"GET /teams/{team_id}/invitations\", \"GET /teams/{team_id}/members\", \"GET /teams/{team_id}/projects\", \"GET /teams/{team_id}/repos\", \"GET /teams/{team_id}/team-sync/group-mappings\", \"GET /teams/{team_id}/teams\", \"GET /user/blocks\", \"GET /user/emails\", \"GET /user/followers\", \"GET /user/following\", \"GET /user/gpg_keys\", \"GET /user/installations\", \"GET /user/installations/{installation_id}/repositories\", \"GET /user/issues\", \"GET /user/keys\", \"GET /user/marketplace_purchases\", \"GET /user/marketplace_purchases/stubbed\", \"GET /user/memberships/orgs\", \"GET /user/migrations\", \"GET /user/migrations/{migration_id}/repositories\", \"GET /user/orgs\", \"GET /user/public_emails\", \"GET /user/repos\", \"GET /user/repository_invitations\", \"GET /user/starred\", \"GET /user/subscriptions\", \"GET /user/teams\", \"GET /users\", \"GET /users/{username}/events\", \"GET /users/{username}/events/orgs/{org}\", \"GET /users/{username}/events/public\", \"GET /users/{username}/followers\", \"GET /users/{username}/following\", \"GET /users/{username}/gists\", \"GET /users/{username}/gpg_keys\", \"GET /users/{username}/keys\", \"GET /users/{username}/orgs\", \"GET /users/{username}/projects\", \"GET /users/{username}/received_events\", \"GET /users/{username}/received_events/public\", \"GET /users/{username}/repos\", \"GET /users/{username}/starred\", \"GET /users/{username}/subscriptions\"];\n\nfunction isPaginatingEndpoint(arg) {\n  if (typeof arg === \"string\") {\n    return paginatingEndpoints.includes(arg);\n  } else {\n    return false;\n  }\n}\n\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\n\nfunction paginateRest(octokit) {\n  return {\n    paginate: Object.assign(paginate.bind(null, octokit), {\n      iterator: iterator.bind(null, octokit)\n    })\n  };\n}\npaginateRest.VERSION = VERSION;\n\nexports.composePaginateRest = composePaginateRest;\nexports.isPaginatingEndpoint = isPaginatingEndpoint;\nexports.paginateRest = paginateRest;\nexports.paginatingEndpoints = paginatingEndpoints;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst Endpoints = {\n  actions: {\n    addSelectedRepoToOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n    approveWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\"],\n    cancelWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\"],\n    createOrUpdateEnvironmentSecret: [\"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n    createOrUpdateRepoSecret: [\"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    createRegistrationTokenForOrg: [\"POST /orgs/{org}/actions/runners/registration-token\"],\n    createRegistrationTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/registration-token\"],\n    createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n    createRemoveTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/remove-token\"],\n    createWorkflowDispatch: [\"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\"],\n    deleteArtifact: [\"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    deleteEnvironmentSecret: [\"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n    deleteRepoSecret: [\"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    deleteSelfHostedRunnerFromOrg: [\"DELETE /orgs/{org}/actions/runners/{runner_id}\"],\n    deleteSelfHostedRunnerFromRepo: [\"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n    deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    deleteWorkflowRunLogs: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n    disableSelectedRepositoryGithubActionsOrganization: [\"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\"],\n    disableWorkflow: [\"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\"],\n    downloadArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\"],\n    downloadJobLogsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\"],\n    downloadWorkflowRunLogs: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n    enableSelectedRepositoryGithubActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\"],\n    enableWorkflow: [\"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\"],\n    getAllowedActionsOrganization: [\"GET /orgs/{org}/actions/permissions/selected-actions\"],\n    getAllowedActionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\"],\n    getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    getEnvironmentPublicKey: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\"],\n    getEnvironmentSecret: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    getGithubActionsPermissionsOrganization: [\"GET /orgs/{org}/actions/permissions\"],\n    getGithubActionsPermissionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions\"],\n    getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n    getPendingDeploymentsForRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"],\n    getRepoPermissions: [\"GET /repos/{owner}/{repo}/actions/permissions\", {}, {\n      renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"]\n    }],\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    getReviewsForRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\"],\n    getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n    getSelfHostedRunnerForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n    getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n    getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    getWorkflowRunUsage: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\"],\n    getWorkflowUsage: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\"],\n    listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n    listEnvironmentSecrets: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets\"],\n    listJobsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\"],\n    listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n    listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n    listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n    listRunnerApplicationsForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/downloads\"],\n    listSelectedReposForOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\"],\n    listSelectedRepositoriesEnabledGithubActionsOrganization: [\"GET /orgs/{org}/actions/permissions/repositories\"],\n    listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n    listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n    listWorkflowRunArtifacts: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\"],\n    listWorkflowRuns: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\"],\n    listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n    reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n    removeSelectedRepoFromOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n    reviewPendingDeploymentsForRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"],\n    setAllowedActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/selected-actions\"],\n    setAllowedActionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\"],\n    setGithubActionsPermissionsOrganization: [\"PUT /orgs/{org}/actions/permissions\"],\n    setGithubActionsPermissionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions\"],\n    setSelectedReposForOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\"],\n    setSelectedRepositoriesEnabledGithubActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/repositories\"]\n  },\n  activity: {\n    checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n    deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n    deleteThreadSubscription: [\"DELETE /notifications/threads/{thread_id}/subscription\"],\n    getFeeds: [\"GET /feeds\"],\n    getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n    getThread: [\"GET /notifications/threads/{thread_id}\"],\n    getThreadSubscriptionForAuthenticatedUser: [\"GET /notifications/threads/{thread_id}/subscription\"],\n    listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n    listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n    listOrgEventsForAuthenticatedUser: [\"GET /users/{username}/events/orgs/{org}\"],\n    listPublicEvents: [\"GET /events\"],\n    listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n    listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n    listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n    listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n    listReceivedPublicEventsForUser: [\"GET /users/{username}/received_events/public\"],\n    listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n    listRepoNotificationsForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/notifications\"],\n    listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n    listReposStarredByUser: [\"GET /users/{username}/starred\"],\n    listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n    listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n    listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n    listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n    markNotificationsAsRead: [\"PUT /notifications\"],\n    markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n    markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n    setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n    setThreadSubscription: [\"PUT /notifications/threads/{thread_id}/subscription\"],\n    starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n    unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"]\n  },\n  apps: {\n    addRepoToInstallation: [\"PUT /user/installations/{installation_id}/repositories/{repository_id}\"],\n    checkToken: [\"POST /applications/{client_id}/token\"],\n    createContentAttachment: [\"POST /content_references/{content_reference_id}/attachments\", {\n      mediaType: {\n        previews: [\"corsair\"]\n      }\n    }],\n    createContentAttachmentForRepo: [\"POST /repos/{owner}/{repo}/content_references/{content_reference_id}/attachments\", {\n      mediaType: {\n        previews: [\"corsair\"]\n      }\n    }],\n    createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n    createInstallationAccessToken: [\"POST /app/installations/{installation_id}/access_tokens\"],\n    deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n    deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n    deleteToken: [\"DELETE /applications/{client_id}/token\"],\n    getAuthenticated: [\"GET /app\"],\n    getBySlug: [\"GET /apps/{app_slug}\"],\n    getInstallation: [\"GET /app/installations/{installation_id}\"],\n    getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n    getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n    getSubscriptionPlanForAccount: [\"GET /marketplace_listing/accounts/{account_id}\"],\n    getSubscriptionPlanForAccountStubbed: [\"GET /marketplace_listing/stubbed/accounts/{account_id}\"],\n    getUserInstallation: [\"GET /users/{username}/installation\"],\n    getWebhookConfigForApp: [\"GET /app/hook/config\"],\n    getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\n    listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n    listAccountsForPlanStubbed: [\"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\"],\n    listInstallationReposForAuthenticatedUser: [\"GET /user/installations/{installation_id}/repositories\"],\n    listInstallations: [\"GET /app/installations\"],\n    listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n    listPlans: [\"GET /marketplace_listing/plans\"],\n    listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n    listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n    listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n    listSubscriptionsForAuthenticatedUserStubbed: [\"GET /user/marketplace_purchases/stubbed\"],\n    listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\n    redeliverWebhookDelivery: [\"POST /app/hook/deliveries/{delivery_id}/attempts\"],\n    removeRepoFromInstallation: [\"DELETE /user/installations/{installation_id}/repositories/{repository_id}\"],\n    resetToken: [\"PATCH /applications/{client_id}/token\"],\n    revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n    scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n    suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n    unsuspendInstallation: [\"DELETE /app/installations/{installation_id}/suspended\"],\n    updateWebhookConfigForApp: [\"PATCH /app/hook/config\"]\n  },\n  billing: {\n    getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n    getGithubActionsBillingUser: [\"GET /users/{username}/settings/billing/actions\"],\n    getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n    getGithubPackagesBillingUser: [\"GET /users/{username}/settings/billing/packages\"],\n    getSharedStorageBillingOrg: [\"GET /orgs/{org}/settings/billing/shared-storage\"],\n    getSharedStorageBillingUser: [\"GET /users/{username}/settings/billing/shared-storage\"]\n  },\n  checks: {\n    create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n    createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n    get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n    listAnnotations: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\"],\n    listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n    listForSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\"],\n    listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n    rerequestSuite: [\"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\"],\n    setSuitesPreferences: [\"PATCH /repos/{owner}/{repo}/check-suites/preferences\"],\n    update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"]\n  },\n  codeScanning: {\n    deleteAnalysis: [\"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\"],\n    getAlert: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\", {}, {\n      renamedParameters: {\n        alert_id: \"alert_number\"\n      }\n    }],\n    getAnalysis: [\"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\"],\n    getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n    listAlertInstances: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n    listAlertsInstances: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\", {}, {\n      renamed: [\"codeScanning\", \"listAlertInstances\"]\n    }],\n    listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n    updateAlert: [\"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\"],\n    uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"]\n  },\n  codesOfConduct: {\n    getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\n    getConductCode: [\"GET /codes_of_conduct/{key}\"],\n    getForRepo: [\"GET /repos/{owner}/{repo}/community/code_of_conduct\", {\n      mediaType: {\n        previews: [\"scarlet-witch\"]\n      }\n    }]\n  },\n  emojis: {\n    get: [\"GET /emojis\"]\n  },\n  enterpriseAdmin: {\n    disableSelectedOrganizationGithubActionsEnterprise: [\"DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\"],\n    enableSelectedOrganizationGithubActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\"],\n    getAllowedActionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions/selected-actions\"],\n    getGithubActionsPermissionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions\"],\n    listSelectedOrganizationsEnabledGithubActionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions/organizations\"],\n    setAllowedActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/selected-actions\"],\n    setGithubActionsPermissionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions\"],\n    setSelectedOrganizationsEnabledGithubActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/organizations\"]\n  },\n  gists: {\n    checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n    create: [\"POST /gists\"],\n    createComment: [\"POST /gists/{gist_id}/comments\"],\n    delete: [\"DELETE /gists/{gist_id}\"],\n    deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n    fork: [\"POST /gists/{gist_id}/forks\"],\n    get: [\"GET /gists/{gist_id}\"],\n    getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n    getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n    list: [\"GET /gists\"],\n    listComments: [\"GET /gists/{gist_id}/comments\"],\n    listCommits: [\"GET /gists/{gist_id}/commits\"],\n    listForUser: [\"GET /users/{username}/gists\"],\n    listForks: [\"GET /gists/{gist_id}/forks\"],\n    listPublic: [\"GET /gists/public\"],\n    listStarred: [\"GET /gists/starred\"],\n    star: [\"PUT /gists/{gist_id}/star\"],\n    unstar: [\"DELETE /gists/{gist_id}/star\"],\n    update: [\"PATCH /gists/{gist_id}\"],\n    updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"]\n  },\n  git: {\n    createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n    createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n    createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n    createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n    createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n    deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n    getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n    getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n    getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n    getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n    listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n    updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"]\n  },\n  gitignore: {\n    getAllTemplates: [\"GET /gitignore/templates\"],\n    getTemplate: [\"GET /gitignore/templates/{name}\"]\n  },\n  interactions: {\n    getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n    getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n    getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n    getRestrictionsForYourPublicRepos: [\"GET /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"]\n    }],\n    removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n    removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n    removeRestrictionsForRepo: [\"DELETE /repos/{owner}/{repo}/interaction-limits\"],\n    removeRestrictionsForYourPublicRepos: [\"DELETE /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"]\n    }],\n    setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n    setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n    setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n    setRestrictionsForYourPublicRepos: [\"PUT /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"]\n    }]\n  },\n  issues: {\n    addAssignees: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n    addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n    create: [\"POST /repos/{owner}/{repo}/issues\"],\n    createComment: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n    createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n    deleteComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n    deleteMilestone: [\"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n    getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n    getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n    getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    list: [\"GET /issues\"],\n    listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n    listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n    listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n    listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n    listEventsForTimeline: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\", {\n      mediaType: {\n        previews: [\"mockingbird\"]\n      }\n    }],\n    listForAuthenticatedUser: [\"GET /user/issues\"],\n    listForOrg: [\"GET /orgs/{org}/issues\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n    listLabelsForMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\"],\n    listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n    listLabelsOnIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n    lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    removeAllLabels: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    removeAssignees: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n    removeLabel: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\"],\n    setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n    updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n    updateMilestone: [\"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\"]\n  },\n  licenses: {\n    get: [\"GET /licenses/{license}\"],\n    getAllCommonlyUsed: [\"GET /licenses\"],\n    getForRepo: [\"GET /repos/{owner}/{repo}/license\"]\n  },\n  markdown: {\n    render: [\"POST /markdown\"],\n    renderRaw: [\"POST /markdown/raw\", {\n      headers: {\n        \"content-type\": \"text/plain; charset=utf-8\"\n      }\n    }]\n  },\n  meta: {\n    get: [\"GET /meta\"],\n    getOctocat: [\"GET /octocat\"],\n    getZen: [\"GET /zen\"],\n    root: [\"GET /\"]\n  },\n  migrations: {\n    cancelImport: [\"DELETE /repos/{owner}/{repo}/import\"],\n    deleteArchiveForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    deleteArchiveForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    downloadArchiveForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getArchiveForAuthenticatedUser: [\"GET /user/migrations/{migration_id}/archive\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getCommitAuthors: [\"GET /repos/{owner}/{repo}/import/authors\"],\n    getImportStatus: [\"GET /repos/{owner}/{repo}/import\"],\n    getLargeFiles: [\"GET /repos/{owner}/{repo}/import/large_files\"],\n    getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listForAuthenticatedUser: [\"GET /user/migrations\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listForOrg: [\"GET /orgs/{org}/migrations\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    listReposForUser: [\"GET /user/migrations/{migration_id}/repositories\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    mapCommitAuthor: [\"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\"],\n    setLfsPreference: [\"PATCH /repos/{owner}/{repo}/import/lfs\"],\n    startForAuthenticatedUser: [\"POST /user/migrations\"],\n    startForOrg: [\"POST /orgs/{org}/migrations\"],\n    startImport: [\"PUT /repos/{owner}/{repo}/import\"],\n    unlockRepoForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    unlockRepoForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\", {\n      mediaType: {\n        previews: [\"wyandotte\"]\n      }\n    }],\n    updateImport: [\"PATCH /repos/{owner}/{repo}/import\"]\n  },\n  orgs: {\n    blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n    cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n    checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n    checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n    checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n    convertMemberToOutsideCollaborator: [\"PUT /orgs/{org}/outside_collaborators/{username}\"],\n    createInvitation: [\"POST /orgs/{org}/invitations\"],\n    createWebhook: [\"POST /orgs/{org}/hooks\"],\n    deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n    get: [\"GET /orgs/{org}\"],\n    getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n    getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n    getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n    getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n    getWebhookDelivery: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\"],\n    list: [\"GET /organizations\"],\n    listAppInstallations: [\"GET /orgs/{org}/installations\"],\n    listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n    listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n    listForAuthenticatedUser: [\"GET /user/orgs\"],\n    listForUser: [\"GET /users/{username}/orgs\"],\n    listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n    listMembers: [\"GET /orgs/{org}/members\"],\n    listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n    listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n    listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n    listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n    listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\n    listWebhooks: [\"GET /orgs/{org}/hooks\"],\n    pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"],\n    removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n    removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n    removeOutsideCollaborator: [\"DELETE /orgs/{org}/outside_collaborators/{username}\"],\n    removePublicMembershipForAuthenticatedUser: [\"DELETE /orgs/{org}/public_members/{username}\"],\n    setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n    setPublicMembershipForAuthenticatedUser: [\"PUT /orgs/{org}/public_members/{username}\"],\n    unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n    update: [\"PATCH /orgs/{org}\"],\n    updateMembershipForAuthenticatedUser: [\"PATCH /user/memberships/orgs/{org}\"],\n    updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n    updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"]\n  },\n  packages: {\n    deletePackageForAuthenticatedUser: [\"DELETE /user/packages/{package_type}/{package_name}\"],\n    deletePackageForOrg: [\"DELETE /orgs/{org}/packages/{package_type}/{package_name}\"],\n    deletePackageVersionForAuthenticatedUser: [\"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    deletePackageVersionForOrg: [\"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getAllPackageVersionsForAPackageOwnedByAnOrg: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\", {}, {\n      renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"]\n    }],\n    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions\", {}, {\n      renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\"]\n    }],\n    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions\"],\n    getAllPackageVersionsForPackageOwnedByOrg: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\"],\n    getAllPackageVersionsForPackageOwnedByUser: [\"GET /users/{username}/packages/{package_type}/{package_name}/versions\"],\n    getPackageForAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}\"],\n    getPackageForOrganization: [\"GET /orgs/{org}/packages/{package_type}/{package_name}\"],\n    getPackageForUser: [\"GET /users/{username}/packages/{package_type}/{package_name}\"],\n    getPackageVersionForAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getPackageVersionForOrganization: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getPackageVersionForUser: [\"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    restorePackageForAuthenticatedUser: [\"POST /user/packages/{package_type}/{package_name}/restore{?token}\"],\n    restorePackageForOrg: [\"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\"],\n    restorePackageVersionForAuthenticatedUser: [\"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"],\n    restorePackageVersionForOrg: [\"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"]\n  },\n  projects: {\n    addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createCard: [\"POST /projects/columns/{column_id}/cards\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createColumn: [\"POST /projects/{project_id}/columns\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForAuthenticatedUser: [\"POST /user/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForOrg: [\"POST /orgs/{org}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    createForRepo: [\"POST /repos/{owner}/{repo}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    delete: [\"DELETE /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    deleteCard: [\"DELETE /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    deleteColumn: [\"DELETE /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    get: [\"GET /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getCard: [\"GET /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getColumn: [\"GET /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    getPermissionForUser: [\"GET /projects/{project_id}/collaborators/{username}/permission\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listCards: [\"GET /projects/columns/{column_id}/cards\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listCollaborators: [\"GET /projects/{project_id}/collaborators\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listColumns: [\"GET /projects/{project_id}/columns\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForOrg: [\"GET /orgs/{org}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForRepo: [\"GET /repos/{owner}/{repo}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listForUser: [\"GET /users/{username}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    moveCard: [\"POST /projects/columns/cards/{card_id}/moves\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    moveColumn: [\"POST /projects/columns/{column_id}/moves\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    removeCollaborator: [\"DELETE /projects/{project_id}/collaborators/{username}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    update: [\"PATCH /projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    updateCard: [\"PATCH /projects/columns/cards/{card_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    updateColumn: [\"PATCH /projects/columns/{column_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }]\n  },\n  pulls: {\n    checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    create: [\"POST /repos/{owner}/{repo}/pulls\"],\n    createReplyForReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\"],\n    createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    createReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n    deletePendingReview: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    deleteReviewComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    dismissReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\"],\n    get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    getReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    list: [\"GET /repos/{owner}/{repo}/pulls\"],\n    listCommentsForReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\"],\n    listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n    listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n    listRequestedReviewers: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    listReviewComments: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n    listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n    listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    removeRequestedReviewers: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    requestReviewers: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    submitReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\"],\n    update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    updateBranch: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\", {\n      mediaType: {\n        previews: [\"lydian\"]\n      }\n    }],\n    updateReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    updateReviewComment: [\"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\"]\n  },\n  rateLimit: {\n    get: [\"GET /rate_limit\"]\n  },\n  reactions: {\n    createForCommitComment: [\"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForIssue: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForIssueComment: [\"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForPullRequestReviewComment: [\"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForRelease: [\"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForTeamDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    createForTeamDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForIssue: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForIssueComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForPullRequestComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForTeamDiscussion: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteForTeamDiscussionComment: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    deleteLegacy: [\"DELETE /reactions/{reaction_id}\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }, {\n      deprecated: \"octokit.rest.reactions.deleteLegacy() is deprecated, see https://docs.github.com/rest/reference/reactions/#delete-a-reaction-legacy\"\n    }],\n    listForCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForIssueComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForPullRequestReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForTeamDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }],\n    listForTeamDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\", {\n      mediaType: {\n        previews: [\"squirrel-girl\"]\n      }\n    }]\n  },\n  repos: {\n    acceptInvitation: [\"PATCH /user/repository_invitations/{invitation_id}\"],\n    addAppAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n    addStatusCheckContexts: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    addTeamAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    addUserAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n    checkVulnerabilityAlerts: [\"GET /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n    compareCommitsWithBasehead: [\"GET /repos/{owner}/{repo}/compare/{basehead}\"],\n    createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\n    createCommitComment: [\"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n    createCommitSignatureProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n    createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n    createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n    createDeploymentStatus: [\"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n    createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n    createForAuthenticatedUser: [\"POST /user/repos\"],\n    createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n    createInOrg: [\"POST /orgs/{org}/repos\"],\n    createOrUpdateEnvironment: [\"PUT /repos/{owner}/{repo}/environments/{environment_name}\"],\n    createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n    createPagesSite: [\"POST /repos/{owner}/{repo}/pages\", {\n      mediaType: {\n        previews: [\"switcheroo\"]\n      }\n    }],\n    createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n    createUsingTemplate: [\"POST /repos/{template_owner}/{template_repo}/generate\", {\n      mediaType: {\n        previews: [\"baptiste\"]\n      }\n    }],\n    createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n    declineInvitation: [\"DELETE /user/repository_invitations/{invitation_id}\"],\n    delete: [\"DELETE /repos/{owner}/{repo}\"],\n    deleteAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n    deleteAdminBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    deleteAnEnvironment: [\"DELETE /repos/{owner}/{repo}/environments/{environment_name}\"],\n    deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    deleteBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n    deleteCommitSignatureProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n    deleteDeployment: [\"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n    deleteInvitation: [\"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n    deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\", {\n      mediaType: {\n        previews: [\"switcheroo\"]\n      }\n    }],\n    deletePullRequestReviewProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n    deleteReleaseAsset: [\"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    disableAutomatedSecurityFixes: [\"DELETE /repos/{owner}/{repo}/automated-security-fixes\", {\n      mediaType: {\n        previews: [\"london\"]\n      }\n    }],\n    disableVulnerabilityAlerts: [\"DELETE /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    downloadArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\", {}, {\n      renamed: [\"repos\", \"downloadZipballArchive\"]\n    }],\n    downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n    downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n    enableAutomatedSecurityFixes: [\"PUT /repos/{owner}/{repo}/automated-security-fixes\", {\n      mediaType: {\n        previews: [\"london\"]\n      }\n    }],\n    enableVulnerabilityAlerts: [\"PUT /repos/{owner}/{repo}/vulnerability-alerts\", {\n      mediaType: {\n        previews: [\"dorian\"]\n      }\n    }],\n    get: [\"GET /repos/{owner}/{repo}\"],\n    getAccessRestrictions: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n    getAdminBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n    getAllStatusCheckContexts: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\"],\n    getAllTopics: [\"GET /repos/{owner}/{repo}/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    getAppsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\"],\n    getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n    getBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n    getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n    getCollaboratorPermissionLevel: [\"GET /repos/{owner}/{repo}/collaborators/{username}/permission\"],\n    getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n    getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n    getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n    getCommitSignatureProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\", {\n      mediaType: {\n        previews: [\"zzzax\"]\n      }\n    }],\n    getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n    getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n    getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n    getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n    getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    getDeploymentStatus: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\"],\n    getEnvironment: [\"GET /repos/{owner}/{repo}/environments/{environment_name}\"],\n    getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n    getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n    getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n    getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n    getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n    getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n    getPullRequestReviewProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n    getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n    getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n    getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n    getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n    getStatusChecksProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    getTeamsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\"],\n    getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n    getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n    getUsersWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\"],\n    getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n    getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    getWebhookConfigForRepo: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\"],\n    getWebhookDelivery: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\"],\n    listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\n    listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n    listBranchesForHeadCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\", {\n      mediaType: {\n        previews: [\"groot\"]\n      }\n    }],\n    listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n    listCommentsForCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n    listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n    listCommitStatusesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/statuses\"],\n    listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n    listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n    listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n    listDeploymentStatuses: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n    listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n    listForAuthenticatedUser: [\"GET /user/repos\"],\n    listForOrg: [\"GET /orgs/{org}/repos\"],\n    listForUser: [\"GET /users/{username}/repos\"],\n    listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n    listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n    listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n    listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n    listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n    listPublic: [\"GET /repositories\"],\n    listPullRequestsAssociatedWithCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\", {\n      mediaType: {\n        previews: [\"groot\"]\n      }\n    }],\n    listReleaseAssets: [\"GET /repos/{owner}/{repo}/releases/{release_id}/assets\"],\n    listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n    listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n    listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n    listWebhookDeliveries: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\"],\n    listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n    merge: [\"POST /repos/{owner}/{repo}/merges\"],\n    pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"],\n    removeAppAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    removeCollaborator: [\"DELETE /repos/{owner}/{repo}/collaborators/{username}\"],\n    removeStatusCheckContexts: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    removeStatusCheckProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    removeTeamAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    removeUserAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n    replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n    setAdminBranchProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    setAppAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    setStatusCheckContexts: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    setTeamAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    setUserAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n    transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n    update: [\"PATCH /repos/{owner}/{repo}\"],\n    updateBranchProtection: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n    updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n    updateInvitation: [\"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n    updatePullRequestReviewProtection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n    updateReleaseAsset: [\"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    updateStatusCheckPotection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\", {}, {\n      renamed: [\"repos\", \"updateStatusCheckProtection\"]\n    }],\n    updateStatusCheckProtection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    updateWebhookConfigForRepo: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\"],\n    uploadReleaseAsset: [\"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\", {\n      baseUrl: \"https://uploads.github.com\"\n    }]\n  },\n  search: {\n    code: [\"GET /search/code\"],\n    commits: [\"GET /search/commits\", {\n      mediaType: {\n        previews: [\"cloak\"]\n      }\n    }],\n    issuesAndPullRequests: [\"GET /search/issues\"],\n    labels: [\"GET /search/labels\"],\n    repos: [\"GET /search/repositories\"],\n    topics: [\"GET /search/topics\", {\n      mediaType: {\n        previews: [\"mercy\"]\n      }\n    }],\n    users: [\"GET /search/users\"]\n  },\n  secretScanning: {\n    getAlert: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n    updateAlert: [\"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"]\n  },\n  teams: {\n    addOrUpdateMembershipForUserInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    addOrUpdateProjectPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    addOrUpdateRepoPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    checkPermissionsForProjectInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    checkPermissionsForRepoInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    create: [\"POST /orgs/{org}/teams\"],\n    createDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n    createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n    deleteDiscussionCommentInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    deleteDiscussionInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n    getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n    getDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    getDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    getMembershipForUserInOrg: [\"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    list: [\"GET /orgs/{org}/teams\"],\n    listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n    listDiscussionCommentsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n    listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n    listForAuthenticatedUser: [\"GET /user/teams\"],\n    listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n    listPendingInvitationsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/invitations\"],\n    listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\", {\n      mediaType: {\n        previews: [\"inertia\"]\n      }\n    }],\n    listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n    removeMembershipForUserInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    removeProjectInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\"],\n    removeRepoInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    updateDiscussionCommentInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    updateDiscussionInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"]\n  },\n  users: {\n    addEmailForAuthenticated: [\"POST /user/emails\"],\n    block: [\"PUT /user/blocks/{username}\"],\n    checkBlocked: [\"GET /user/blocks/{username}\"],\n    checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n    checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n    createGpgKeyForAuthenticated: [\"POST /user/gpg_keys\"],\n    createPublicSshKeyForAuthenticated: [\"POST /user/keys\"],\n    deleteEmailForAuthenticated: [\"DELETE /user/emails\"],\n    deleteGpgKeyForAuthenticated: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n    deletePublicSshKeyForAuthenticated: [\"DELETE /user/keys/{key_id}\"],\n    follow: [\"PUT /user/following/{username}\"],\n    getAuthenticated: [\"GET /user\"],\n    getByUsername: [\"GET /users/{username}\"],\n    getContextForUser: [\"GET /users/{username}/hovercard\"],\n    getGpgKeyForAuthenticated: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n    getPublicSshKeyForAuthenticated: [\"GET /user/keys/{key_id}\"],\n    list: [\"GET /users\"],\n    listBlockedByAuthenticated: [\"GET /user/blocks\"],\n    listEmailsForAuthenticated: [\"GET /user/emails\"],\n    listFollowedByAuthenticated: [\"GET /user/following\"],\n    listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n    listFollowersForUser: [\"GET /users/{username}/followers\"],\n    listFollowingForUser: [\"GET /users/{username}/following\"],\n    listGpgKeysForAuthenticated: [\"GET /user/gpg_keys\"],\n    listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n    listPublicEmailsForAuthenticated: [\"GET /user/public_emails\"],\n    listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n    listPublicSshKeysForAuthenticated: [\"GET /user/keys\"],\n    setPrimaryEmailVisibilityForAuthenticated: [\"PATCH /user/email/visibility\"],\n    unblock: [\"DELETE /user/blocks/{username}\"],\n    unfollow: [\"DELETE /user/following/{username}\"],\n    updateAuthenticated: [\"PATCH /user\"]\n  }\n};\n\nconst VERSION = \"5.7.0\";\n\nfunction endpointsToMethods(octokit, endpointsMap) {\n  const newMethods = {};\n\n  for (const [scope, endpoints] of Object.entries(endpointsMap)) {\n    for (const [methodName, endpoint] of Object.entries(endpoints)) {\n      const [route, defaults, decorations] = endpoint;\n      const [method, url] = route.split(/ /);\n      const endpointDefaults = Object.assign({\n        method,\n        url\n      }, defaults);\n\n      if (!newMethods[scope]) {\n        newMethods[scope] = {};\n      }\n\n      const scopeMethods = newMethods[scope];\n\n      if (decorations) {\n        scopeMethods[methodName] = decorate(octokit, scope, methodName, endpointDefaults, decorations);\n        continue;\n      }\n\n      scopeMethods[methodName] = octokit.request.defaults(endpointDefaults);\n    }\n  }\n\n  return newMethods;\n}\n\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n  const requestWithDefaults = octokit.request.defaults(defaults);\n  /* istanbul ignore next */\n\n  function withDecorations(...args) {\n    // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n    let options = requestWithDefaults.endpoint.merge(...args); // There are currently no other decorations than `.mapToData`\n\n    if (decorations.mapToData) {\n      options = Object.assign({}, options, {\n        data: options[decorations.mapToData],\n        [decorations.mapToData]: undefined\n      });\n      return requestWithDefaults(options);\n    }\n\n    if (decorations.renamed) {\n      const [newScope, newMethodName] = decorations.renamed;\n      octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);\n    }\n\n    if (decorations.deprecated) {\n      octokit.log.warn(decorations.deprecated);\n    }\n\n    if (decorations.renamedParameters) {\n      // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n      const options = requestWithDefaults.endpoint.merge(...args);\n\n      for (const [name, alias] of Object.entries(decorations.renamedParameters)) {\n        if (name in options) {\n          octokit.log.warn(`\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`);\n\n          if (!(alias in options)) {\n            options[alias] = options[name];\n          }\n\n          delete options[name];\n        }\n      }\n\n      return requestWithDefaults(options);\n    } // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n\n\n    return requestWithDefaults(...args);\n  }\n\n  return Object.assign(withDecorations, requestWithDefaults);\n}\n\nfunction restEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit, Endpoints);\n  return {\n    rest: api\n  };\n}\nrestEndpointMethods.VERSION = VERSION;\nfunction legacyRestEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit, Endpoints);\n  return _objectSpread2(_objectSpread2({}, api), {}, {\n    rest: api\n  });\n}\nlegacyRestEndpointMethods.VERSION = VERSION;\n\nexports.legacyRestEndpointMethods = legacyRestEndpointMethods;\nexports.restEndpointMethods = restEndpointMethods;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar deprecation = require('deprecation');\nvar once = _interopDefault(require('once'));\n\nconst logOnceCode = once(deprecation => console.warn(deprecation));\nconst logOnceHeaders = once(deprecation => console.warn(deprecation));\n/**\n * Error with extra properties to help with debugging\n */\n\nclass RequestError extends Error {\n  constructor(message, statusCode, options) {\n    super(message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = \"HttpError\";\n    this.status = statusCode;\n    let headers;\n\n    if (\"headers\" in options && typeof options.headers !== \"undefined\") {\n      headers = options.headers;\n    }\n\n    if (\"response\" in options) {\n      this.response = options.response;\n      headers = options.response.headers;\n    } // redact request credentials without mutating original request options\n\n\n    const requestCopy = Object.assign({}, options.request);\n\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\")\n      });\n    }\n\n    requestCopy.url = requestCopy.url // client_id & client_secret can be passed as URL query parameters to increase rate limit\n    // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\n    .replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\") // OAuth tokens can be passed as URL query parameters, although it is not recommended\n    // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header\n    .replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    this.request = requestCopy; // deprecations\n\n    Object.defineProperty(this, \"code\", {\n      get() {\n        logOnceCode(new deprecation.Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n        return statusCode;\n      }\n\n    });\n    Object.defineProperty(this, \"headers\", {\n      get() {\n        logOnceHeaders(new deprecation.Deprecation(\"[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.\"));\n        return headers || {};\n      }\n\n    });\n  }\n\n}\n\nexports.RequestError = RequestError;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar endpoint = require('@octokit/endpoint');\nvar universalUserAgent = require('universal-user-agent');\nvar isPlainObject = require('is-plain-object');\nvar nodeFetch = _interopDefault(require('node-fetch'));\nvar requestError = require('@octokit/request-error');\n\nconst VERSION = \"5.6.1\";\n\nfunction getBufferResponse(response) {\n  return response.arrayBuffer();\n}\n\nfunction fetchWrapper(requestOptions) {\n  const log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;\n\n  if (isPlainObject.isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {\n    requestOptions.body = JSON.stringify(requestOptions.body);\n  }\n\n  let headers = {};\n  let status;\n  let url;\n  const fetch = requestOptions.request && requestOptions.request.fetch || nodeFetch;\n  return fetch(requestOptions.url, Object.assign({\n    method: requestOptions.method,\n    body: requestOptions.body,\n    headers: requestOptions.headers,\n    redirect: requestOptions.redirect\n  }, // `requestOptions.request.agent` type is incompatible\n  // see https://github.com/octokit/types.ts/pull/264\n  requestOptions.request)).then(async response => {\n    url = response.url;\n    status = response.status;\n\n    for (const keyAndValue of response.headers) {\n      headers[keyAndValue[0]] = keyAndValue[1];\n    }\n\n    if (\"deprecation\" in headers) {\n      const matches = headers.link && headers.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n      const deprecationLink = matches && matches.pop();\n      log.warn(`[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`);\n    }\n\n    if (status === 204 || status === 205) {\n      return;\n    } // GitHub API returns 200 for HEAD requests\n\n\n    if (requestOptions.method === \"HEAD\") {\n      if (status < 400) {\n        return;\n      }\n\n      throw new requestError.RequestError(response.statusText, status, {\n        response: {\n          url,\n          status,\n          headers,\n          data: undefined\n        },\n        request: requestOptions\n      });\n    }\n\n    if (status === 304) {\n      throw new requestError.RequestError(\"Not modified\", status, {\n        response: {\n          url,\n          status,\n          headers,\n          data: await getResponseData(response)\n        },\n        request: requestOptions\n      });\n    }\n\n    if (status >= 400) {\n      const data = await getResponseData(response);\n      const error = new requestError.RequestError(toErrorMessage(data), status, {\n        response: {\n          url,\n          status,\n          headers,\n          data\n        },\n        request: requestOptions\n      });\n      throw error;\n    }\n\n    return getResponseData(response);\n  }).then(data => {\n    return {\n      status,\n      url,\n      headers,\n      data\n    };\n  }).catch(error => {\n    if (error instanceof requestError.RequestError) throw error;\n    throw new requestError.RequestError(error.message, 500, {\n      request: requestOptions\n    });\n  });\n}\n\nasync function getResponseData(response) {\n  const contentType = response.headers.get(\"content-type\");\n\n  if (/application\\/json/.test(contentType)) {\n    return response.json();\n  }\n\n  if (!contentType || /^text\\/|charset=utf-8$/.test(contentType)) {\n    return response.text();\n  }\n\n  return getBufferResponse(response);\n}\n\nfunction toErrorMessage(data) {\n  if (typeof data === \"string\") return data; // istanbul ignore else - just in case\n\n  if (\"message\" in data) {\n    if (Array.isArray(data.errors)) {\n      return `${data.message}: ${data.errors.map(JSON.stringify).join(\", \")}`;\n    }\n\n    return data.message;\n  } // istanbul ignore next - just in case\n\n\n  return `Unknown error: ${JSON.stringify(data)}`;\n}\n\nfunction withDefaults(oldEndpoint, newDefaults) {\n  const endpoint = oldEndpoint.defaults(newDefaults);\n\n  const newApi = function (route, parameters) {\n    const endpointOptions = endpoint.merge(route, parameters);\n\n    if (!endpointOptions.request || !endpointOptions.request.hook) {\n      return fetchWrapper(endpoint.parse(endpointOptions));\n    }\n\n    const request = (route, parameters) => {\n      return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));\n    };\n\n    Object.assign(request, {\n      endpoint,\n      defaults: withDefaults.bind(null, endpoint)\n    });\n    return endpointOptions.request.hook(request, endpointOptions);\n  };\n\n  return Object.assign(newApi, {\n    endpoint,\n    defaults: withDefaults.bind(null, endpoint)\n  });\n}\n\nconst request = withDefaults(endpoint.endpoint, {\n  headers: {\n    \"user-agent\": `octokit-request.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n  }\n});\n\nexports.request = request;\n//# sourceMappingURL=index.js.map\n","var register = require('./lib/register')\nvar addHook = require('./lib/add')\nvar removeHook = require('./lib/remove')\n\n// bind with array of arguments: https://stackoverflow.com/a/21792913\nvar bind = Function.bind\nvar bindable = bind.bind(bind)\n\nfunction bindApi (hook, state, name) {\n  var removeHookRef = bindable(removeHook, null).apply(null, name ? [state, name] : [state])\n  hook.api = { remove: removeHookRef }\n  hook.remove = removeHookRef\n\n  ;['before', 'error', 'after', 'wrap'].forEach(function (kind) {\n    var args = name ? [state, kind, name] : [state, kind]\n    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args)\n  })\n}\n\nfunction HookSingular () {\n  var singularHookName = 'h'\n  var singularHookState = {\n    registry: {}\n  }\n  var singularHook = register.bind(null, singularHookState, singularHookName)\n  bindApi(singularHook, singularHookState, singularHookName)\n  return singularHook\n}\n\nfunction HookCollection () {\n  var state = {\n    registry: {}\n  }\n\n  var hook = register.bind(null, state)\n  bindApi(hook, state)\n\n  return hook\n}\n\nvar collectionHookDeprecationMessageDisplayed = false\nfunction Hook () {\n  if (!collectionHookDeprecationMessageDisplayed) {\n    console.warn('[before-after-hook]: \"Hook()\" repurposing warning, use \"Hook.Collection()\". Read more: https://git.io/upgrade-before-after-hook-to-1.4')\n    collectionHookDeprecationMessageDisplayed = true\n  }\n  return HookCollection()\n}\n\nHook.Singular = HookSingular.bind()\nHook.Collection = HookCollection.bind()\n\nmodule.exports = Hook\n// expose constructors as a named property for TypeScript\nmodule.exports.Hook = Hook\nmodule.exports.Singular = Hook.Singular\nmodule.exports.Collection = Hook.Collection\n","module.exports = addHook;\n\nfunction addHook(state, kind, name, hook) {\n  var orig = hook;\n  if (!state.registry[name]) {\n    state.registry[name] = [];\n  }\n\n  if (kind === \"before\") {\n    hook = function (method, options) {\n      return Promise.resolve()\n        .then(orig.bind(null, options))\n        .then(method.bind(null, options));\n    };\n  }\n\n  if (kind === \"after\") {\n    hook = function (method, options) {\n      var result;\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .then(function (result_) {\n          result = result_;\n          return orig(result, options);\n        })\n        .then(function () {\n          return result;\n        });\n    };\n  }\n\n  if (kind === \"error\") {\n    hook = function (method, options) {\n      return Promise.resolve()\n        .then(method.bind(null, options))\n        .catch(function (error) {\n          return orig(error, options);\n        });\n    };\n  }\n\n  state.registry[name].push({\n    hook: hook,\n    orig: orig,\n  });\n}\n","module.exports = register;\n\nfunction register(state, name, method, options) {\n  if (typeof method !== \"function\") {\n    throw new Error(\"method for before hook must be a function\");\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (Array.isArray(name)) {\n    return name.reverse().reduce(function (callback, name) {\n      return register.bind(null, state, name, callback, options);\n    }, method)();\n  }\n\n  return Promise.resolve().then(function () {\n    if (!state.registry[name]) {\n      return method(options);\n    }\n\n    return state.registry[name].reduce(function (method, registered) {\n      return registered.hook.bind(null, method, options);\n    }, method)();\n  });\n}\n","module.exports = removeHook;\n\nfunction removeHook(state, name, method) {\n  if (!state.registry[name]) {\n    return;\n  }\n\n  var index = state.registry[name]\n    .map(function (registered) {\n      return registered.orig;\n    })\n    .indexOf(method);\n\n  if (index === -1) {\n    return;\n  }\n\n  state.registry[name].splice(index, 1);\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass Deprecation extends Error {\n  constructor(message) {\n    super(message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = 'Deprecation';\n  }\n\n}\n\nexports.Deprecation = Deprecation;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexports.isPlainObject = isPlainObject;\n","'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary:    require('./lib/type/binary'),\n  float:     require('./lib/type/float'),\n  map:       require('./lib/type/map'),\n  null:      require('./lib/type/null'),\n  pairs:     require('./lib/type/pairs'),\n  set:       require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool:      require('./lib/type/bool'),\n  int:       require('./lib/type/int'),\n  merge:     require('./lib/type/merge'),\n  omap:      require('./lib/type/omap'),\n  seq:       require('./lib/type/seq'),\n  str:       require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nmodule.exports.dump = dump;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar makeSnippet         = require('./snippet');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = makeSnippet(mark);\n\n  return new YAMLException(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nmodule.exports.loadAll = loadAll;\nmodule.exports.load    = load;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  return this.extend(definition);\n}\n\n\nSchema.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof Type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new YAMLException('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type.multi) {\n      throw new YAMLException('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nmodule.exports = Schema;\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nmodule.exports = require('./json');\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nmodule.exports = require('./core').extend({\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","'use strict';\n\n\nvar common = require('./common');\n\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nmodule.exports = makeSnippet;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\n\nvar Type = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","\"use strict\";\r\n/* eslint-disable @typescript-eslint/no-empty-interface */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BasicAsyncEnumerable = void 0;\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\n/**\r\n * The class behind IAsyncEnumerable<T>\r\n * @private\r\n */\r\nclass BasicAsyncEnumerable {\r\n    constructor(iterator) {\r\n        this.iterator = iterator;\r\n        //\r\n    }\r\n    [Symbol.asyncIterator]() {\r\n        return this.iterator();\r\n    }\r\n}\r\nexports.BasicAsyncEnumerable = BasicAsyncEnumerable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrderedAsyncEnumerable = void 0;\r\nconst asAsyncSortedKeyValues_1 = require(\"./_ordered/asAsyncSortedKeyValues\");\r\nconst asAsyncSortedKeyValuesSync_1 = require(\"./_ordered/asAsyncSortedKeyValuesSync\");\r\nconst asSortedKeyValues_1 = require(\"./_ordered/asSortedKeyValues\");\r\nconst asSortedKeyValuesSync_1 = require(\"./_ordered/asSortedKeyValuesSync\");\r\nconst BasicAsyncEnumerable_1 = require(\"./BasicAsyncEnumerable\");\r\n/**\r\n * Ordered Async Enumerable\r\n */\r\nclass OrderedAsyncEnumerable extends BasicAsyncEnumerable_1.BasicAsyncEnumerable {\r\n    constructor(orderedPairs) {\r\n        super(async function* () {\r\n            for await (const orderedPair of orderedPairs()) {\r\n                yield* orderedPair;\r\n            }\r\n        });\r\n        this.orderedPairs = orderedPairs;\r\n    }\r\n    static generateAsync(source, keySelector, ascending, comparer) {\r\n        let orderedPairs;\r\n        if (source instanceof OrderedAsyncEnumerable) {\r\n            orderedPairs = async function* () {\r\n                for await (const pair of source.orderedPairs()) {\r\n                    yield* asAsyncSortedKeyValuesSync_1.asAsyncSortedKeyValuesSync(pair, keySelector, ascending, comparer);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            orderedPairs = () => asAsyncSortedKeyValues_1.asAsyncSortedKeyValues(source, keySelector, ascending, comparer);\r\n        }\r\n        return new OrderedAsyncEnumerable(orderedPairs);\r\n    }\r\n    static generate(source, keySelector, ascending, comparer) {\r\n        let orderedPairs;\r\n        if (source instanceof OrderedAsyncEnumerable) {\r\n            orderedPairs = async function* () {\r\n                for await (const pair of source.orderedPairs()) {\r\n                    yield* asSortedKeyValuesSync_1.asSortedKeyValuesSync(pair, keySelector, ascending, comparer);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            orderedPairs = () => asSortedKeyValues_1.asSortedKeyValues(source, keySelector, ascending, comparer);\r\n        }\r\n        return new OrderedAsyncEnumerable(orderedPairs);\r\n    }\r\n    thenBy(keySelector, comparer) {\r\n        return OrderedAsyncEnumerable.generate(this, keySelector, true, comparer);\r\n    }\r\n    thenByAsync(keySelector, comparer) {\r\n        return OrderedAsyncEnumerable.generateAsync(this, keySelector, true, comparer);\r\n    }\r\n    thenByDescending(keySelector, comparer) {\r\n        return OrderedAsyncEnumerable.generate(this, keySelector, false, comparer);\r\n    }\r\n    thenByDescendingAsync(keySelector, comparer) {\r\n        return OrderedAsyncEnumerable.generateAsync(this, keySelector, false, comparer);\r\n    }\r\n}\r\nexports.OrderedAsyncEnumerable = OrderedAsyncEnumerable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asAsyncKeyMap = void 0;\r\n/**\r\n * Converts values to a key values map.\r\n * @param source Async Iterable\r\n * @param keySelector Async Key Selector for Map\r\n * @returns Promise for a Map for Key to Values\r\n */\r\nexports.asAsyncKeyMap = async (source, keySelector) => {\r\n    const map = new Map();\r\n    for await (const item of source) {\r\n        const key = await keySelector(item);\r\n        const currentMapping = map.get(key);\r\n        if (currentMapping) {\r\n            currentMapping.push(item);\r\n        }\r\n        else {\r\n            map.set(key, [item]);\r\n        }\r\n    }\r\n    return map;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asAsyncKeyMapSync = void 0;\r\n/**\r\n * Converts values to a key values map.\r\n * @param source Iterable\r\n * @param keySelector Async Key Selector for Map\r\n * @returns Promise for a Map for Key to Values\r\n */\r\nexports.asAsyncKeyMapSync = async (source, keySelector) => {\r\n    const map = new Map();\r\n    for (const item of source) {\r\n        const key = await keySelector(item);\r\n        const currentMapping = map.get(key);\r\n        if (currentMapping) {\r\n            currentMapping.push(item);\r\n        }\r\n        else {\r\n            map.set(key, [item]);\r\n        }\r\n    }\r\n    return map;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asAsyncSortedKeyValues = void 0;\r\nconst asAsyncKeyMap_1 = require(\"./asAsyncKeyMap\");\r\n/**\r\n * Sorts values in an Async Iterable based on key and a key comparer.\r\n * @param source Async Iterable\r\n * @param keySelector Async Key Selector\r\n * @param ascending Ascending or Descending Sort\r\n * @param comparer Key Comparer for Sorting. Optional.\r\n * @returns Async Iterable Iterator of arrays\r\n */\r\nasync function* asAsyncSortedKeyValues(source, keySelector, ascending, comparer) {\r\n    const map = await asAsyncKeyMap_1.asAsyncKeyMap(source, keySelector);\r\n    const sortedKeys = [...map.keys()].sort(comparer ? comparer : undefined);\r\n    if (ascending) {\r\n        for (let i = 0; i < sortedKeys.length; i++) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = sortedKeys.length - 1; i >= 0; i--) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n}\r\nexports.asAsyncSortedKeyValues = asAsyncSortedKeyValues;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asAsyncSortedKeyValuesSync = void 0;\r\nconst asAsyncKeyMapSync_1 = require(\"./asAsyncKeyMapSync\");\r\n/**\r\n * Sorts values in an Async Iterable based on key and a key comparer.\r\n * @param source Iterable\r\n * @param keySelector Async Key Selector\r\n * @param ascending Ascending or Descending Sort\r\n * @param comparer Key Comparer for Sorting. Optional.\r\n * @returns Async Iterable Iterator of arrays\r\n */\r\nasync function* asAsyncSortedKeyValuesSync(source, keySelector, ascending, comparer) {\r\n    const map = await asAsyncKeyMapSync_1.asAsyncKeyMapSync(source, keySelector);\r\n    const sortedKeys = [...map.keys()].sort(comparer ? comparer : undefined);\r\n    if (ascending) {\r\n        for (let i = 0; i < sortedKeys.length; i++) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = sortedKeys.length - 1; i >= 0; i--) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n}\r\nexports.asAsyncSortedKeyValuesSync = asAsyncSortedKeyValuesSync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asKeyMap = void 0;\r\n/**\r\n * Converts values to a key values map.\r\n * @param source Async Iterable\r\n * @param keySelector Key Selector for Map\r\n * @returns Promise for a Map for Key to Values\r\n */\r\nexports.asKeyMap = async (source, keySelector) => {\r\n    const map = new Map();\r\n    for await (const item of source) {\r\n        const key = keySelector(item);\r\n        const currentMapping = map.get(key);\r\n        if (currentMapping) {\r\n            currentMapping.push(item);\r\n        }\r\n        else {\r\n            map.set(key, [item]);\r\n        }\r\n    }\r\n    return map;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asKeyMapSync = void 0;\r\n/**\r\n * Converts values to a key values map.\r\n * @param source Iterable\r\n * @param keySelector Key Selector for Map\r\n * @returns Map for Key to Values\r\n */\r\nexports.asKeyMapSync = (source, keySelector) => {\r\n    const map = new Map();\r\n    for (const item of source) {\r\n        const key = keySelector(item);\r\n        const currentMapping = map.get(key);\r\n        if (currentMapping) {\r\n            currentMapping.push(item);\r\n        }\r\n        else {\r\n            map.set(key, [item]);\r\n        }\r\n    }\r\n    return map;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asSortedKeyValues = void 0;\r\nconst asKeyMap_1 = require(\"./asKeyMap\");\r\n/**\r\n * Sorts values in an Iterable based on key and a key comparer.\r\n * @param source Async Iterable\r\n * @param keySelector Key Selector\r\n * @param ascending Ascending or Descending Sort\r\n * @param comparer Key Comparer for Sorting. Optional.\r\n * @returns Async Iterable Iterator\r\n */\r\nasync function* asSortedKeyValues(source, keySelector, ascending, comparer) {\r\n    const map = await asKeyMap_1.asKeyMap(source, keySelector);\r\n    const sortedKeys = [...map.keys()].sort(comparer ? comparer : undefined);\r\n    if (ascending) {\r\n        for (let i = 0; i < sortedKeys.length; i++) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = sortedKeys.length - 1; i >= 0; i--) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n}\r\nexports.asSortedKeyValues = asSortedKeyValues;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asSortedKeyValuesSync = void 0;\r\nconst asKeyMapSync_1 = require(\"./asKeyMapSync\");\r\n/**\r\n * Sorts values in an Iterable based on key and a key comparer.\r\n * @param source Iterable\r\n * @param keySelector Key Selector\r\n * @param ascending Ascending or Descending Sort\r\n * @param comparer Key Comparer for Sorting. Optional.\r\n */\r\nfunction* asSortedKeyValuesSync(source, keySelector, ascending, comparer) {\r\n    const map = asKeyMapSync_1.asKeyMapSync(source, keySelector);\r\n    const sortedKeys = [...map.keys()].sort(comparer ? comparer : undefined);\r\n    if (ascending) {\r\n        for (let i = 0; i < sortedKeys.length; i++) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = sortedKeys.length - 1; i >= 0; i--) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n}\r\nexports.asSortedKeyValuesSync = asSortedKeyValuesSync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.aggregate = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nfunction aggregate(source, seedOrFunc, func, resultSelector) {\r\n    if (resultSelector) {\r\n        if (!func) {\r\n            throw new ReferenceError(`TAccumulate function is undefined`);\r\n        }\r\n        return aggregate3(source, seedOrFunc, func, resultSelector);\r\n    }\r\n    else if (func) {\r\n        return aggregate2(source, seedOrFunc, func);\r\n    }\r\n    else {\r\n        return aggregate1(source, seedOrFunc);\r\n    }\r\n}\r\nexports.aggregate = aggregate;\r\nconst aggregate1 = async (source, func) => {\r\n    let aggregateValue;\r\n    for await (const value of source) {\r\n        if (aggregateValue) {\r\n            aggregateValue = func(aggregateValue, value);\r\n        }\r\n        else {\r\n            aggregateValue = value;\r\n        }\r\n    }\r\n    if (aggregateValue === undefined) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return aggregateValue;\r\n};\r\nconst aggregate2 = async (source, seed, func) => {\r\n    let aggregateValue = seed;\r\n    for await (const value of source) {\r\n        aggregateValue = func(aggregateValue, value);\r\n    }\r\n    return aggregateValue;\r\n};\r\nconst aggregate3 = async (source, seed, func, resultSelector) => {\r\n    let aggregateValue = seed;\r\n    for await (const value of source) {\r\n        aggregateValue = func(aggregateValue, value);\r\n    }\r\n    return resultSelector(aggregateValue);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.all = void 0;\r\n/**\r\n * Determines whether all elements of a sequence satisfy a condition.\r\n * @param source An AsyncIterable<T> that contains the elements to apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns ``true`` if every element of the source sequence passes the test in the specified predicate,\r\n * or if the sequence is empty; otherwise, ``false``.\r\n */\r\nexports.all = async (source, predicate) => {\r\n    for await (const item of source) {\r\n        if (predicate(item) === false) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.allAsync = void 0;\r\n/**\r\n * Determines whether all elements of a sequence satisfy a condition.\r\n * @param source An AsyncIterable<T> that contains the elements to apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns Whether all elements of a sequence satisfy the condition.\r\n */\r\nexports.allAsync = async (source, predicate) => {\r\n    for await (const item of source) {\r\n        if (await predicate(item) === false) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.any = void 0;\r\n/**\r\n * Determines whether a sequence contains any elements.\r\n * If predicate is specified, determines whether any element of a sequence satisfies a condition.\r\n * @param source The AsyncIterable<T> to check for emptiness or apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns ``true`` if every element of the source sequence passes the test in the specified predicate,\r\n * or if the sequence is empty; otherwise, ``false``.\r\n */\r\nexports.any = (source, predicate) => {\r\n    if (predicate) {\r\n        return any2(source, predicate);\r\n    }\r\n    else {\r\n        return any1(source);\r\n    }\r\n};\r\nconst any1 = async (source) => {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    for await (const _ of source) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nconst any2 = async (source, predicate) => {\r\n    for await (const item of source) {\r\n        if (predicate(item) === true) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.anyAsync = void 0;\r\n/**\r\n * Determines whether any element of a sequence satisfies a condition.\r\n * @param source An AsyncIterable<T> whose elements to apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns ``true`` if every element of the source sequence passes the test in the specified predicate,\r\n * or if the sequence is empty; otherwise, ``false``.\r\n */\r\nasync function anyAsync(source, predicate) {\r\n    for await (const item of source) {\r\n        if (await predicate(item) === true) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.anyAsync = anyAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asParallel = void 0;\r\nconst fromParallel_1 = require(\"../../parallel/static/fromParallel\");\r\n/**\r\n * Converts an async iterable to a Parallel Enumerable.\r\n * @param source AsyncIterable<T> to convert to IParallelEnumerable<T>\r\n * @returns Parallel Enumerable of source\r\n */\r\nfunction asParallel(source) {\r\n    async function generator() {\r\n        const data = [];\r\n        for await (const value of source) {\r\n            data.push(value);\r\n        }\r\n        return data;\r\n    }\r\n    return fromParallel_1.fromParallel(0 /* PromiseToArray */, generator);\r\n}\r\nexports.asParallel = asParallel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.average = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nfunction average(source, selector) {\r\n    if (selector) {\r\n        return average2(source, selector);\r\n    }\r\n    else {\r\n        return average1(source);\r\n    }\r\n}\r\nexports.average = average;\r\nconst average1 = async (source) => {\r\n    let value;\r\n    let count;\r\n    for await (const item of source) {\r\n        value = (value || 0) + item;\r\n        count = (count || 0) + 1;\r\n    }\r\n    if (value === undefined) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return value / count;\r\n};\r\nconst average2 = async (source, func) => {\r\n    let value;\r\n    let count;\r\n    for await (const item of source) {\r\n        value = (value || 0) + func(item);\r\n        count = (count || 0) + 1;\r\n    }\r\n    if (value === undefined) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return value / count;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.averageAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Computes the average of a sequence of values\r\n * that are obtained by invoking an async transform function on each element of the input sequence.\r\n * @param source A sequence of values to calculate the average of.\r\n * @param selector A transform function to apply to each element.\r\n * @throws {InvalidOperationException} source contains no elements.\r\n * @returns The average value (from the selector) of the specified async sequence\r\n */\r\nexports.averageAsync = async (source, selector) => {\r\n    let value;\r\n    let count;\r\n    for await (const item of source) {\r\n        value = (value || 0) + await selector(item);\r\n        count = (count || 0) + 1;\r\n    }\r\n    if (value === undefined) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return value / count;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.concatenate = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Concatenates two sequences.\r\n * @param first The first sequence to concatenate.\r\n * @param second The sequence to concatenate to the first sequence.\r\n * @returns An IAsyncEnumerable<T> that contains the concatenated elements of the two input sequences.\r\n */\r\nfunction concatenate(first, second) {\r\n    async function* iterator() {\r\n        yield* first;\r\n        yield* second;\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.concatenate = concatenate;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.contains = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Determines whether a sequence contains a specified element by using the specified or default IEqualityComparer<T>.\r\n * @param source A sequence in which to locate a value.\r\n * @param value The value to locate in the sequence.\r\n * @param comparer An equality comparer to compare values. Optional.\r\n * @returns Whether a sequence contains a specified element\r\n */\r\nasync function contains(source, value, comparer = shared_1.StrictEqualityComparer) {\r\n    for await (const item of source) {\r\n        if (comparer(value, item)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.contains = contains;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.containsAsync = void 0;\r\n/**\r\n * Determines whether a sequence contains a specified element by using the specified or default IEqualityComparer<T>.\r\n * @param source A sequence in which to locate a value.\r\n * @param value The value to locate in the sequence.\r\n * @param comparer An equality comparer to compare values. Optional.\r\n * @returns Whether or not the async sequence contains the specified value\r\n */\r\nexports.containsAsync = async (source, value, comparer) => {\r\n    for await (const item of source) {\r\n        if (await comparer(value, item)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.count = void 0;\r\n/**\r\n * Returns the number of elements in a sequence\r\n * or represents how many elements in the specified sequence satisfy a condition\r\n * if the predicate is specified.\r\n * @param source A sequence that contains elements to be counted.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @returns The number of elements in the input sequence.\r\n */\r\nexports.count = (source, predicate) => {\r\n    if (predicate) {\r\n        return count2(source, predicate);\r\n    }\r\n    else {\r\n        return count1(source);\r\n    }\r\n};\r\nconst count1 = async (source) => {\r\n    let total = 0;\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    for await (const _ of source) {\r\n        total++;\r\n    }\r\n    return total;\r\n};\r\nconst count2 = async (source, predicate) => {\r\n    let total = 0;\r\n    for await (const value of source) {\r\n        if (predicate(value) === true) {\r\n            total++;\r\n        }\r\n    }\r\n    return total;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.countAsync = void 0;\r\n/**\r\n * Returns the number of elements in a sequence\r\n * or represents how many elements in the specified sequence satisfy a condition\r\n * if the predicate is specified.\r\n * @param source A sequence that contains elements to be counted.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @returns The number of elements in the sequence.\r\n */\r\nexports.countAsync = async (source, predicate) => {\r\n    let count = 0;\r\n    for await (const value of source) {\r\n        if (await predicate(value) === true) {\r\n            count++;\r\n        }\r\n    }\r\n    return count;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.distinct = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Returns distinct elements from a sequence by using the default or specified equality comparer to compare values.\r\n * @param source The sequence to remove duplicate elements from.\r\n * @param comparer An IEqualityComparer<T> to compare values. Optional. Defaults to Strict Equality Comparison.\r\n * @returns An IAsyncEnumerable<T> that contains distinct elements from the source sequence.\r\n */\r\nfunction distinct(source, comparer = shared_1.StrictEqualityComparer) {\r\n    async function* iterator() {\r\n        const distinctElements = [];\r\n        for await (const item of source) {\r\n            const foundItem = distinctElements.find((x) => comparer(x, item));\r\n            if (!foundItem) {\r\n                distinctElements.push(item);\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.distinct = distinct;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.distinctAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Returns distinct elements from a sequence by using the specified equality comparer to compare values.\r\n * @param source The sequence to remove duplicate elements from.\r\n * @param comparer An IAsyncEqualityComparer<T> to compare values.\r\n * @returns An IAsyncEnumerable<T> that contains distinct elements from the source sequence.\r\n */\r\nexports.distinctAsync = (source, comparer) => {\r\n    async function* iterator() {\r\n        const distinctElements = [];\r\n        outerLoop: for await (const item of source) {\r\n            for (const distinctElement of distinctElements) {\r\n                const found = await comparer(distinctElement, item);\r\n                if (found) {\r\n                    continue outerLoop;\r\n                }\r\n            }\r\n            distinctElements.push(item);\r\n            yield item;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.each = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Performs a specified action on each element of the Iterable<TSource>\r\n * @param source The source to iterate\r\n * @param action The action to take an each element\r\n * @returns A new IAsyncEnumerable<T> that executes the action lazily as you iterate.\r\n */\r\nexports.each = (source, action) => {\r\n    async function* iterator() {\r\n        for await (const value of source) {\r\n            action(value);\r\n            yield value;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.eachAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Performs a specified action on each element of the AsyncIterable<TSource>\r\n * @param source The source to iterate\r\n * @param action The action to take an each element\r\n * @returns A new IAsyncEnumerable<T> that executes the action lazily as you iterate.\r\n */\r\nexports.eachAsync = (source, action) => {\r\n    async function* iterator() {\r\n        for await (const value of source) {\r\n            await action(value);\r\n            yield value;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.elementAt = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the element at a specified index in a sequence.\r\n * @param source An IEnumerable<T> to return an element from.\r\n * @param index The zero-based index of the element to retrieve.\r\n * @throws {ArgumentOutOfRangeException}\r\n * index is less than 0 or greater than or equal to the number of elements in source.\r\n * @returns Element at the specified index in the sequence.\r\n */\r\nexports.elementAt = async (source, index) => {\r\n    if (index < 0) {\r\n        throw new shared_1.ArgumentOutOfRangeException(\"index\");\r\n    }\r\n    let i = 0;\r\n    for await (const item of source) {\r\n        if (index === i++) {\r\n            return item;\r\n        }\r\n    }\r\n    throw new shared_1.ArgumentOutOfRangeException(\"index\");\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.elementAtOrDefault = void 0;\r\n/**\r\n * Returns the element at a specified index in a sequence or a default value if the index is out of range.\r\n * @param source An IEnumerable<T> to return an element from.\r\n * @param index The zero-based index of the element to retrieve.\r\n * @returns\r\n * default(TSource) if the index is outside the bounds of the source sequence;\r\n * otherwise, the element at the specified position in the source sequence.\r\n */\r\nexports.elementAtOrDefault = async (source, index) => {\r\n    let i = 0;\r\n    for await (const item of source) {\r\n        if (index === i++) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.except = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Produces the set difference of two sequences by using the comparer provided\r\n * or EqualityComparer to compare values.\r\n * @param first An AsyncIterable<T> whose elements that are not also in second will be returned.\r\n * @param second An AsyncIterable<T> whose elements that also occur in the first sequence\r\n * will cause those elements to be removed from the returned sequence.\r\n * @param comparer An IEqualityComparer<T> to compare values. Optional.\r\n * @returns A sequence that contains the set difference of the elements of two sequences.\r\n */\r\nexports.except = (first, second, comparer = shared_1.StrictEqualityComparer) => {\r\n    async function* iterator() {\r\n        // TODO: async eq of [...second] ?\r\n        const secondArray = [];\r\n        for await (const x of second) {\r\n            secondArray.push(x);\r\n        }\r\n        for await (const firstItem of first) {\r\n            let exists = false;\r\n            for (let j = 0; j < secondArray.length; j++) {\r\n                const secondItem = secondArray[j];\r\n                if (comparer(firstItem, secondItem) === true) {\r\n                    exists = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (exists === false) {\r\n                yield firstItem;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.exceptAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Produces the set difference of two sequences by using the comparer provided to compare values.\r\n * @param first An AsyncIterable<T> whose elements that are not also in second will be returned.\r\n * @param second An AsyncIterable<T> whose elements that also occur in the first sequence\r\n * will cause those elements to be removed from the returned sequence.\r\n * @param comparer An IAsyncEqualityComparer<T> to compare values.\r\n * @returns A sequence that contains the set difference of the elements of two sequences.\r\n */\r\nfunction exceptAsync(first, second, comparer) {\r\n    async function* iterator() {\r\n        // TODO: async eq of [...second] ?\r\n        const secondArray = [];\r\n        for await (const x of second) {\r\n            secondArray.push(x);\r\n        }\r\n        for await (const firstItem of first) {\r\n            let exists = false;\r\n            for (let j = 0; j < secondArray.length; j++) {\r\n                const secondItem = secondArray[j];\r\n                if (await comparer(firstItem, secondItem) === true) {\r\n                    exists = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (exists === false) {\r\n                yield firstItem;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.exceptAsync = exceptAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.first = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the first element of a sequence.\r\n * If predicate is specified, returns the first element in a sequence that satisfies a specified condition.\r\n * @param source The AsyncIterable<T> to return the first element of.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @throws {InvalidOperationException} The source sequence is empty.\r\n * @returns The first element in the specified sequence.\r\n * If predicate is specified,\r\n * the first element in the sequence that passes the test in the specified predicate function.\r\n */\r\nexports.first = (source, predicate) => {\r\n    if (predicate) {\r\n        return first2(source, predicate);\r\n    }\r\n    else {\r\n        return first1(source);\r\n    }\r\n};\r\nconst first1 = async (source) => {\r\n    const firstElement = await source[Symbol.asyncIterator]().next();\r\n    if (firstElement.done === true) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return firstElement.value;\r\n};\r\nconst first2 = async (source, predicate) => {\r\n    for await (const value of source) {\r\n        if (predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.firstAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the first element in a sequence that satisfies a specified condition.\r\n * @param source An AsyncIterable<T> to return an element from.\r\n * @param predicate An async function to test each element for a condition.\r\n * @throws {InvalidOperationException} No elements in Iteration matching predicate\r\n * @returns The first element in the sequence that passes the test in the specified predicate function.\r\n */\r\nasync function firstAsync(source, predicate) {\r\n    for await (const value of source) {\r\n        if (await predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n}\r\nexports.firstAsync = firstAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.firstOrDefault = void 0;\r\n/**\r\n * Returns first element in sequence that satisfies predicate otherwise\r\n * returns the first element in the sequence. Returns null if no value found.\r\n * @param source An AsyncIterable<T> to return an element from.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @returns The first element in the sequence\r\n * or the first element that passes the test in the specified predicate function.\r\n * Returns null if no value found.\r\n */\r\nfunction firstOrDefault(source, predicate) {\r\n    if (predicate) {\r\n        return firstOrDefault2(source, predicate);\r\n    }\r\n    else {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return firstOrDefault1(source);\r\n    }\r\n}\r\nexports.firstOrDefault = firstOrDefault;\r\nconst firstOrDefault1 = async (source) => {\r\n    const first = await source[Symbol.asyncIterator]().next();\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return first.value || null;\r\n};\r\nconst firstOrDefault2 = async (source, predicate) => {\r\n    for await (const value of source) {\r\n        if (predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.firstOrDefaultAsync = void 0;\r\n/**\r\n * Returns first element in sequence that satisfies. Returns null if no value found.\r\n * @param source An AsyncIterable<T> to return an element from.\r\n * @param predicate An async function to test each element for a condition.\r\n * @returns The first element that passes the test in the specified predicate function.\r\n * Returns null if no value found.\r\n */\r\nasync function firstOrDefaultAsync(source, predicate) {\r\n    for await (const value of source) {\r\n        if (await predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.firstOrDefaultAsync = firstOrDefaultAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.groupBy = void 0;\r\nconst Grouping_1 = require(\"../../sync/Grouping\");\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\nfunction groupBy(source, keySelector, comparer) {\r\n    if (comparer) {\r\n        return groupBy_0(source, keySelector, comparer);\r\n    }\r\n    else {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return groupBy_0_Simple(source, keySelector);\r\n    }\r\n}\r\nexports.groupBy = groupBy;\r\nfunction groupBy_0(source, keySelector, comparer) {\r\n    async function* generate() {\r\n        const keyMap = new Array();\r\n        for await (const value of source) {\r\n            const key = keySelector(value);\r\n            let found = false;\r\n            for (let i = 0; i < keyMap.length; i++) {\r\n                const group = keyMap[i];\r\n                if (comparer(group.key, key)) {\r\n                    group.push(value);\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === false) {\r\n                keyMap.push(new Grouping_1.Grouping(key, value)); // TODO\r\n            }\r\n        }\r\n        for (const g of keyMap) {\r\n            yield g;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(generate);\r\n}\r\nfunction groupBy_0_Simple(source, keySelector) {\r\n    async function* iterator() {\r\n        const keyMap = {};\r\n        for await (const value of source) {\r\n            const key = keySelector(value);\r\n            const grouping = keyMap[key];\r\n            if (grouping) {\r\n                grouping.push(value);\r\n            }\r\n            else {\r\n                keyMap[key] = new Grouping_1.Grouping(key, value);\r\n            }\r\n        }\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const value in keyMap) {\r\n            yield keyMap[value];\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.groupByAsync = void 0;\r\nconst Grouping_1 = require(\"../../sync/Grouping\");\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\nfunction groupByAsync(source, keySelector, comparer) {\r\n    if (comparer) {\r\n        return groupByAsync_0(source, keySelector, comparer);\r\n    }\r\n    else {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return groupByAsync_0_Simple(source, keySelector);\r\n    }\r\n}\r\nexports.groupByAsync = groupByAsync;\r\nfunction groupByAsync_0_Simple(source, keySelector) {\r\n    async function* iterator() {\r\n        const keyMap = {}; // TODO\r\n        for await (const value of source) {\r\n            const key = await keySelector(value);\r\n            const grouping = keyMap[key];\r\n            if (grouping) {\r\n                grouping.push(value);\r\n            }\r\n            else {\r\n                keyMap[key] = new Grouping_1.Grouping(key, value);\r\n            }\r\n        }\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const value in keyMap) {\r\n            yield keyMap[value];\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nfunction groupByAsync_0(source, keySelector, comparer) {\r\n    async function* generate() {\r\n        const keyMap = new Array();\r\n        for await (const value of source) {\r\n            const key = await keySelector(value);\r\n            let found = false;\r\n            for (let i = 0; i < keyMap.length; i++) {\r\n                const group = keyMap[i];\r\n                if (await comparer(group.key, key) === true) {\r\n                    group.push(value);\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === false) {\r\n                keyMap.push(new Grouping_1.Grouping(key, value));\r\n            }\r\n        }\r\n        for (const keyValue of keyMap) {\r\n            yield keyValue;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(generate);\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.groupByWithSel = void 0;\r\nconst Grouping_1 = require(\"../../sync/Grouping\");\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\nfunction groupByWithSel(source, keySelector, elementSelector, comparer) {\r\n    if (comparer) {\r\n        return groupBy1(source, keySelector, elementSelector, comparer);\r\n    }\r\n    else {\r\n        return groupBy1Simple(source, keySelector, elementSelector);\r\n    }\r\n}\r\nexports.groupByWithSel = groupByWithSel;\r\nconst groupBy1Simple = (source, keySelector, elementSelector) => {\r\n    async function* generate() {\r\n        const keyMap = {};\r\n        for await (const value of source) {\r\n            const key = keySelector(value);\r\n            const grouping = keyMap[key];\r\n            const element = elementSelector(value);\r\n            if (grouping) {\r\n                grouping.push(element);\r\n            }\r\n            else {\r\n                keyMap[key] = new Grouping_1.Grouping(key, element);\r\n            }\r\n        }\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const value in keyMap) {\r\n            yield keyMap[value];\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(generate);\r\n};\r\nconst groupBy1 = (source, keySelector, elementSelector, comparer) => {\r\n    async function* generate() {\r\n        const keyMap = new Array();\r\n        for await (const value of source) {\r\n            const key = keySelector(value);\r\n            let found = false;\r\n            for (let i = 0; i < keyMap.length; i++) {\r\n                const group = keyMap[i];\r\n                if (comparer(group.key, key)) {\r\n                    group.push(elementSelector(value));\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === false) {\r\n                const element = elementSelector(value);\r\n                keyMap.push(new Grouping_1.Grouping(key, element)); // TODO\r\n            }\r\n        }\r\n        for (const value of keyMap) {\r\n            yield value;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(generate);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.intersect = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Produces the set intersection of two sequences by using the specified IEqualityComparer<T> to compare values.\r\n * If not comparer is specified, uses the @see {StrictEqualityComparer}\r\n * @param first An IAsyncEnumerable<T> whose distinct elements that also appear in second will be returned.\r\n * @param second An IAsyncEnumerable<T> whose distinct elements that also appear in the first sequence will be returned.\r\n * @param comparer An IAsyncEqualityComparer<T> to compare values. Optional.\r\n * @returns A sequence that contains the elements that form the set intersection of two sequences.\r\n */\r\nfunction intersect(first, second, comparer = shared_1.StrictEqualityComparer) {\r\n    async function* iterator() {\r\n        const firstResults = await first.distinct(comparer).toArray();\r\n        if (firstResults.length === 0) {\r\n            return;\r\n        }\r\n        const secondResults = await second.toArray();\r\n        for (let i = 0; i < firstResults.length; i++) {\r\n            const firstValue = firstResults[i];\r\n            for (let j = 0; j < secondResults.length; j++) {\r\n                const secondValue = secondResults[j];\r\n                if (comparer(firstValue, secondValue) === true) {\r\n                    yield firstValue;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.intersect = intersect;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.intersectAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Produces the set intersection of two sequences by using the specified IAsyncEqualityComparer<T> to compare values.\r\n * @param first An IAsyncEnumerable<T> whose distinct elements that also appear in second will be returned.\r\n * @param second An IAsyncEnumerable<T> whose distinct elements that also appear in the first sequence will be returned.\r\n * @param comparer An IAsyncEqualityComparer<T> to compare values.\r\n * @returns A sequence that contains the elements that form the set intersection of two sequences.\r\n */\r\nfunction intersectAsync(first, second, comparer) {\r\n    async function* iterator() {\r\n        const firstResults = await first.distinctAsync(comparer).toArray();\r\n        if (firstResults.length === 0) {\r\n            return;\r\n        }\r\n        const secondResults = await second.toArray();\r\n        for (let i = 0; i < firstResults.length; i++) {\r\n            const firstValue = firstResults[i];\r\n            for (let j = 0; j < secondResults.length; j++) {\r\n                const secondValue = secondResults[j];\r\n                if (await comparer(firstValue, secondValue) === true) {\r\n                    yield firstValue;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.intersectAsync = intersectAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.join = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Correlates the elements of two sequences based on matching keys.\r\n * A specified IEqualityComparer<T> is used to compare keys or the strict equality comparer.\r\n * @param outer The first sequence to join.\r\n * @param inner The sequence to join to the first sequence.\r\n * @param outerKeySelector A function to extract the join key from each element of the first sequence.\r\n * @param innerKeySelector A function to extract the join key from each element of the second sequence.\r\n * @param resultSelector A function to create a result element from two matching elements.\r\n * @param comparer An IEqualityComparer<T> to hash and compare keys. Optional.\r\n * @returns An IAsyncEnumerable<T> that has elements of type TResult that\r\n * are obtained by performing an inner join on two sequences.\r\n */\r\nfunction join(outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer = shared_1.StrictEqualityComparer) {\r\n    async function* iterator() {\r\n        const innerArray = [];\r\n        for await (const i of inner) {\r\n            innerArray.push(i);\r\n        }\r\n        for await (const o of outer) {\r\n            const outerKey = outerKeySelector(o);\r\n            for (const i of innerArray) {\r\n                const innerKey = innerKeySelector(i);\r\n                if (comparer(outerKey, innerKey) === true) {\r\n                    yield resultSelector(o, i);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.join = join;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.last = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the last element of a sequence.\r\n * If predicate is specified, the last element of a sequence that satisfies a specified condition.\r\n * @param source An AsyncIterable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @throws {InvalidOperationException} The source sequence is empty.\r\n * @returns The value at the last position in the source sequence\r\n * or the last element in the sequence that passes the test in the specified predicate function.\r\n */\r\nasync function last(source, predicate) {\r\n    if (predicate) {\r\n        return last2(source, predicate);\r\n    }\r\n    else {\r\n        return last1(source);\r\n    }\r\n}\r\nexports.last = last;\r\nconst last1 = async (source) => {\r\n    let lastItem = null;\r\n    for await (const value of source) {\r\n        lastItem = value;\r\n    }\r\n    if (!lastItem) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return lastItem;\r\n};\r\nconst last2 = async (source, predicate) => {\r\n    let lastItem = null;\r\n    for await (const value of source) {\r\n        if (predicate(value) === true) {\r\n            lastItem = value;\r\n        }\r\n    }\r\n    if (!lastItem) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n    }\r\n    return lastItem;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.lastAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the last element of a sequence that satisfies a specified condition.\r\n * @param source An AsyncIterable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition.\r\n * @throws {InvalidOperationException} The source sequence is empty.\r\n * @returns The last element in the sequence that passes the test in the specified predicate function.\r\n */\r\nasync function lastAsync(source, predicate) {\r\n    let last = null;\r\n    for await (const value of source) {\r\n        if (await predicate(value) === true) {\r\n            last = value;\r\n        }\r\n    }\r\n    if (!last) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n    }\r\n    return last;\r\n}\r\nexports.lastAsync = lastAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.lastOrDefault = void 0;\r\n/**\r\n * Returns the last element of a sequence.\r\n * If predicate is specified, the last element of a sequence that satisfies a specified condition.\r\n * @param source An AsyncIterable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @returns The value at the last position in the source sequence\r\n * or the last element in the sequence that passes the test in the specified predicate function.\r\n */\r\nasync function lastOrDefault(source, predicate) {\r\n    if (predicate) {\r\n        return lastOrDefault2(source, predicate);\r\n    }\r\n    else {\r\n        return lastOrDefault1(source);\r\n    }\r\n}\r\nexports.lastOrDefault = lastOrDefault;\r\nconst lastOrDefault1 = async (source) => {\r\n    let last = null;\r\n    for await (const value of source) {\r\n        last = value;\r\n    }\r\n    return last;\r\n};\r\nconst lastOrDefault2 = async (source, predicate) => {\r\n    let last = null;\r\n    for await (const value of source) {\r\n        if (predicate(value) === true) {\r\n            last = value;\r\n        }\r\n    }\r\n    return last;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.lastOrDefaultAsync = void 0;\r\n/**\r\n * Returns the last element of a sequence that satisfies a specified condition.\r\n * @param source An AsyncIterable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns The last element in the sequence that passes the test in the specified predicate function.\r\n * Null if no elements.\r\n */\r\nasync function lastOrDefaultAsync(source, predicate) {\r\n    let last = null;\r\n    for await (const value of source) {\r\n        if (await predicate(value) === true) {\r\n            last = value;\r\n        }\r\n    }\r\n    return last;\r\n}\r\nexports.lastOrDefaultAsync = lastOrDefaultAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.max = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nfunction max(source, selector) {\r\n    if (selector) {\r\n        return max2(source, selector);\r\n    }\r\n    else {\r\n        return max1(source);\r\n    }\r\n}\r\nexports.max = max;\r\nconst max1 = async (source) => {\r\n    let maxItem = null;\r\n    for await (const item of source) {\r\n        maxItem = Math.max(maxItem || Number.NEGATIVE_INFINITY, item);\r\n    }\r\n    if (maxItem === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return maxItem;\r\n    }\r\n};\r\nconst max2 = async (source, selector) => {\r\n    let maxItem = null;\r\n    for await (const item of source) {\r\n        maxItem = Math.max(maxItem || Number.NEGATIVE_INFINITY, selector(item));\r\n    }\r\n    if (maxItem === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return maxItem;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.maxAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Invokes an async transform function on each element of a sequence and returns the maximum value.\r\n * @param source A sequence of values to determine the maximum value of.\r\n * @param selector A transform function to apply to each element.\r\n * @throws {InvalidOperationException} source contains no elements.\r\n * @returns The maximum value in the sequence.\r\n */\r\nasync function maxAsync(source, selector) {\r\n    let max = null;\r\n    for await (const item of source) {\r\n        max = Math.max(max || Number.NEGATIVE_INFINITY, await selector(item));\r\n    }\r\n    if (max === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return max;\r\n    }\r\n}\r\nexports.maxAsync = maxAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.min = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nfunction min(source, selector) {\r\n    if (selector) {\r\n        return min2(source, selector);\r\n    }\r\n    else {\r\n        return min1(source);\r\n    }\r\n}\r\nexports.min = min;\r\nconst min1 = async (source) => {\r\n    let minValue = null;\r\n    for await (const item of source) {\r\n        minValue = Math.min(minValue || Number.POSITIVE_INFINITY, item);\r\n    }\r\n    if (minValue === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return minValue;\r\n    }\r\n};\r\nconst min2 = async (source, selector) => {\r\n    let minValue = null;\r\n    for await (const item of source) {\r\n        minValue = Math.min(minValue || Number.POSITIVE_INFINITY, selector(item));\r\n    }\r\n    if (minValue === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return minValue;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.minAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Invokes a transform function on each element of a sequence and returns the minimum value.\r\n * @param source A sequence of values to determine the minimum value of.\r\n * @param selector A transform function to apply to each element.\r\n * @throws {InvalidOperationException} source contains no elements.\r\n * @returns The minimum value in the sequence.\r\n */\r\nasync function minAsync(source, selector) {\r\n    let min = null;\r\n    for await (const item of source) {\r\n        min = Math.min(min || Number.POSITIVE_INFINITY, await selector(item));\r\n    }\r\n    if (min === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return min;\r\n    }\r\n}\r\nexports.minAsync = minAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ofType = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Applies a type filter to a source iteration\r\n * @param source Async Iteration to Filtery by Type\r\n * @param type Either value for typeof or a consturctor function\r\n * @returns Values that match the type string or are instance of type\r\n */\r\nfunction ofType(source, type) {\r\n    const typeCheck = typeof type === \"string\" ?\r\n        ((x) => typeof x === type) :\r\n        ((x) => x instanceof type);\r\n    async function* iterator() {\r\n        for await (const item of source) {\r\n            if (typeCheck(item)) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.ofType = ofType;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderBy = void 0;\r\nconst OrderedAsyncEnumerable_1 = require(\"../OrderedAsyncEnumerable\");\r\n/**\r\n * Sorts the elements of a sequence in ascending order by using a specified or default comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector A function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys. Optional.\r\n * @returns An IOrderedAsyncEnumerable<TElement> whose elements are sorted according to a key.\r\n */\r\nfunction orderBy(source, keySelector, comparer) {\r\n    return OrderedAsyncEnumerable_1.OrderedAsyncEnumerable.generate(source, keySelector, true, comparer);\r\n}\r\nexports.orderBy = orderBy;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderByAsync = void 0;\r\nconst OrderedAsyncEnumerable_1 = require(\"../OrderedAsyncEnumerable\");\r\n/**\r\n * Sorts the elements of a sequence in ascending order by using a specified comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector An async function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys.\r\n * @returns An IOrderedAsyncEnumerable<TElement> whose elements are sorted according to a key.\r\n */\r\nfunction orderByAsync(source, keySelector, comparer) {\r\n    return OrderedAsyncEnumerable_1.OrderedAsyncEnumerable.generateAsync(source, keySelector, true, comparer);\r\n}\r\nexports.orderByAsync = orderByAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderByDescending = void 0;\r\nconst OrderedAsyncEnumerable_1 = require(\"../OrderedAsyncEnumerable\");\r\n/**\r\n * Sorts the elements of a sequence in descending order by using a specified or default comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector A function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys. Optional.\r\n * @returns An IOrderedAsyncEnumerable<TElement> whose elements are sorted in descending order according to a key.\r\n */\r\nfunction orderByDescending(source, keySelector, comparer) {\r\n    return OrderedAsyncEnumerable_1.OrderedAsyncEnumerable.generate(source, keySelector, false, comparer);\r\n}\r\nexports.orderByDescending = orderByDescending;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderByDescendingAsync = void 0;\r\nconst OrderedAsyncEnumerable_1 = require(\"../OrderedAsyncEnumerable\");\r\n/**\r\n * Sorts the elements of an async sequence in descending order by using a specified comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector An async function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys.\r\n * @returns An IOrderedAsyncEnumerable<TElement> whose elements are sorted in descending order according to a key.\r\n */\r\nfunction orderByDescendingAsync(source, keySelector, comparer) {\r\n    return OrderedAsyncEnumerable_1.OrderedAsyncEnumerable.generateAsync(source, keySelector, false, comparer);\r\n}\r\nexports.orderByDescendingAsync = orderByDescendingAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.reverse = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Inverts the order of the elements in a sequence.\r\n * @param source A sequence of values to reverse.\r\n * @returns A sequence whose elements correspond to those of the input sequence in reverse order.\r\n */\r\nfunction reverse(source) {\r\n    async function* iterator() {\r\n        const values = [];\r\n        for await (const value of source) {\r\n            values.push(value);\r\n        }\r\n        for (let i = values.length - 1; i >= 0; i--) {\r\n            yield values[i];\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.reverse = reverse;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.select = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\nfunction select(source, selector) {\r\n    if (typeof selector === \"function\") {\r\n        if (selector.length === 1) {\r\n            return select1(source, selector);\r\n        }\r\n        else {\r\n            return select2(source, selector);\r\n        }\r\n    }\r\n    else {\r\n        return select3(source, selector);\r\n    }\r\n}\r\nexports.select = select;\r\nconst select1 = (source, selector) => {\r\n    async function* iterator() {\r\n        for await (const value of source) {\r\n            yield selector(value);\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst select2 = (source, selector) => {\r\n    async function* iterator() {\r\n        let index = 0;\r\n        for await (const value of source) {\r\n            yield selector(value, index);\r\n            index++;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst select3 = (source, key) => {\r\n    async function* iterator() {\r\n        for await (const value of source) {\r\n            yield value[key];\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.selectAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\nfunction selectAsync(source, selector) {\r\n    if (typeof selector === \"string\") {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return selectAsync2(source, selector);\r\n    }\r\n    else {\r\n        return selectAsync1(source, selector);\r\n    }\r\n}\r\nexports.selectAsync = selectAsync;\r\nconst selectAsync1 = (source, selector) => {\r\n    async function* iterator() {\r\n        for await (const value of source) {\r\n            yield selector(value);\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst selectAsync2 = (source, key) => {\r\n    async function* iterator() {\r\n        for await (const value of source) {\r\n            yield value[key];\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.selectMany = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\nfunction selectMany(source, selector) {\r\n    if (typeof selector === \"function\") {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        if (selector.length === 1) {\r\n            return selectMany1(source, selector);\r\n        }\r\n        else {\r\n            return selectMany2(source, selector);\r\n        }\r\n    }\r\n    else {\r\n        return selectMany3(source, selector);\r\n    }\r\n}\r\nexports.selectMany = selectMany;\r\nconst selectMany1 = (source, selector) => {\r\n    async function* iterator() {\r\n        for await (const value of source) {\r\n            for (const selectorValue of selector(value)) {\r\n                yield selectorValue;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst selectMany2 = (source, selector) => {\r\n    async function* iterator() {\r\n        let index = 0;\r\n        for await (const value of source) {\r\n            for (const selectorValue of selector(value, index)) {\r\n                yield selectorValue;\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst selectMany3 = (source, selector) => {\r\n    async function* iterator() {\r\n        for await (const value of source) {\r\n            for (const selectorValue of value[selector]) {\r\n                yield selectorValue;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.selectManyAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Projects each element of a sequence to an IAsyncEnumerable<T> and flattens the resulting sequences into one sequence.\r\n * @param source A sequence of values to project.\r\n * @param selector A transform function to apply to each element.\r\n * @returns An IAsyncEnumerable<T> whose elements are the result of invoking the\r\n * one-to-many transform function on each element of the input sequence.\r\n */\r\nfunction selectManyAsync(source, selector) {\r\n    if (selector.length === 1) {\r\n        const iterator = async function* () {\r\n            for await (const value of source) {\r\n                const many = await selector(value);\r\n                for (const innerValue of many) {\r\n                    yield innerValue;\r\n                }\r\n            }\r\n        };\r\n        return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n    }\r\n    else {\r\n        const iterator = async function* () {\r\n            let index = 0;\r\n            for await (const value of source) {\r\n                const many = await selector(value, index);\r\n                for (const innerValue of many) {\r\n                    yield innerValue;\r\n                }\r\n                index++;\r\n            }\r\n        };\r\n        return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n    }\r\n}\r\nexports.selectManyAsync = selectManyAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sequenceEquals = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Compares two async iterations to see if they are equal using a comparer function.\r\n * @param first First Sequence\r\n * @param second Second Sequence\r\n * @param comparer Comparer\r\n * @returns Whether or not the two iterations are equal\r\n */\r\nasync function sequenceEquals(first, second, comparer = shared_1.StrictEqualityComparer) {\r\n    const firstIterator = first[Symbol.asyncIterator]();\r\n    const secondIterator = second[Symbol.asyncIterator]();\r\n    let results = await Promise.all([firstIterator.next(), secondIterator.next()]);\r\n    let firstResult = results[0];\r\n    let secondResult = results[1];\r\n    while (!firstResult.done && !secondResult.done) {\r\n        if (!comparer(firstResult.value, secondResult.value)) {\r\n            return false;\r\n        }\r\n        results = await Promise.all([firstIterator.next(), secondIterator.next()]);\r\n        firstResult = results[0];\r\n        secondResult = results[1];\r\n    }\r\n    return firstResult.done === true && secondResult.done === true;\r\n}\r\nexports.sequenceEquals = sequenceEquals;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sequenceEqualsAsync = void 0;\r\n/**\r\n * Compares two async iterables to see if they are equal using a async comparer function.\r\n * @param first First Sequence\r\n * @param second Second Sequence\r\n * @param comparer Async Comparer\r\n * @returns Whether or not the two iterations are equal\r\n */\r\nasync function sequenceEqualsAsync(first, second, comparer) {\r\n    const firstIterator = first[Symbol.asyncIterator]();\r\n    const secondIterator = second[Symbol.asyncIterator]();\r\n    let results = await Promise.all([firstIterator.next(), secondIterator.next()]);\r\n    let firstResult = results[0];\r\n    let secondResult = results[1];\r\n    while (!firstResult.done && !secondResult.done) {\r\n        if (await comparer(firstResult.value, secondResult.value) === false) {\r\n            return false;\r\n        }\r\n        results = await Promise.all([firstIterator.next(), secondIterator.next()]);\r\n        firstResult = results[0];\r\n        secondResult = results[1];\r\n    }\r\n    return firstResult.done === true && secondResult.done === true;\r\n}\r\nexports.sequenceEqualsAsync = sequenceEqualsAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.single = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the only element of a sequence that satisfies a specified condition (if specified),\r\n * and throws an exception if more than one such element exists.\r\n * @param source An AsyncIterable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition. (Optional)\r\n * @throws {InvalidOperationException} No element satisfies the condition in predicate. OR\r\n * More than one element satisfies the condition in predicate. OR\r\n * The source sequence is empty.\r\n * @returns The single element of the input sequence that satisfies a condition.\r\n */\r\nfunction single(source, predicate) {\r\n    if (predicate) {\r\n        return single2(source, predicate);\r\n    }\r\n    else {\r\n        return single1(source);\r\n    }\r\n}\r\nexports.single = single;\r\nconst single1 = async (source) => {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for await (const value of source) {\r\n        if (hasValue === true) {\r\n            throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n        }\r\n        else {\r\n            hasValue = true;\r\n            singleValue = value;\r\n        }\r\n    }\r\n    if (hasValue === false) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return singleValue;\r\n};\r\nconst single2 = async (source, predicate) => {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for await (const value of source) {\r\n        if (predicate(value)) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneMatchingElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    if (hasValue === false) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n    }\r\n    return singleValue;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.singleAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the only element of a sequence that satisfies a specified condition,\r\n * and throws an exception if more than one such element exists.\r\n * @param source An AsyncIterable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition.\r\n * @throws {InvalidOperationException}\r\n * No element satisfies the condition in predicate. OR\r\n * More than one element satisfies the condition in predicate. OR\r\n * The source sequence is empty.\r\n * @returns The single element of the input sequence that satisfies a condition.\r\n */\r\nasync function singleAsync(source, predicate) {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for await (const value of source) {\r\n        if (await predicate(value)) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneMatchingElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    if (hasValue === false) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n    }\r\n    return singleValue;\r\n}\r\nexports.singleAsync = singleAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.singleOrDefault = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * If predicate is specified returns the only element of a sequence that satisfies a specified condition,\r\n * ootherwise returns the only element of a sequence. Returns a default value if no such element exists.\r\n * @param source An AsyncIterable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition. Optional.\r\n * @throws {InvalidOperationException}\r\n * If predicate is specified more than one element satisfies the condition in predicate,\r\n * otherwise the input sequence contains more than one element.\r\n * @returns The single element of the input sequence that satisfies the condition,\r\n * or null if no such element is found.\r\n */\r\nfunction singleOrDefault(source, predicate) {\r\n    if (predicate) {\r\n        return singleOrDefault2(source, predicate);\r\n    }\r\n    else {\r\n        return singleOrDefault1(source);\r\n    }\r\n}\r\nexports.singleOrDefault = singleOrDefault;\r\nconst singleOrDefault1 = async (source) => {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for await (const value of source) {\r\n        if (hasValue === true) {\r\n            throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n        }\r\n        else {\r\n            hasValue = true;\r\n            singleValue = value;\r\n        }\r\n    }\r\n    return singleValue;\r\n};\r\nconst singleOrDefault2 = async (source, predicate) => {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for await (const value of source) {\r\n        if (predicate(value)) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneMatchingElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    return singleValue;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.singleOrDefaultAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the only element of a sequence that satisfies a specified condition.\r\n * Returns a default value if no such element exists.\r\n * @param source An AsyncIterable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition. Optional.\r\n * @throws {InvalidOperationException}\r\n * If predicate is specified more than one element satisfies the condition in predicate,\r\n * otherwise the input sequence contains more than one element.\r\n * @returns The single element of the input sequence that satisfies the condition,\r\n * or null if no such element is found.\r\n */\r\nasync function singleOrDefaultAsync(source, predicate) {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for await (const value of source) {\r\n        if (await predicate(value)) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneMatchingElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    return singleValue;\r\n}\r\nexports.singleOrDefaultAsync = singleOrDefaultAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.skip = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Bypasses a specified number of elements in a sequence and then returns the remaining elements.\r\n * @param source An AsyncIterable<T> to return elements from.\r\n * @param count The number of elements to skip before returning the remaining elements.\r\n * @returns\r\n * An IAsyncEnumerable<T> that contains the elements that occur after the specified index in the input sequence.\r\n */\r\nfunction skip(source, count) {\r\n    async function* iterator() {\r\n        let i = 0;\r\n        for await (const item of source) {\r\n            if (i++ >= count) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.skip = skip;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.skipWhile = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source An AsyncIterable<T> to return elements from.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IAsyncEnumerable<T> that contains the elements from the input sequence starting at the first element\r\n * in the linear series that does not pass the test specified by predicate.\r\n */\r\nfunction skipWhile(source, predicate) {\r\n    if (predicate.length === 1) {\r\n        return skipWhile1(source, predicate);\r\n    }\r\n    else {\r\n        return skipWhile2(source, predicate);\r\n    }\r\n}\r\nexports.skipWhile = skipWhile;\r\nconst skipWhile1 = (source, predicate) => {\r\n    async function* iterator() {\r\n        let skip = true;\r\n        for await (const item of source) {\r\n            if (skip === false) {\r\n                yield item;\r\n            }\r\n            else if (predicate(item) === false) {\r\n                skip = false;\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst skipWhile2 = (source, predicate) => {\r\n    async function* iterator() {\r\n        let index = 0;\r\n        let skip = true;\r\n        for await (const item of source) {\r\n            if (skip === false) {\r\n                yield item;\r\n            }\r\n            else if (predicate(item, index) === false) {\r\n                skip = false;\r\n                yield item;\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.skipWhileAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source An AsyncIterable<T> to return elements from.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IAsyncEnumerable<T> that contains the elements from the input sequence starting\r\n * at the first element in the linear series that does not pass the test specified by predicate.\r\n */\r\nfunction skipWhileAsync(source, predicate) {\r\n    if (predicate.length === 1) {\r\n        return skipWhileAsync1(source, predicate);\r\n    }\r\n    else {\r\n        return skipWhileAsync2(source, predicate);\r\n    }\r\n}\r\nexports.skipWhileAsync = skipWhileAsync;\r\nconst skipWhileAsync1 = (source, predicate) => {\r\n    async function* iterator() {\r\n        let skip = true;\r\n        for await (const item of source) {\r\n            if (skip === false) {\r\n                yield item;\r\n            }\r\n            else if (await predicate(item) === false) {\r\n                skip = false;\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst skipWhileAsync2 = (source, predicate) => {\r\n    async function* iterator() {\r\n        let index = 0;\r\n        let skip = true;\r\n        for await (const item of source) {\r\n            if (skip === false) {\r\n                yield item;\r\n            }\r\n            else if (await predicate(item, index) === false) {\r\n                skip = false;\r\n                yield item;\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sum = void 0;\r\nfunction sum(source, selector) {\r\n    if (selector) {\r\n        return sum2(source, selector);\r\n    }\r\n    else {\r\n        return sum1(source);\r\n    }\r\n}\r\nexports.sum = sum;\r\nconst sum1 = async (source) => {\r\n    let total = 0;\r\n    for await (const value of source) {\r\n        total += value;\r\n    }\r\n    return total;\r\n};\r\nconst sum2 = async (source, selector) => {\r\n    let total = 0;\r\n    for await (const value of source) {\r\n        total += selector(value);\r\n    }\r\n    return total;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sumAsync = void 0;\r\n/**\r\n * Computes the sum of the sequence of numeric values that are obtained by invoking a transform function\r\n * on each element of the input async sequence.\r\n * @param source A sequence of values that are used to calculate a sum.\r\n * @param selector A transform function to apply to each element.\r\n * @returns The sum of values (from the selector) of the async sequence\r\n */\r\nexports.sumAsync = async (source, selector) => {\r\n    let sum = 0;\r\n    for await (const value of source) {\r\n        sum += await selector(value);\r\n    }\r\n    return sum;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.take = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Returns a specified number of contiguous elements from the start of a sequence.\r\n * @param source The sequence to return elements from.\r\n * @param amount The number of elements to return.\r\n * @returns An IAsyncEnumerable<T> that contains the specified number of elements from the start of the input sequence.\r\n */\r\nfunction take(source, amount) {\r\n    async function* iterator() {\r\n        // negative amounts should yield empty\r\n        let amountLeft = amount > 0 ? amount : 0;\r\n        for await (const item of source) {\r\n            if (amountLeft-- === 0) {\r\n                break;\r\n            }\r\n            else {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.take = take;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.takeWhile = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Returns elements from a sequence as long as a specified condition is true.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source The sequence to return elements from.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IAsyncEnumerable<T> that contains elements from the input sequence\r\n * that occur before the element at which the test no longer passes.\r\n */\r\nexports.takeWhile = (source, predicate) => {\r\n    if (predicate.length === 1) {\r\n        return takeWhile1(source, predicate);\r\n    }\r\n    else {\r\n        return takeWhile2(source, predicate);\r\n    }\r\n};\r\nconst takeWhile1 = (source, predicate) => {\r\n    async function* iterator() {\r\n        for await (const item of source) {\r\n            if (predicate(item)) {\r\n                yield item;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst takeWhile2 = (source, predicate) => {\r\n    async function* iterator() {\r\n        let index = 0;\r\n        for await (const item of source) {\r\n            if (predicate(item, index++)) {\r\n                yield item;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.takeWhileAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Returns elements from a sequence as long as a specified condition is true.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source The sequence to return elements from.\r\n * @param predicate A async function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IAsyncEnumerable<T> that contains elements from the input sequence\r\n * that occur before the element at which the test no longer passes.\r\n */\r\nfunction takeWhileAsync(source, predicate) {\r\n    if (predicate.length === 1) {\r\n        return takeWhileAsync1(source, predicate);\r\n    }\r\n    else {\r\n        return takeWhileAsync2(source, predicate);\r\n    }\r\n}\r\nexports.takeWhileAsync = takeWhileAsync;\r\nconst takeWhileAsync1 = (source, predicate) => {\r\n    async function* iterator() {\r\n        for await (const item of source) {\r\n            if (await predicate(item)) {\r\n                yield item;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst takeWhileAsync2 = (source, predicate) => {\r\n    async function* iterator() {\r\n        let index = 0;\r\n        for await (const item of source) {\r\n            if (await predicate(item, index++)) {\r\n                yield item;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toArray = void 0;\r\n/**\r\n * Creates an array from a AsyncIterable<T>.\r\n * @param source An AsyncIterable<T> to create an array from.\r\n * @returns An array of elements\r\n */\r\nasync function toArray(source) {\r\n    const array = [];\r\n    for await (const item of source) {\r\n        array.push(item);\r\n    }\r\n    return array;\r\n}\r\nexports.toArray = toArray;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toMap = void 0;\r\n/**\r\n * Converts an AsyncIterable<V> to a Map<K, V[]>.\r\n * @param source An Iterable<V> to convert.\r\n * @param selector A function to serve as a key selector.\r\n * @returns A promise for Map<K, V[]>\r\n */\r\nasync function toMap(source, selector) {\r\n    const map = new Map();\r\n    for await (const value of source) {\r\n        const key = selector(value);\r\n        const array = map.get(key);\r\n        if (array === undefined) {\r\n            map.set(key, [value]);\r\n        }\r\n        else {\r\n            array.push(value);\r\n        }\r\n    }\r\n    return map;\r\n}\r\nexports.toMap = toMap;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toMapAsync = void 0;\r\n/**\r\n * Converts an AsyncIterable<V> to a Map<K, V[]>.\r\n * @param source An Iterable<V> to convert.\r\n * @param selector An async function to serve as a key selector.\r\n * @returns A promise for Map<K, V[]>\r\n */\r\nasync function toMapAsync(source, selector) {\r\n    const map = new Map();\r\n    for await (const value of source) {\r\n        const key = await selector(value);\r\n        const array = map.get(key);\r\n        if (array === undefined) {\r\n            map.set(key, [value]);\r\n        }\r\n        else {\r\n            array.push(value);\r\n        }\r\n    }\r\n    return map;\r\n}\r\nexports.toMapAsync = toMapAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toSet = void 0;\r\n/**\r\n * Converts the Async Itertion to a Set\r\n * @param source Iteration\r\n * @returns Set containing the iteration values\r\n */\r\nasync function toSet(source) {\r\n    const set = new Set();\r\n    for await (const item of source) {\r\n        set.add(item);\r\n    }\r\n    return set;\r\n}\r\nexports.toSet = toSet;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.union = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Produces the set union of two sequences by using scrict equality comparison or a specified IEqualityComparer<T>.\r\n * @param first An AsyncIterable<T> whose distinct elements form the first set for the union.\r\n * @param second An AsyncIterable<T> whose distinct elements form the second set for the union.\r\n * @param comparer The IEqualityComparer<T> to compare values. Optional.\r\n * @returns An IAsyncEnumerable<T> that contains the elements from both input sequences, excluding duplicates.\r\n */\r\nfunction union(first, second, comparer) {\r\n    if (comparer) {\r\n        return union2(first, second, comparer);\r\n    }\r\n    else {\r\n        return union1(first, second);\r\n    }\r\n}\r\nexports.union = union;\r\nconst union1 = (first, second) => {\r\n    async function* iterator() {\r\n        const set = new Set();\r\n        for await (const item of first) {\r\n            if (set.has(item) === false) {\r\n                yield item;\r\n                set.add(item);\r\n            }\r\n        }\r\n        for await (const item of second) {\r\n            if (set.has(item) === false) {\r\n                yield item;\r\n                set.add(item);\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst union2 = (first, second, comparer) => {\r\n    async function* iterator() {\r\n        const result = [];\r\n        for (const source of [first, second]) {\r\n            for await (const value of source) {\r\n                let exists = false;\r\n                for (const resultValue of result) {\r\n                    if (comparer(value, resultValue) === true) {\r\n                        exists = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (exists === false) {\r\n                    yield value;\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.unionAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Produces the set union of two sequences by using a specified IAsyncEqualityComparer<T>.\r\n * @param first An AsyncIterable<T> whose distinct elements form the first set for the union.\r\n * @param second An AsyncIterable<T> whose distinct elements form the second set for the union.\r\n * @param comparer The IAsyncEqualityComparer<T> to compare values.\r\n * @returns An IAsyncEnumerable<T> that contains the elements from both input sequences, excluding duplicates.\r\n */\r\nfunction unionAsync(first, second, comparer) {\r\n    async function* iterator() {\r\n        const result = [];\r\n        for (const source of [first, second]) {\r\n            for await (const value of source) {\r\n                let exists = false;\r\n                for (const resultValue of result) {\r\n                    if (await comparer(value, resultValue) === true) {\r\n                        exists = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (exists === false) {\r\n                    yield value;\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.unionAsync = unionAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.where = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Filters a sequence of values based on a predicate.\r\n * Each element's index is used in the logic of the predicate function.\r\n * @param source An AsyncIterable<T> to filter.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IAsyncEnumerable<T> that contains elements from the input sequence that satisfy the condition.\r\n */\r\nfunction where(source, predicate) {\r\n    if (predicate.length === 1) {\r\n        return where1(source, predicate);\r\n    }\r\n    else {\r\n        return where2(source, predicate);\r\n    }\r\n}\r\nexports.where = where;\r\nconst where1 = (source, predicate) => {\r\n    async function* iterator() {\r\n        for await (const item of source) {\r\n            if (predicate(item) === true) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst where2 = (source, predicate) => {\r\n    async function* iterator() {\r\n        let i = 0;\r\n        for await (const item of source) {\r\n            if (predicate(item, i++) === true) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.whereAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Filters a sequence of values based on a predicate.\r\n * Each element's index is used in the logic of the predicate function.\r\n * @param source An AsyncIterable<T> to filter.\r\n * @param predicate A async function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IAsyncEnumerable<T> that contains elements from the input sequence that satisfy the condition.\r\n */\r\nfunction whereAsync(source, predicate) {\r\n    if (predicate.length === 1) {\r\n        return whereAsync1(source, predicate);\r\n    }\r\n    else {\r\n        return whereAsync2(source, predicate);\r\n    }\r\n}\r\nexports.whereAsync = whereAsync;\r\nconst whereAsync1 = (source, predicate) => {\r\n    async function* iterator() {\r\n        for await (const item of source) {\r\n            if (await predicate(item) === true) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst whereAsync2 = (source, predicate) => {\r\n    async function* iterator() {\r\n        let i = 0;\r\n        for await (const item of source) {\r\n            if (await predicate(item, i++) === true) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.zip = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\nfunction zip(first, second, resultSelector) {\r\n    if (resultSelector) {\r\n        return zip2(first, second, resultSelector);\r\n    }\r\n    else {\r\n        return zip1(first, second);\r\n    }\r\n}\r\nexports.zip = zip;\r\nconst zip1 = (source, second) => {\r\n    async function* iterator() {\r\n        const firstIterator = source[Symbol.asyncIterator]();\r\n        const secondIterator = second[Symbol.asyncIterator]();\r\n        while (true) {\r\n            const result = await Promise.all([firstIterator.next(), secondIterator.next()]);\r\n            const a = result[0];\r\n            const b = result[1];\r\n            if (a.done && b.done) {\r\n                break;\r\n            }\r\n            else {\r\n                yield [a.value, b.value];\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\nconst zip2 = (source, second, resultSelector) => {\r\n    async function* iterator() {\r\n        const firstIterator = source[Symbol.asyncIterator]();\r\n        const secondIterator = second[Symbol.asyncIterator]();\r\n        while (true) {\r\n            const result = await Promise.all([firstIterator.next(), secondIterator.next()]);\r\n            const a = result[0];\r\n            const b = result[1];\r\n            if (a.done && b.done) {\r\n                break;\r\n            }\r\n            else {\r\n                yield resultSelector(a.value, b.value);\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.zipAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Applies a specified async function to the corresponding elements of two sequences,\r\n * producing a sequence of the results.\r\n * @param first The first sequence to merge.\r\n * @param second The second sequence to merge.\r\n * @param resultSelector An async function that specifies how to merge the elements from the two sequences.\r\n * @returns An IAsyncEnumerable<T> that contains merged elements of two input sequences.\r\n */\r\nfunction zipAsync(first, second, resultSelector) {\r\n    async function* generator() {\r\n        const firstIterator = first[Symbol.asyncIterator]();\r\n        const secondIterator = second[Symbol.asyncIterator]();\r\n        while (true) {\r\n            const results = await Promise.all([firstIterator.next(), secondIterator.next()]);\r\n            const firstNext = results[0];\r\n            const secondNext = results[1];\r\n            if (firstNext.done || secondNext.done) {\r\n                break;\r\n            }\r\n            else {\r\n                yield resultSelector(firstNext.value, secondNext.value);\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(generator);\r\n}\r\nexports.zipAsync = zipAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isAsyncEnumerable = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"./BasicAsyncEnumerable\");\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access */\r\n/**\r\n * Determine if a type is IAsyncEnumerable\r\n * @param source Any Value\r\n * @returns Whether or not source is an Async Enumerable\r\n */\r\nfunction isAsyncEnumerable(source) {\r\n    if (!source) {\r\n        return false;\r\n    }\r\n    if (source instanceof BasicAsyncEnumerable_1.BasicAsyncEnumerable) {\r\n        return true;\r\n    }\r\n    if (typeof source[Symbol.asyncIterator] !== \"function\") {\r\n        return false;\r\n    }\r\n    const propertyNames = Object.getOwnPropertyNames(BasicAsyncEnumerable_1.BasicAsyncEnumerable.prototype)\r\n        .filter((v) => v !== \"constructor\");\r\n    const methods = source.prototype || source;\r\n    for (const prop of propertyNames) {\r\n        if (typeof methods[prop] !== \"function\") {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.isAsyncEnumerable = isAsyncEnumerable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.emptyAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Returns an empty IAsyncEnumerable<T> that has the specified type argument.\r\n * @returns An empty IAsyncEnumerable<T> whose type argument is TResult.\r\n */\r\nexports.emptyAsync = () => {\r\n    async function* iterable() {\r\n        for await (const _ of []) {\r\n            yield _;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterable);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.enumerateObjectAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Iterates through the object\r\n * @param source Source Object\r\n * @returns IAsyncEnumerabe<[TKey, TValue]> of Key Value pairs\r\n */\r\nexports.enumerateObjectAsync = (source) => {\r\n    async function* iterable() {\r\n        /* eslint-disable */\r\n        for (const key in source) {\r\n            yield [key, source[key]];\r\n        }\r\n        /* eslint-enable */\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterable);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.flattenAsync = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\nfunction flattenAsync(source, shallow) {\r\n    async function* iterator(sourceInner) {\r\n        for await (const item of sourceInner) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n            if (item[Symbol.asyncIterator] !== undefined) {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                const items = shallow ? item : iterator(item);\r\n                for await (const inner of items) {\r\n                    yield inner;\r\n                }\r\n            }\r\n            else {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(() => iterator(source));\r\n}\r\nexports.flattenAsync = flattenAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.fromAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\nfunction fromAsync(promisesOrIterable) {\r\n    if (Array.isArray(promisesOrIterable)) {\r\n        if (promisesOrIterable.length === 0) {\r\n            throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n        }\r\n        return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(async function* () {\r\n            for await (const value of promisesOrIterable) {\r\n                yield value;\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(promisesOrIterable);\r\n    }\r\n}\r\nexports.fromAsync = fromAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar emptyAsync_1 = require(\"./emptyAsync\");\r\nObject.defineProperty(exports, \"emptyAsync\", { enumerable: true, get: function () { return emptyAsync_1.emptyAsync; } });\r\nvar enumerateObjectAsync_1 = require(\"./enumerateObjectAsync\");\r\nObject.defineProperty(exports, \"enumerateObjectAsync\", { enumerable: true, get: function () { return enumerateObjectAsync_1.enumerateObjectAsync; } });\r\nvar flattenAsync_1 = require(\"./flattenAsync\");\r\nObject.defineProperty(exports, \"flattenAsync\", { enumerable: true, get: function () { return flattenAsync_1.flattenAsync; } });\r\nvar fromAsync_1 = require(\"./fromAsync\");\r\nObject.defineProperty(exports, \"fromAsync\", { enumerable: true, get: function () { return fromAsync_1.fromAsync; } });\r\nvar partitionAsync_1 = require(\"./partitionAsync\");\r\nObject.defineProperty(exports, \"partitionAsync\", { enumerable: true, get: function () { return partitionAsync_1.partitionAsync; } });\r\nvar rangeAsync_1 = require(\"./rangeAsync\");\r\nObject.defineProperty(exports, \"rangeAsync\", { enumerable: true, get: function () { return rangeAsync_1.rangeAsync; } });\r\nvar repeatAsync_1 = require(\"./repeatAsync\");\r\nObject.defineProperty(exports, \"repeatAsync\", { enumerable: true, get: function () { return repeatAsync_1.repeatAsync; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.partitionAsync = void 0;\r\n/**\r\n * Paritions the Iterable<T> into a tuple of failing and passing arrays\r\n * based on the predicate.\r\n * @param source Elements to Partition\r\n * @param predicate Pass / Fail condition\r\n * @returns [pass, fail]\r\n */\r\nexports.partitionAsync = async (source, predicate) => {\r\n    const fail = [];\r\n    const pass = [];\r\n    for await (const value of source) {\r\n        if (predicate(value) === true) {\r\n            pass.push(value);\r\n        }\r\n        else {\r\n            fail.push(value);\r\n        }\r\n    }\r\n    return [pass, fail];\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rangeAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Generates a sequence of integral numbers within a specified range.\r\n * @param start The value of the first integer in the sequence.\r\n * @param count The number of sequential integers to generate.\r\n * @throws {ArgumentOutOfRangeException} Start is Less than 0\r\n * OR start + count -1 is larger than MAX_SAFE_INTEGER.\r\n * @returns An IAsyncEnumerable<number> that contains a range of sequential integral numbers.\r\n */\r\nfunction rangeAsync(start, count) {\r\n    if (start < 0 || (start + count - 1) > Number.MAX_SAFE_INTEGER) {\r\n        throw new shared_1.ArgumentOutOfRangeException(`start`);\r\n    }\r\n    async function* iterator() {\r\n        const max = start + count;\r\n        for (let i = start; i < max; i++) {\r\n            yield i;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n}\r\nexports.rangeAsync = rangeAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.repeatAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicAsyncEnumerable_1 = require(\"../BasicAsyncEnumerable\");\r\n/**\r\n * Generates a sequence that contains one repeated value.\r\n * @param element The value to be repeated.\r\n * @param count The number of times to repeat the value in the generated sequence.\r\n * @param delay How long to delay the repeat (ms)\r\n * @returns An IAsyncEnumerable<T> that contains a repeated value.\r\n */\r\nfunction repeatAsync(element, count, delay) {\r\n    if (count < 0) {\r\n        throw new shared_1.ArgumentOutOfRangeException(`count`);\r\n    }\r\n    if (delay) {\r\n        return repeat2(element, count, delay);\r\n    }\r\n    else {\r\n        return repeat1(element, count);\r\n    }\r\n}\r\nexports.repeatAsync = repeatAsync;\r\n/**\r\n * @private\r\n */\r\nconst repeat1 = (element, count) => {\r\n    async function* iterator() {\r\n        for (let i = 0; i < count; i++) {\r\n            yield element;\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n/**\r\n * @private\r\n */\r\nconst repeat2 = (element, count, delay) => {\r\n    async function* iterator() {\r\n        for (let i = 0; i < count; i++) {\r\n            yield await new Promise((resolve) => setTimeout(() => resolve(element), delay));\r\n        }\r\n    }\r\n    return new BasicAsyncEnumerable_1.BasicAsyncEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\n// LINQ to TypeScript\r\n// Copyright (c) Alexandre Rogozine\r\n// MIT License\r\n// https://github.com/arogozine/LinqToTypeScript/blob/master/LICENSE\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\n// API design adapted from,\r\n// LINQ: .NET Language-Integrated Query\r\n// API is part of .NET Core foundational libraries (CoreFX)\r\n// MIT License\r\n// https://github.com/dotnet/corefx/blob/master/LICENSE.TXT\r\n// API Documentation adapted from,\r\n// LINQ API Documentation\r\n// Create Commons Attribution 4.0 International\r\n// https://github.com/dotnet/docs/blob/master/LICENSE\r\n// Shared Interfacess\r\ntslib_1.__exportStar(require(\"./types\"), exports);\r\n// Types and Stuff\r\ntslib_1.__exportStar(require(\"./shared\"), exports);\r\nvar ArrayEnumerable_1 = require(\"./sync/ArrayEnumerable\");\r\nObject.defineProperty(exports, \"ArrayEnumerable\", { enumerable: true, get: function () { return ArrayEnumerable_1.ArrayEnumerable; } });\r\n// Main Initializer\r\ntslib_1.__exportStar(require(\"./initializer/initializer\"), exports);\r\n// Static Methods\r\ntslib_1.__exportStar(require(\"./sync/static\"), exports);\r\ntslib_1.__exportStar(require(\"./async/static\"), exports);\r\ntslib_1.__exportStar(require(\"./parallel/static\"), exports);\r\n// Type Check\r\nvar isEnumerable_1 = require(\"./sync/isEnumerable\");\r\nObject.defineProperty(exports, \"isEnumerable\", { enumerable: true, get: function () { return isEnumerable_1.isEnumerable; } });\r\nvar isParallelEnumerable_1 = require(\"./parallel/isParallelEnumerable\");\r\nObject.defineProperty(exports, \"isParallelEnumerable\", { enumerable: true, get: function () { return isParallelEnumerable_1.isParallelEnumerable; } });\r\nvar isAsyncEnumerable_1 = require(\"./async/isAsyncEnumerable\");\r\nObject.defineProperty(exports, \"isAsyncEnumerable\", { enumerable: true, get: function () { return isAsyncEnumerable_1.isAsyncEnumerable; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.bindArray = void 0;\r\nconst ArrayEnumerable_1 = require(\"../sync/ArrayEnumerable\");\r\n/**\r\n * Binds LINQ method to a built in array type\r\n * @param jsArray Built In JS Array Type\r\n */\r\nexports.bindArray = (jsArray) => {\r\n    const propertyNames = Object.getOwnPropertyNames(ArrayEnumerable_1.ArrayEnumerable.prototype)\r\n        // eslint-disable-next-line @typescript-eslint/array-type\r\n        .filter((v) => v !== \"constructor\");\r\n    for (const prop of propertyNames) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\r\n        jsArray.prototype[prop] = jsArray.prototype[prop] || ArrayEnumerable_1.ArrayEnumerable.prototype[prop];\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.bindArrayEnumerable = void 0;\r\nconst shared_1 = require(\"../shared\");\r\nconst ArrayEnumerable_1 = require(\"../sync/ArrayEnumerable\");\r\nconst BasicEnumerable_1 = require(\"../sync/BasicEnumerable\");\r\n/**\r\n * @private\r\n */\r\nexports.bindArrayEnumerable = () => {\r\n    const { prototype } = ArrayEnumerable_1.ArrayEnumerable;\r\n    const propertyNames = Object.getOwnPropertyNames(BasicEnumerable_1.BasicEnumerable.prototype)\r\n        // eslint-disable-next-line @typescript-eslint/array-type\r\n        .filter((v) => v !== \"constructor\");\r\n    for (const prop of propertyNames) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        prototype[prop] = prototype[prop] || BasicEnumerable_1.BasicEnumerable.prototype[prop];\r\n    }\r\n    prototype.all = function (predicate) {\r\n        return this.every(predicate);\r\n    };\r\n    prototype.any = function (predicate) {\r\n        if (predicate) {\r\n            return this.some(predicate);\r\n        }\r\n        else {\r\n            return this.length !== 0;\r\n        }\r\n    };\r\n    prototype.count = function (predicate) {\r\n        if (predicate) {\r\n            // eslint-disable-next-line no-shadow\r\n            let count = 0;\r\n            for (let i = 0; i < this.length; i++) {\r\n                if (predicate(this[i]) === true) {\r\n                    count++;\r\n                }\r\n            }\r\n            return count;\r\n        }\r\n        else {\r\n            return this.length;\r\n        }\r\n    };\r\n    prototype.elementAt = function (index) {\r\n        if (index < 0 || index >= this.length) {\r\n            throw new shared_1.ArgumentOutOfRangeException(\"index\");\r\n        }\r\n        return this[index];\r\n    };\r\n    prototype.elementAtOrDefault = function (index) {\r\n        return this[index] || null;\r\n    };\r\n    prototype.first = function (predicate) {\r\n        if (predicate) {\r\n            const value = this.find(predicate);\r\n            if (value === undefined) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            if (this.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            return this[0];\r\n        }\r\n    };\r\n    prototype.firstOrDefault = function (predicate) {\r\n        if (predicate) {\r\n            const value = this.find(predicate);\r\n            if (value === undefined) {\r\n                return null;\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return this.length === 0 ? null : this[0];\r\n        }\r\n    };\r\n    prototype.last = function (predicate) {\r\n        if (predicate) {\r\n            for (let i = this.length - 1; i >= 0; i--) {\r\n                const value = this[i];\r\n                if (predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n        }\r\n        else {\r\n            if (this.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            return this[this.length - 1];\r\n        }\r\n    };\r\n    prototype.lastOrDefault = function (predicate) {\r\n        if (predicate) {\r\n            for (let i = this.length - 1; i >= 0; i--) {\r\n                const value = this[i];\r\n                if (predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        else {\r\n            return this.length === 0 ? null : this[this.length - 1];\r\n        }\r\n    };\r\n    prototype.max = function (selector) {\r\n        if (this.length === 0) {\r\n            throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n        }\r\n        if (selector) {\r\n            // eslint-disable-next-line no-shadow\r\n            let max = Number.NEGATIVE_INFINITY;\r\n            for (let i = 0; i < this.length; i++) {\r\n                max = Math.max(selector(this[i]), max);\r\n            }\r\n            return max;\r\n        }\r\n        else {\r\n            return Math.max.apply(null, this);\r\n        }\r\n    };\r\n    prototype.min = function (selector) {\r\n        if (this.length === 0) {\r\n            throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n        }\r\n        if (selector) {\r\n            // eslint-disable-next-line no-shadow\r\n            let min = Number.POSITIVE_INFINITY;\r\n            for (let i = 0; i < this.length; i++) {\r\n                min = Math.min(selector(this[i]), min);\r\n            }\r\n            return min;\r\n        }\r\n        else {\r\n            return Math.min.apply(null, this);\r\n        }\r\n    };\r\n    prototype.reverse = function () {\r\n        Array.prototype.reverse.apply(this);\r\n        return this;\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.bindLinq = void 0;\r\nconst aggregate_1 = require(\"./../sync/_private/aggregate\");\r\nconst all_1 = require(\"./../sync/_private/all\");\r\nconst allAsync_1 = require(\"./../sync/_private/allAsync\");\r\nconst any_1 = require(\"./../sync/_private/any\");\r\nconst anyAsync_1 = require(\"./../sync/_private/anyAsync\");\r\nconst asAsync_1 = require(\"./../sync/_private/asAsync\");\r\nconst asParallel_1 = require(\"./../sync/_private/asParallel\");\r\nconst average_1 = require(\"./../sync/_private/average\");\r\nconst averageAsync_1 = require(\"./../sync/_private/averageAsync\");\r\nconst concatenate_1 = require(\"../sync/_private/concatenate\");\r\nconst contains_1 = require(\"./../sync/_private/contains\");\r\nconst containsAsync_1 = require(\"./../sync/_private/containsAsync\");\r\nconst count_1 = require(\"./../sync/_private/count\");\r\nconst countAsync_1 = require(\"./../sync/_private/countAsync\");\r\nconst distinct_1 = require(\"./../sync/_private/distinct\");\r\nconst distinctAsync_1 = require(\"./../sync/_private/distinctAsync\");\r\nconst each_1 = require(\"./../sync/_private/each\");\r\nconst eachAsync_1 = require(\"./../sync/_private/eachAsync\");\r\nconst elementAt_1 = require(\"./../sync/_private/elementAt\");\r\nconst elementAtOrDefault_1 = require(\"./../sync/_private/elementAtOrDefault\");\r\nconst except_1 = require(\"./../sync/_private/except\");\r\nconst exceptAsync_1 = require(\"./../sync/_private/exceptAsync\");\r\nconst first_1 = require(\"./../sync/_private/first\");\r\nconst firstAsync_1 = require(\"./../sync/_private/firstAsync\");\r\nconst firstOrDefault_1 = require(\"./../sync/_private/firstOrDefault\");\r\nconst firstOrDefaultAsync_1 = require(\"./../sync/_private/firstOrDefaultAsync\");\r\nconst groupBy_1 = require(\"./../sync/_private/groupBy\");\r\nconst groupByAsync_1 = require(\"./../sync/_private/groupByAsync\");\r\nconst groupByWithSel_1 = require(\"./../sync/_private/groupByWithSel\");\r\nconst intersect_1 = require(\"./../sync/_private/intersect\");\r\nconst intersectAsync_1 = require(\"./../sync/_private/intersectAsync\");\r\nconst join_1 = require(\"./../sync/_private/join\");\r\nconst last_1 = require(\"./../sync/_private/last\");\r\nconst lastAsync_1 = require(\"./../sync/_private/lastAsync\");\r\nconst lastOrDefault_1 = require(\"./../sync/_private/lastOrDefault\");\r\nconst lastOrDefaultAsync_1 = require(\"./../sync/_private/lastOrDefaultAsync\");\r\nconst max_1 = require(\"./../sync/_private/max\");\r\nconst maxAsync_1 = require(\"./../sync/_private/maxAsync\");\r\nconst min_1 = require(\"./../sync/_private/min\");\r\nconst minAsync_1 = require(\"./../sync/_private/minAsync\");\r\nconst ofType_1 = require(\"./../sync/_private/ofType\");\r\nconst orderBy_1 = require(\"./../sync/_private/orderBy\");\r\nconst orderByAsync_1 = require(\"./../sync/_private/orderByAsync\");\r\nconst orderByDescending_1 = require(\"./../sync/_private/orderByDescending\");\r\nconst orderByDescendingAsync_1 = require(\"./../sync/_private/orderByDescendingAsync\");\r\nconst reverse_1 = require(\"./../sync/_private/reverse\");\r\nconst select_1 = require(\"./../sync/_private/select\");\r\nconst selectAsync_1 = require(\"./../sync/_private/selectAsync\");\r\nconst selectMany_1 = require(\"./../sync/_private/selectMany\");\r\nconst selectManyAsync_1 = require(\"./../sync/_private/selectManyAsync\");\r\nconst sequenceEquals_1 = require(\"./../sync/_private/sequenceEquals\");\r\nconst sequenceEqualsAsync_1 = require(\"./../sync/_private/sequenceEqualsAsync\");\r\nconst single_1 = require(\"./../sync/_private/single\");\r\nconst singleAsync_1 = require(\"./../sync/_private/singleAsync\");\r\nconst singleOrDefault_1 = require(\"./../sync/_private/singleOrDefault\");\r\nconst singleOrDefaultAsync_1 = require(\"./../sync/_private/singleOrDefaultAsync\");\r\nconst skip_1 = require(\"./../sync/_private/skip\");\r\nconst skipWhile_1 = require(\"./../sync/_private/skipWhile\");\r\nconst skipWhileAsync_1 = require(\"./../sync/_private/skipWhileAsync\");\r\nconst sum_1 = require(\"./../sync/_private/sum\");\r\nconst sumAsync_1 = require(\"./../sync/_private/sumAsync\");\r\nconst take_1 = require(\"./../sync/_private/take\");\r\nconst takeWhile_1 = require(\"./../sync/_private/takeWhile\");\r\nconst takeWhileAsync_1 = require(\"./../sync/_private/takeWhileAsync\");\r\nconst toArray_1 = require(\"./../sync/_private/toArray\");\r\nconst toMap_1 = require(\"./../sync/_private/toMap\");\r\nconst toMapAsync_1 = require(\"./../sync/_private/toMapAsync\");\r\nconst toSet_1 = require(\"./../sync/_private/toSet\");\r\nconst union_1 = require(\"./../sync/_private/union\");\r\nconst unionAsync_1 = require(\"./../sync/_private/unionAsync\");\r\nconst where_1 = require(\"./../sync/_private/where\");\r\nconst whereAsync_1 = require(\"./../sync/_private/whereAsync\");\r\nconst zip_1 = require(\"./../sync/_private/zip\");\r\nconst zipAsync_1 = require(\"./../sync/_private/zipAsync\");\r\n/* eslint-disable @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment */\r\n/**\r\n * Binds LINQ methods to an iterable type\r\n * @param object Iterable Type\r\n */\r\nexports.bindLinq = (object) => {\r\n    const prototype = object.prototype;\r\n    // The static methods take an IEnumerable as first argument\r\n    // when wrapping the first argument becomes `this`\r\n    const bind = (func, key) => {\r\n        const wrapped = function (...params) {\r\n            return func(this, ...params);\r\n        };\r\n        Object.defineProperty(wrapped, \"length\", { value: func.length - 1 });\r\n        prototype[key] = wrapped;\r\n    };\r\n    bind(aggregate_1.aggregate, \"aggregate\");\r\n    bind(all_1.all, \"all\");\r\n    bind(allAsync_1.allAsync, \"allAsync\");\r\n    bind(any_1.any, \"any\");\r\n    bind(anyAsync_1.anyAsync, \"anyAsync\");\r\n    bind(asAsync_1.asAsync, \"asAsync\");\r\n    bind(asParallel_1.asParallel, \"asParallel\");\r\n    bind(average_1.average, \"average\");\r\n    bind(averageAsync_1.averageAsync, \"averageAsync\");\r\n    bind(concatenate_1.concatenate, \"concatenate\");\r\n    bind(contains_1.contains, \"contains\");\r\n    bind(containsAsync_1.containsAsync, \"containsAsync\");\r\n    bind(count_1.count, \"count\");\r\n    bind(countAsync_1.countAsync, \"countAsync\");\r\n    bind(distinct_1.distinct, \"distinct\");\r\n    bind(distinctAsync_1.distinctAsync, \"distinctAsync\");\r\n    bind(each_1.each, \"each\");\r\n    bind(eachAsync_1.eachAsync, \"eachAsync\");\r\n    bind(elementAt_1.elementAt, \"elementAt\");\r\n    bind(elementAtOrDefault_1.elementAtOrDefault, \"elementAtOrDefault\");\r\n    bind(except_1.except, \"except\");\r\n    bind(exceptAsync_1.exceptAsync, \"exceptAsync\");\r\n    bind(first_1.first, \"first\");\r\n    bind(firstAsync_1.firstAsync, \"firstAsync\");\r\n    bind(firstOrDefault_1.firstOrDefault, \"firstOrDefault\");\r\n    bind(firstOrDefaultAsync_1.firstOrDefaultAsync, \"firstOrDefaultAsync\");\r\n    bind(groupBy_1.groupBy, \"groupBy\");\r\n    bind(groupByAsync_1.groupByAsync, \"groupByAsync\");\r\n    bind(groupByWithSel_1.groupByWithSel, \"groupByWithSel\");\r\n    bind(intersect_1.intersect, \"intersect\");\r\n    bind(intersectAsync_1.intersectAsync, \"intersectAsync\");\r\n    bind(join_1.join, \"joinByKey\");\r\n    bind(last_1.last, \"last\");\r\n    bind(lastAsync_1.lastAsync, \"lastAsync\");\r\n    bind(lastOrDefault_1.lastOrDefault, \"lastOrDefault\");\r\n    bind(lastOrDefaultAsync_1.lastOrDefaultAsync, \"lastOrDefaultAsync\");\r\n    bind(max_1.max, \"max\");\r\n    bind(maxAsync_1.maxAsync, \"maxAsync\");\r\n    bind(min_1.min, \"min\");\r\n    bind(minAsync_1.minAsync, \"minAsync\");\r\n    bind(ofType_1.ofType, \"ofType\");\r\n    bind(orderBy_1.orderBy, \"orderBy\");\r\n    bind(orderByAsync_1.orderByAsync, \"orderByAsync\");\r\n    bind(orderByDescending_1.orderByDescending, \"orderByDescending\");\r\n    bind(orderByDescendingAsync_1.orderByDescendingAsync, \"orderByDescendingAsync\");\r\n    bind(reverse_1.reverse, \"reverse\");\r\n    bind(select_1.select, \"select\");\r\n    bind(selectAsync_1.selectAsync, \"selectAsync\");\r\n    bind(selectMany_1.selectMany, \"selectMany\");\r\n    bind(selectManyAsync_1.selectManyAsync, \"selectManyAsync\");\r\n    bind(sequenceEquals_1.sequenceEquals, \"sequenceEquals\");\r\n    bind(sequenceEqualsAsync_1.sequenceEqualsAsync, \"sequenceEqualsAsync\");\r\n    bind(single_1.single, \"single\");\r\n    bind(singleAsync_1.singleAsync, \"singleAsync\");\r\n    bind(singleOrDefault_1.singleOrDefault, \"singleOrDefault\");\r\n    bind(singleOrDefaultAsync_1.singleOrDefaultAsync, \"singleOrDefaultAsync\");\r\n    bind(skip_1.skip, \"skip\");\r\n    bind(skipWhile_1.skipWhile, \"skipWhile\");\r\n    bind(skipWhileAsync_1.skipWhileAsync, \"skipWhileAsync\");\r\n    bind(sum_1.sum, \"sum\");\r\n    bind(sumAsync_1.sumAsync, \"sumAsync\");\r\n    bind(take_1.take, \"take\");\r\n    bind(takeWhile_1.takeWhile, \"takeWhile\");\r\n    bind(takeWhileAsync_1.takeWhileAsync, \"takeWhileAsync\");\r\n    bind(toArray_1.toArray, \"toArray\");\r\n    bind(toMap_1.toMap, \"toMap\");\r\n    bind(toMapAsync_1.toMapAsync, \"toMapAsync\");\r\n    bind(toSet_1.toSet, \"toSet\");\r\n    bind(union_1.union, \"union\");\r\n    bind(unionAsync_1.unionAsync, \"unionAsync\");\r\n    bind(where_1.where, \"where\");\r\n    bind(whereAsync_1.whereAsync, \"whereAsync\");\r\n    bind(zip_1.zip, \"zip\");\r\n    bind(zipAsync_1.zipAsync, \"zipAsync\");\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.bindLinqAsync = void 0;\r\nconst aggregate_1 = require(\"./../async/_private/aggregate\");\r\nconst all_1 = require(\"./../async/_private/all\");\r\nconst allAsync_1 = require(\"./../async/_private/allAsync\");\r\nconst any_1 = require(\"./../async/_private/any\");\r\nconst anyAsync_1 = require(\"./../async/_private/anyAsync\");\r\nconst asParallel_1 = require(\"./../async/_private/asParallel\");\r\nconst average_1 = require(\"./../async/_private/average\");\r\nconst averageAsync_1 = require(\"./../async/_private/averageAsync\");\r\nconst concatenate_1 = require(\"../async/_private/concatenate\");\r\nconst contains_1 = require(\"./../async/_private/contains\");\r\nconst containsAsync_1 = require(\"./../async/_private/containsAsync\");\r\nconst count_1 = require(\"./../async/_private/count\");\r\nconst countAsync_1 = require(\"./../async/_private/countAsync\");\r\nconst distinct_1 = require(\"./../async/_private/distinct\");\r\nconst distinctAsync_1 = require(\"./../async/_private/distinctAsync\");\r\nconst each_1 = require(\"./../async/_private/each\");\r\nconst eachAsync_1 = require(\"./../async/_private/eachAsync\");\r\nconst elementAt_1 = require(\"./../async/_private/elementAt\");\r\nconst elementAtOrDefault_1 = require(\"./../async/_private/elementAtOrDefault\");\r\nconst except_1 = require(\"./../async/_private/except\");\r\nconst exceptAsync_1 = require(\"./../async/_private/exceptAsync\");\r\nconst first_1 = require(\"./../async/_private/first\");\r\nconst firstAsync_1 = require(\"./../async/_private/firstAsync\");\r\nconst firstOrDefault_1 = require(\"./../async/_private/firstOrDefault\");\r\nconst firstOrDefaultAsync_1 = require(\"./../async/_private/firstOrDefaultAsync\");\r\nconst groupBy_1 = require(\"./../async/_private/groupBy\");\r\nconst groupByAsync_1 = require(\"./../async/_private/groupByAsync\");\r\nconst groupByWithSel_1 = require(\"./../async/_private/groupByWithSel\");\r\nconst intersect_1 = require(\"./../async/_private/intersect\");\r\nconst intersectAsync_1 = require(\"./../async/_private/intersectAsync\");\r\nconst join_1 = require(\"./../async/_private/join\");\r\nconst last_1 = require(\"./../async/_private/last\");\r\nconst lastAsync_1 = require(\"./../async/_private/lastAsync\");\r\nconst lastOrDefault_1 = require(\"./../async/_private/lastOrDefault\");\r\nconst lastOrDefaultAsync_1 = require(\"./../async/_private/lastOrDefaultAsync\");\r\nconst max_1 = require(\"./../async/_private/max\");\r\nconst maxAsync_1 = require(\"./../async/_private/maxAsync\");\r\nconst min_1 = require(\"./../async/_private/min\");\r\nconst minAsync_1 = require(\"./../async/_private/minAsync\");\r\nconst ofType_1 = require(\"./../async/_private/ofType\");\r\nconst orderBy_1 = require(\"./../async/_private/orderBy\");\r\nconst orderByAsync_1 = require(\"./../async/_private/orderByAsync\");\r\nconst orderByDescending_1 = require(\"./../async/_private/orderByDescending\");\r\nconst orderByDescendingAsync_1 = require(\"./../async/_private/orderByDescendingAsync\");\r\nconst reverse_1 = require(\"./../async/_private/reverse\");\r\nconst select_1 = require(\"./../async/_private/select\");\r\nconst selectAsync_1 = require(\"./../async/_private/selectAsync\");\r\nconst selectMany_1 = require(\"./../async/_private/selectMany\");\r\nconst selectManyAsync_1 = require(\"./../async/_private/selectManyAsync\");\r\nconst sequenceEquals_1 = require(\"./../async/_private/sequenceEquals\");\r\nconst sequenceEqualsAsync_1 = require(\"./../async/_private/sequenceEqualsAsync\");\r\nconst single_1 = require(\"./../async/_private/single\");\r\nconst singleAsync_1 = require(\"./../async/_private/singleAsync\");\r\nconst singleOrDefault_1 = require(\"./../async/_private/singleOrDefault\");\r\nconst singleOrDefaultAsync_1 = require(\"./../async/_private/singleOrDefaultAsync\");\r\nconst skip_1 = require(\"./../async/_private/skip\");\r\nconst skipWhile_1 = require(\"./../async/_private/skipWhile\");\r\nconst skipWhileAsync_1 = require(\"./../async/_private/skipWhileAsync\");\r\nconst sum_1 = require(\"./../async/_private/sum\");\r\nconst sumAsync_1 = require(\"./../async/_private/sumAsync\");\r\nconst take_1 = require(\"./../async/_private/take\");\r\nconst takeWhile_1 = require(\"./../async/_private/takeWhile\");\r\nconst takeWhileAsync_1 = require(\"./../async/_private/takeWhileAsync\");\r\nconst toArray_1 = require(\"./../async/_private/toArray\");\r\nconst toMap_1 = require(\"./../async/_private/toMap\");\r\nconst toMapAsync_1 = require(\"./../async/_private/toMapAsync\");\r\nconst toSet_1 = require(\"./../async/_private/toSet\");\r\nconst union_1 = require(\"./../async/_private/union\");\r\nconst unionAsync_1 = require(\"./../async/_private/unionAsync\");\r\nconst where_1 = require(\"./../async/_private/where\");\r\nconst whereAsync_1 = require(\"./../async/_private/whereAsync\");\r\nconst zip_1 = require(\"./../async/_private/zip\");\r\nconst zipAsync_1 = require(\"./../async/_private/zipAsync\");\r\n/* eslint-disable @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment */\r\n/**\r\n * Binds LINQ methods to an iterable type\r\n * @param object Iterable Type\r\n */\r\nexports.bindLinqAsync = (object) => {\r\n    const prototype = object.prototype;\r\n    const bind = (func, key) => {\r\n        switch (func.length) {\r\n            case 1:\r\n                prototype[key] = function () {\r\n                    return func(this);\r\n                };\r\n                return;\r\n            case 2:\r\n                prototype[key] = function (a) {\r\n                    return func(this, a);\r\n                };\r\n                return;\r\n            case 3:\r\n                prototype[key] = function (a, b) {\r\n                    return func(this, a, b);\r\n                };\r\n                return;\r\n            case 4:\r\n                prototype[key] = function (a, b, c) {\r\n                    return func(this, a, b, c);\r\n                };\r\n                return;\r\n            case 5:\r\n                prototype[key] = function (a, b, c, d) {\r\n                    return func(this, a, b, c, d);\r\n                };\r\n                return;\r\n            default:\r\n                throw new Error(\"Invalid Function\");\r\n        }\r\n    };\r\n    bind(aggregate_1.aggregate, \"aggregate\");\r\n    bind(all_1.all, \"all\");\r\n    bind(allAsync_1.allAsync, \"allAsync\");\r\n    bind(any_1.any, \"any\");\r\n    bind(anyAsync_1.anyAsync, \"anyAsync\");\r\n    // bind(asAsync, \"asAsync\")\r\n    bind(asParallel_1.asParallel, \"asParallel\");\r\n    bind(average_1.average, \"average\");\r\n    bind(averageAsync_1.averageAsync, \"averageAsync\");\r\n    bind(concatenate_1.concatenate, \"concatenate\");\r\n    prototype.contains = function (value, comparer) {\r\n        return contains_1.contains(this, value, comparer);\r\n    };\r\n    bind(containsAsync_1.containsAsync, \"containsAsync\");\r\n    bind(count_1.count, \"count\");\r\n    bind(countAsync_1.countAsync, \"countAsync\");\r\n    prototype.distinct = function (comparer) {\r\n        return distinct_1.distinct(this, comparer);\r\n    };\r\n    bind(distinctAsync_1.distinctAsync, \"distinctAsync\");\r\n    bind(each_1.each, \"each\");\r\n    bind(eachAsync_1.eachAsync, \"eachAsync\");\r\n    bind(elementAt_1.elementAt, \"elementAt\");\r\n    bind(elementAtOrDefault_1.elementAtOrDefault, \"elementAtOrDefault\");\r\n    bind(except_1.except, \"except\");\r\n    bind(exceptAsync_1.exceptAsync, \"exceptAsync\");\r\n    bind(first_1.first, \"first\");\r\n    bind(firstAsync_1.firstAsync, \"firstAsync\");\r\n    bind(firstOrDefault_1.firstOrDefault, \"firstOrDefault\");\r\n    bind(firstOrDefaultAsync_1.firstOrDefaultAsync, \"firstOrDefaultAsync\");\r\n    bind(groupBy_1.groupBy, \"groupBy\");\r\n    bind(groupByAsync_1.groupByAsync, \"groupByAsync\");\r\n    bind(groupByWithSel_1.groupByWithSel, \"groupByWithSel\");\r\n    prototype.intersect = function (second, comparer) {\r\n        return intersect_1.intersect(this, second, comparer);\r\n    };\r\n    bind(intersectAsync_1.intersectAsync, \"intersectAsync\");\r\n    prototype.joinByKey = function (inner, outerKeySelector, innerKeySelector, resultSelector, comparer) {\r\n        return join_1.join(this, inner, outerKeySelector, innerKeySelector, resultSelector, comparer);\r\n    };\r\n    bind(last_1.last, \"last\");\r\n    bind(lastAsync_1.lastAsync, \"lastAsync\");\r\n    bind(lastOrDefault_1.lastOrDefault, \"lastOrDefault\");\r\n    bind(lastOrDefaultAsync_1.lastOrDefaultAsync, \"lastOrDefaultAsync\");\r\n    bind(max_1.max, \"max\");\r\n    bind(maxAsync_1.maxAsync, \"maxAsync\");\r\n    bind(min_1.min, \"min\");\r\n    bind(minAsync_1.minAsync, \"minAsync\");\r\n    bind(ofType_1.ofType, \"ofType\");\r\n    bind(orderBy_1.orderBy, \"orderBy\");\r\n    bind(orderByAsync_1.orderByAsync, \"orderByAsync\");\r\n    bind(orderByDescending_1.orderByDescending, \"orderByDescending\");\r\n    bind(orderByDescendingAsync_1.orderByDescendingAsync, \"orderByDescendingAsync\");\r\n    bind(reverse_1.reverse, \"reverse\");\r\n    bind(select_1.select, \"select\");\r\n    bind(selectAsync_1.selectAsync, \"selectAsync\");\r\n    bind(selectMany_1.selectMany, \"selectMany\");\r\n    bind(selectManyAsync_1.selectManyAsync, \"selectManyAsync\");\r\n    prototype.sequenceEquals = function (second, comparer) {\r\n        return sequenceEquals_1.sequenceEquals(this, second, comparer);\r\n    };\r\n    bind(sequenceEqualsAsync_1.sequenceEqualsAsync, \"sequenceEqualsAsync\");\r\n    bind(single_1.single, \"single\");\r\n    bind(singleAsync_1.singleAsync, \"singleAsync\");\r\n    bind(singleOrDefault_1.singleOrDefault, \"singleOrDefault\");\r\n    bind(singleOrDefaultAsync_1.singleOrDefaultAsync, \"singleOrDefaultAsync\");\r\n    bind(skip_1.skip, \"skip\");\r\n    bind(skipWhile_1.skipWhile, \"skipWhile\");\r\n    bind(skipWhileAsync_1.skipWhileAsync, \"skipWhileAsync\");\r\n    bind(sum_1.sum, \"sum\");\r\n    bind(sumAsync_1.sumAsync, \"sumAsync\");\r\n    bind(take_1.take, \"take\");\r\n    bind(takeWhile_1.takeWhile, \"takeWhile\");\r\n    bind(takeWhileAsync_1.takeWhileAsync, \"takeWhileAsync\");\r\n    bind(toArray_1.toArray, \"toArray\");\r\n    bind(toMap_1.toMap, \"toMap\");\r\n    bind(toMapAsync_1.toMapAsync, \"toMapAsync\");\r\n    bind(toSet_1.toSet, \"toSet\");\r\n    bind(union_1.union, \"union\");\r\n    bind(unionAsync_1.unionAsync, \"unionAsync\");\r\n    bind(where_1.where, \"where\");\r\n    bind(whereAsync_1.whereAsync, \"whereAsync\");\r\n    bind(zip_1.zip, \"zip\");\r\n    bind(zipAsync_1.zipAsync, \"zipAsync\");\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.bindLinqParallel = void 0;\r\nconst aggregate_1 = require(\"./../parallel/_private/aggregate\");\r\nconst all_1 = require(\"./../parallel/_private/all\");\r\nconst allAsync_1 = require(\"./../parallel/_private/allAsync\");\r\nconst any_1 = require(\"./../parallel/_private/any\");\r\nconst anyAsync_1 = require(\"./../parallel/_private/anyAsync\");\r\nconst asAsync_1 = require(\"./../parallel/_private/asAsync\");\r\nconst average_1 = require(\"./../parallel/_private/average\");\r\nconst averageAsync_1 = require(\"./../parallel/_private/averageAsync\");\r\nconst concatenate_1 = require(\"../parallel/_private/concatenate\");\r\nconst contains_1 = require(\"./../parallel/_private/contains\");\r\nconst containsAsync_1 = require(\"./../parallel/_private/containsAsync\");\r\nconst count_1 = require(\"./../parallel/_private/count\");\r\nconst countAsync_1 = require(\"./../parallel/_private/countAsync\");\r\nconst distinct_1 = require(\"./../parallel/_private/distinct\");\r\nconst distinctAsync_1 = require(\"./../parallel/_private/distinctAsync\");\r\nconst each_1 = require(\"./../parallel/_private/each\");\r\nconst eachAsync_1 = require(\"./../parallel/_private/eachAsync\");\r\nconst elementAt_1 = require(\"./../parallel/_private/elementAt\");\r\nconst elementAtOrDefault_1 = require(\"./../parallel/_private/elementAtOrDefault\");\r\nconst except_1 = require(\"./../parallel/_private/except\");\r\nconst exceptAsync_1 = require(\"./../parallel/_private/exceptAsync\");\r\nconst first_1 = require(\"./../parallel/_private/first\");\r\nconst firstAsync_1 = require(\"./../parallel/_private/firstAsync\");\r\nconst firstOrDefault_1 = require(\"./../parallel/_private/firstOrDefault\");\r\nconst firstOrDefaultAsync_1 = require(\"./../parallel/_private/firstOrDefaultAsync\");\r\nconst groupBy_1 = require(\"./../parallel/_private/groupBy\");\r\nconst groupByAsync_1 = require(\"./../parallel/_private/groupByAsync\");\r\nconst groupByWithSel_1 = require(\"./../parallel/_private/groupByWithSel\");\r\nconst intersect_1 = require(\"./../parallel/_private/intersect\");\r\nconst intersectAsync_1 = require(\"./../parallel/_private/intersectAsync\");\r\nconst join_1 = require(\"./../parallel/_private/join\");\r\nconst last_1 = require(\"./../parallel/_private/last\");\r\nconst lastAsync_1 = require(\"./../parallel/_private/lastAsync\");\r\nconst lastOrDefault_1 = require(\"./../parallel/_private/lastOrDefault\");\r\nconst lastOrDefaultAsync_1 = require(\"./../parallel/_private/lastOrDefaultAsync\");\r\nconst max_1 = require(\"./../parallel/_private/max\");\r\nconst maxAsync_1 = require(\"./../parallel/_private/maxAsync\");\r\nconst min_1 = require(\"./../parallel/_private/min\");\r\nconst minAsync_1 = require(\"./../parallel/_private/minAsync\");\r\nconst ofType_1 = require(\"./../parallel/_private/ofType\");\r\nconst orderBy_1 = require(\"./../parallel/_private/orderBy\");\r\nconst orderByAsync_1 = require(\"./../parallel/_private/orderByAsync\");\r\nconst orderByDescending_1 = require(\"./../parallel/_private/orderByDescending\");\r\nconst orderByDescendingAsync_1 = require(\"./../parallel/_private/orderByDescendingAsync\");\r\nconst reverse_1 = require(\"./../parallel/_private/reverse\");\r\nconst select_1 = require(\"./../parallel/_private/select\");\r\nconst selectAsync_1 = require(\"./../parallel/_private/selectAsync\");\r\nconst selectMany_1 = require(\"./../parallel/_private/selectMany\");\r\nconst selectManyAsync_1 = require(\"./../parallel/_private/selectManyAsync\");\r\nconst sequenceEquals_1 = require(\"./../parallel/_private/sequenceEquals\");\r\nconst sequenceEqualsAsync_1 = require(\"./../parallel/_private/sequenceEqualsAsync\");\r\nconst single_1 = require(\"./../parallel/_private/single\");\r\nconst singleAsync_1 = require(\"./../parallel/_private/singleAsync\");\r\nconst singleOrDefault_1 = require(\"./../parallel/_private/singleOrDefault\");\r\nconst singleOrDefaultAsync_1 = require(\"./../parallel/_private/singleOrDefaultAsync\");\r\nconst skip_1 = require(\"./../parallel/_private/skip\");\r\nconst skipWhile_1 = require(\"./../parallel/_private/skipWhile\");\r\nconst skipWhileAsync_1 = require(\"./../parallel/_private/skipWhileAsync\");\r\nconst sum_1 = require(\"./../parallel/_private/sum\");\r\nconst sumAsync_1 = require(\"./../parallel/_private/sumAsync\");\r\nconst take_1 = require(\"./../parallel/_private/take\");\r\nconst takeWhile_1 = require(\"./../parallel/_private/takeWhile\");\r\nconst takeWhileAsync_1 = require(\"./../parallel/_private/takeWhileAsync\");\r\nconst toArray_1 = require(\"./../parallel/_private/toArray\");\r\nconst toMap_1 = require(\"./../parallel/_private/toMap\");\r\nconst toMapAsync_1 = require(\"./../parallel/_private/toMapAsync\");\r\nconst toSet_1 = require(\"./../parallel/_private/toSet\");\r\nconst union_1 = require(\"./../parallel/_private/union\");\r\nconst unionAsync_1 = require(\"./../parallel/_private/unionAsync\");\r\nconst where_1 = require(\"./../parallel/_private/where\");\r\nconst whereAsync_1 = require(\"./../parallel/_private/whereAsync\");\r\nconst zip_1 = require(\"./../parallel/_private/zip\");\r\nconst zipAsync_1 = require(\"./../parallel/_private/zipAsync\");\r\n/* eslint-disable @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment */\r\n/**\r\n * Binds LINQ methods to an iterable type\r\n * @param object Iterable Type\r\n */\r\nexports.bindLinqParallel = (object) => {\r\n    const wPrototype = object.prototype;\r\n    const prototype = wPrototype;\r\n    const bind = (func, key) => {\r\n        switch (func.length) {\r\n            case 1:\r\n                wPrototype[key] = function () {\r\n                    return func(this);\r\n                };\r\n                return;\r\n            case 2:\r\n                wPrototype[key] = function (a) {\r\n                    return func(this, a);\r\n                };\r\n                return;\r\n            case 3:\r\n                wPrototype[key] = function (a, b) {\r\n                    return func(this, a, b);\r\n                };\r\n                return;\r\n            case 4:\r\n                wPrototype[key] = function (a, b, c) {\r\n                    return func(this, a, b, c);\r\n                };\r\n                return;\r\n            case 5:\r\n                wPrototype[key] = function (a, b, c, d) {\r\n                    return func(this, a, b, c, d);\r\n                };\r\n                return;\r\n            default:\r\n                throw new Error(\"Invalid Function\");\r\n        }\r\n    };\r\n    bind(aggregate_1.aggregate, \"aggregate\");\r\n    bind(all_1.all, \"all\");\r\n    bind(allAsync_1.allAsync, \"allAsync\");\r\n    bind(any_1.any, \"any\");\r\n    bind(anyAsync_1.anyAsync, \"anyAsync\");\r\n    bind(asAsync_1.asAsync, \"asAsync\");\r\n    // bind(asParallel)\r\n    bind(average_1.average, \"average\");\r\n    bind(averageAsync_1.averageAsync, \"averageAsync\");\r\n    bind(concatenate_1.concatenate, \"concatenate\");\r\n    prototype.contains = function (value, comparer) {\r\n        return contains_1.contains(this, value, comparer);\r\n    };\r\n    bind(containsAsync_1.containsAsync, \"containsAsync\");\r\n    bind(count_1.count, \"count\");\r\n    bind(countAsync_1.countAsync, \"countAsync\");\r\n    prototype.distinct = function (comparer) {\r\n        return distinct_1.distinct(this, comparer);\r\n    };\r\n    bind(distinctAsync_1.distinctAsync, \"distinctAsync\");\r\n    bind(each_1.each, \"each\");\r\n    bind(eachAsync_1.eachAsync, \"eachAsync\");\r\n    bind(elementAt_1.elementAt, \"elementAt\");\r\n    bind(elementAtOrDefault_1.elementAtOrDefault, \"elementAtOrDefault\");\r\n    bind(except_1.except, \"except\");\r\n    bind(exceptAsync_1.exceptAsync, \"exceptAsync\");\r\n    bind(first_1.first, \"first\");\r\n    bind(firstAsync_1.firstAsync, \"firstAsync\");\r\n    bind(firstOrDefault_1.firstOrDefault, \"firstOrDefault\");\r\n    bind(firstOrDefaultAsync_1.firstOrDefaultAsync, \"firstOrDefaultAsync\");\r\n    bind(groupBy_1.groupBy, \"groupBy\");\r\n    bind(groupByAsync_1.groupByAsync, \"groupByAsync\");\r\n    bind(groupByWithSel_1.groupByWithSel, \"groupByWithSel\");\r\n    prototype.intersect = function (second, comparer) {\r\n        return intersect_1.intersect(this, second, comparer);\r\n    };\r\n    bind(intersectAsync_1.intersectAsync, \"intersectAsync\");\r\n    prototype.joinByKey = function (inner, outerKeySelector, innerKeySelector, resultSelector, comparer) {\r\n        return join_1.join(this, inner, outerKeySelector, innerKeySelector, resultSelector, comparer);\r\n    };\r\n    bind(last_1.last, \"last\");\r\n    bind(lastAsync_1.lastAsync, \"lastAsync\");\r\n    bind(lastOrDefault_1.lastOrDefault, \"lastOrDefault\");\r\n    bind(lastOrDefaultAsync_1.lastOrDefaultAsync, \"lastOrDefaultAsync\");\r\n    bind(max_1.max, \"max\");\r\n    bind(maxAsync_1.maxAsync, \"maxAsync\");\r\n    bind(min_1.min, \"min\");\r\n    bind(minAsync_1.minAsync, \"minAsync\");\r\n    bind(ofType_1.ofType, \"ofType\");\r\n    bind(orderBy_1.orderBy, \"orderBy\");\r\n    bind(orderByAsync_1.orderByAsync, \"orderByAsync\");\r\n    bind(orderByDescending_1.orderByDescending, \"orderByDescending\");\r\n    bind(orderByDescendingAsync_1.orderByDescendingAsync, \"orderByDescendingAsync\");\r\n    bind(reverse_1.reverse, \"reverse\");\r\n    bind(select_1.select, \"select\");\r\n    bind(selectAsync_1.selectAsync, \"selectAsync\");\r\n    bind(selectMany_1.selectMany, \"selectMany\");\r\n    bind(selectManyAsync_1.selectManyAsync, \"selectManyAsync\");\r\n    prototype.sequenceEquals = function (second, comparer) {\r\n        return sequenceEquals_1.sequenceEquals(this, second, comparer);\r\n    };\r\n    bind(sequenceEqualsAsync_1.sequenceEqualsAsync, \"sequenceEqualsAsync\");\r\n    bind(single_1.single, \"single\");\r\n    bind(singleAsync_1.singleAsync, \"singleAsync\");\r\n    bind(singleOrDefault_1.singleOrDefault, \"singleOrDefault\");\r\n    bind(singleOrDefaultAsync_1.singleOrDefaultAsync, \"singleOrDefaultAsync\");\r\n    bind(skip_1.skip, \"skip\");\r\n    bind(skipWhile_1.skipWhile, \"skipWhile\");\r\n    bind(skipWhileAsync_1.skipWhileAsync, \"skipWhileAsync\");\r\n    bind(sum_1.sum, \"sum\");\r\n    bind(sumAsync_1.sumAsync, \"sumAsync\");\r\n    bind(take_1.take, \"take\");\r\n    bind(takeWhile_1.takeWhile, \"takeWhile\");\r\n    bind(takeWhileAsync_1.takeWhileAsync, \"takeWhileAsync\");\r\n    bind(toArray_1.toArray, \"toArray\");\r\n    bind(toMap_1.toMap, \"toMap\");\r\n    bind(toMapAsync_1.toMapAsync, \"toMapAsync\");\r\n    bind(toSet_1.toSet, \"toSet\");\r\n    bind(union_1.union, \"union\");\r\n    bind(unionAsync_1.unionAsync, \"unionAsync\");\r\n    bind(where_1.where, \"where\");\r\n    bind(whereAsync_1.whereAsync, \"whereAsync\");\r\n    bind(zip_1.zip, \"zip\");\r\n    bind(zipAsync_1.zipAsync, \"zipAsync\");\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.bindString = void 0;\r\nconst shared_1 = require(\"../shared\");\r\nconst BasicEnumerable_1 = require(\"../sync/BasicEnumerable\");\r\n/**\r\n * Adds LINQ methods to String prototype\r\n */\r\nexports.bindString = () => {\r\n    const prototype = String.prototype;\r\n    const propertyNames = Object.getOwnPropertyNames(BasicEnumerable_1.BasicEnumerable.prototype)\r\n        // eslint-disable-next-line @typescript-eslint/array-type\r\n        .filter((v) => v !== \"constructor\");\r\n    for (const prop of propertyNames) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        prototype[prop] = prototype[prop] || BasicEnumerable_1.BasicEnumerable.prototype[prop];\r\n    }\r\n    prototype.first = function (predicate) {\r\n        if (predicate) {\r\n            for (let i = 0; i < this.length; i++) {\r\n                const value = this[i];\r\n                if (predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n        }\r\n        if (this.length === 0) {\r\n            throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n        }\r\n        return this[0];\r\n    };\r\n    prototype.firstOrDefault = function (predicate) {\r\n        if (predicate) {\r\n            for (let i = 0; i < this.length; i++) {\r\n                const value = this[i];\r\n                if (predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        return this.length === 0 ? null : this[0];\r\n    };\r\n    prototype.count = function (predicate) {\r\n        if (predicate) {\r\n            // eslint-disable-next-line no-shadow\r\n            let count = 0;\r\n            for (let i = 0; i < this.length; i++) {\r\n                if (predicate(this[i]) === true) {\r\n                    count++;\r\n                }\r\n            }\r\n            return count;\r\n        }\r\n        else {\r\n            return this.length;\r\n        }\r\n    };\r\n    prototype.elementAt = function (index) {\r\n        if (index < 0 || index >= this.length) {\r\n            throw new shared_1.ArgumentOutOfRangeException(\"index\");\r\n        }\r\n        return this[index];\r\n    };\r\n    prototype.elementAtOrDefault = function (index) {\r\n        return this[index] || null;\r\n    };\r\n    prototype.last = function (predicate) {\r\n        if (predicate) {\r\n            for (let i = this.length - 1; i >= 0; i--) {\r\n                const value = this[i];\r\n                if (predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n        }\r\n        else {\r\n            if (this.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            return this[this.length - 1];\r\n        }\r\n    };\r\n    prototype.lastOrDefault = function (predicate) {\r\n        if (predicate) {\r\n            for (let i = this.length - 1; i >= 0; i--) {\r\n                const value = this[i];\r\n                if (predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        else {\r\n            return this.length === 0 ? null : this[this.length - 1];\r\n        }\r\n    };\r\n    prototype.reverse = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const outer = this;\r\n        function* generator() {\r\n            for (let i = outer.length - 1; i >= 0; i--) {\r\n                yield outer[i];\r\n            }\r\n        }\r\n        return new BasicEnumerable_1.BasicEnumerable(generator);\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initializeLinq = void 0;\r\nconst bindArray_1 = require(\"./bindArray\");\r\nconst bindString_1 = require(\"./bindString\");\r\nconst bindLinq_1 = require(\"./bindLinq\");\r\n/**\r\n * Binds LINQ methods to Array Types, Map, Set, and String\r\n */\r\nexports.initializeLinq = () => {\r\n    bindLinq_1.bindLinq(Map);\r\n    bindLinq_1.bindLinq(Set);\r\n    bindString_1.bindString();\r\n    bindArray_1.bindArray(Array);\r\n    bindArray_1.bindArray(Int8Array);\r\n    bindArray_1.bindArray(Int16Array);\r\n    bindArray_1.bindArray(Int32Array);\r\n    bindArray_1.bindArray(Uint8Array);\r\n    bindArray_1.bindArray(Uint8ClampedArray);\r\n    bindArray_1.bindArray(Uint16Array);\r\n    bindArray_1.bindArray(Uint32Array);\r\n    bindArray_1.bindArray(Float32Array);\r\n    bindArray_1.bindArray(Float64Array);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.bindString = exports.bindArray = exports.bindLinqAsync = exports.bindLinq = void 0;\r\nconst BasicAsyncEnumerable_1 = require(\"../async/BasicAsyncEnumerable\");\r\nconst BasicParallelEnumerable_1 = require(\"../parallel/BasicParallelEnumerable\");\r\nconst BasicEnumerable_1 = require(\"../sync/BasicEnumerable\");\r\nconst bindArray_1 = require(\"./bindArray\");\r\nObject.defineProperty(exports, \"bindArray\", { enumerable: true, get: function () { return bindArray_1.bindArray; } });\r\nconst bindArrayEnumerable_1 = require(\"./bindArrayEnumerable\");\r\nconst bindLinq_1 = require(\"./bindLinq\");\r\nObject.defineProperty(exports, \"bindLinq\", { enumerable: true, get: function () { return bindLinq_1.bindLinq; } });\r\nconst bindLinqAsync_1 = require(\"./bindLinqAsync\");\r\nObject.defineProperty(exports, \"bindLinqAsync\", { enumerable: true, get: function () { return bindLinqAsync_1.bindLinqAsync; } });\r\nconst bindLinqParallel_1 = require(\"./bindLinqParallel\");\r\nconst bindString_1 = require(\"./bindString\");\r\nObject.defineProperty(exports, \"bindString\", { enumerable: true, get: function () { return bindString_1.bindString; } });\r\n// To avoid circular dependencies, we bind LINQ methods to classes here\r\nbindLinq_1.bindLinq(BasicEnumerable_1.BasicEnumerable);\r\nbindLinqAsync_1.bindLinqAsync(BasicAsyncEnumerable_1.BasicAsyncEnumerable);\r\nbindLinqParallel_1.bindLinqParallel(BasicParallelEnumerable_1.BasicParallelEnumerable);\r\n// Array Enumerable extends Array and has some custom optimizations\r\nbindArrayEnumerable_1.bindArrayEnumerable();\r\nvar initializeLinq_1 = require(\"./initializeLinq\");\r\nObject.defineProperty(exports, \"initializeLinq\", { enumerable: true, get: function () { return initializeLinq_1.initializeLinq; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BasicParallelEnumerable = void 0;\r\n/* eslint-disable @typescript-eslint/naming-convention, @typescript-eslint/no-empty-interface */\r\n/**\r\n * Base implementation of IParallelEnumerable<T>\r\n * @private\r\n */\r\nclass BasicParallelEnumerable {\r\n    constructor(dataFunc) {\r\n        this.dataFunc = dataFunc;\r\n    }\r\n    [Symbol.asyncIterator]() {\r\n        const { dataFunc } = this;\r\n        async function* iterator() {\r\n            switch (dataFunc.type) {\r\n                case 1 /* ArrayOfPromises */:\r\n                    for (const value of dataFunc.generator()) {\r\n                        yield value;\r\n                    }\r\n                    break;\r\n                case 2 /* PromiseOfPromises */:\r\n                    for (const value of await dataFunc.generator()) {\r\n                        yield value;\r\n                    }\r\n                    break;\r\n                case 0 /* PromiseToArray */:\r\n                default:\r\n                    for (const value of await dataFunc.generator()) {\r\n                        yield value;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        return iterator();\r\n    }\r\n}\r\nexports.BasicParallelEnumerable = BasicParallelEnumerable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrderedParallelEnumerable = void 0;\r\nconst asAsyncSortedKeyValues_1 = require(\"./_ordered/asAsyncSortedKeyValues\");\r\nconst asAsyncSortedKeyValuesSync_1 = require(\"./_ordered/asAsyncSortedKeyValuesSync\");\r\nconst asSortedKeyValues_1 = require(\"./_ordered/asSortedKeyValues\");\r\nconst asSortedKeyValuesSync_1 = require(\"./_ordered/asSortedKeyValuesSync\");\r\nconst BasicParallelEnumerable_1 = require(\"./BasicParallelEnumerable\");\r\n/**\r\n * Ordered Parallel Enumerable\r\n * @private\r\n */\r\nclass OrderedParallelEnumerable extends BasicParallelEnumerable_1.BasicParallelEnumerable {\r\n    constructor(orderedPairs) {\r\n        super({\r\n            generator: async () => {\r\n                const asyncVals = orderedPairs();\r\n                const array = [];\r\n                for await (const val of asyncVals) {\r\n                    array.push(...val);\r\n                }\r\n                return array;\r\n            },\r\n            type: 0 /* PromiseToArray */,\r\n        });\r\n        this.orderedPairs = orderedPairs;\r\n    }\r\n    static generateAsync(source, keySelector, ascending, comparer) {\r\n        let orderedPairs;\r\n        if (source instanceof OrderedParallelEnumerable) {\r\n            orderedPairs = async function* () {\r\n                for await (const pair of source.orderedPairs()) {\r\n                    yield* asAsyncSortedKeyValuesSync_1.asAsyncSortedKeyValuesSync(pair, keySelector, ascending, comparer);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            orderedPairs = () => asAsyncSortedKeyValues_1.asAsyncSortedKeyValues(source, keySelector, ascending, comparer);\r\n        }\r\n        return new OrderedParallelEnumerable(orderedPairs);\r\n    }\r\n    static generate(source, keySelector, ascending, comparer) {\r\n        let orderedPairs;\r\n        if (source instanceof OrderedParallelEnumerable) {\r\n            orderedPairs = async function* () {\r\n                for await (const pair of source.orderedPairs()) {\r\n                    yield* asSortedKeyValuesSync_1.asSortedKeyValuesSync(pair, keySelector, ascending, comparer);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            orderedPairs = () => asSortedKeyValues_1.asSortedKeyValues(source, keySelector, ascending, comparer);\r\n        }\r\n        return new OrderedParallelEnumerable(orderedPairs);\r\n    }\r\n    thenBy(keySelector, comparer) {\r\n        return OrderedParallelEnumerable.generate(this, keySelector, true, comparer);\r\n    }\r\n    thenByAsync(keySelector, comparer) {\r\n        return OrderedParallelEnumerable.generateAsync(this, keySelector, true, comparer);\r\n    }\r\n    thenByDescending(keySelector, comparer) {\r\n        return OrderedParallelEnumerable.generate(this, keySelector, false, comparer);\r\n    }\r\n    thenByDescendingAsync(keySelector, comparer) {\r\n        return OrderedParallelEnumerable.generateAsync(this, keySelector, false, comparer);\r\n    }\r\n}\r\nexports.OrderedParallelEnumerable = OrderedParallelEnumerable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asAsyncKeyMap = void 0;\r\n/**\r\n * Converts values to a key values map.\r\n * @param source Async Iterable\r\n * @param keySelector Async Key Selector for Map\r\n * @returns Promise for a Map for Key to Values\r\n */\r\nexports.asAsyncKeyMap = async (source, keySelector) => {\r\n    const map = new Map();\r\n    for await (const item of source) {\r\n        const key = await keySelector(item);\r\n        const currentMapping = map.get(key);\r\n        if (currentMapping) {\r\n            currentMapping.push(item);\r\n        }\r\n        else {\r\n            map.set(key, [item]);\r\n        }\r\n    }\r\n    return map;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asAsyncKeyMapSync = void 0;\r\n/**\r\n * Converts values to a key values map.\r\n * @param source Iterable\r\n * @param keySelector Async Key Selector for Map\r\n * @returns Promise for a Map for Key to Values\r\n */\r\nexports.asAsyncKeyMapSync = async (source, keySelector) => {\r\n    const map = new Map();\r\n    for (const item of source) {\r\n        const key = await keySelector(item);\r\n        const currentMapping = map.get(key);\r\n        if (currentMapping) {\r\n            currentMapping.push(item);\r\n        }\r\n        else {\r\n            map.set(key, [item]);\r\n        }\r\n    }\r\n    return map;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asAsyncSortedKeyValues = void 0;\r\nconst asAsyncKeyMap_1 = require(\"./asAsyncKeyMap\");\r\n/**\r\n * Sorts values in an Async Iterable based on key and a key comparer.\r\n * @param source Async Iterable\r\n * @param keySelector Async Key Selector\r\n * @param ascending Ascending or Descending Sort\r\n * @param comparer Key Comparer for Sorting. Optional.\r\n * @returns Async Iterable Iterator of arrays\r\n */\r\nasync function* asAsyncSortedKeyValues(source, keySelector, ascending, comparer) {\r\n    const map = await asAsyncKeyMap_1.asAsyncKeyMap(source, keySelector);\r\n    const sortedKeys = [...map.keys()].sort(comparer ? comparer : undefined);\r\n    if (ascending) {\r\n        for (let i = 0; i < sortedKeys.length; i++) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = sortedKeys.length - 1; i >= 0; i--) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n}\r\nexports.asAsyncSortedKeyValues = asAsyncSortedKeyValues;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asAsyncSortedKeyValuesSync = void 0;\r\nconst asAsyncKeyMapSync_1 = require(\"./asAsyncKeyMapSync\");\r\n/**\r\n * Sorts values in an Async Iterable based on key and a key comparer.\r\n * @param source Iterable\r\n * @param keySelector Async Key Selector\r\n * @param ascending Ascending or Descending Sort\r\n * @param comparer Key Comparer for Sorting. Optional.\r\n * @returns Async Iterable Iterator of arrays\r\n */\r\nasync function* asAsyncSortedKeyValuesSync(source, keySelector, ascending, comparer) {\r\n    const map = await asAsyncKeyMapSync_1.asAsyncKeyMapSync(source, keySelector);\r\n    const sortedKeys = [...map.keys()].sort(comparer ? comparer : undefined);\r\n    if (ascending) {\r\n        for (let i = 0; i < sortedKeys.length; i++) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = sortedKeys.length - 1; i >= 0; i--) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n}\r\nexports.asAsyncSortedKeyValuesSync = asAsyncSortedKeyValuesSync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asKeyMap = void 0;\r\n/**\r\n * Converts values to a key values map.\r\n * @param source Async Iterable\r\n * @param keySelector Key Selector for Map\r\n * @returns Promise for a Map for Key to Values\r\n */\r\nexports.asKeyMap = async (source, keySelector) => {\r\n    const map = new Map();\r\n    for await (const item of source) {\r\n        const key = keySelector(item);\r\n        const currentMapping = map.get(key);\r\n        if (currentMapping) {\r\n            currentMapping.push(item);\r\n        }\r\n        else {\r\n            map.set(key, [item]);\r\n        }\r\n    }\r\n    return map;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asKeyMapSync = void 0;\r\n/**\r\n * Converts values to a key values map.\r\n * @param source Iterable\r\n * @param keySelector Key Selector for Map\r\n * @returns Map for Key to Values\r\n */\r\nexports.asKeyMapSync = (source, keySelector) => {\r\n    const map = new Map();\r\n    for (const item of source) {\r\n        const key = keySelector(item);\r\n        const currentMapping = map.get(key);\r\n        if (currentMapping) {\r\n            currentMapping.push(item);\r\n        }\r\n        else {\r\n            map.set(key, [item]);\r\n        }\r\n    }\r\n    return map;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asSortedKeyValues = void 0;\r\nconst asKeyMap_1 = require(\"./asKeyMap\");\r\n/**\r\n * Sorts values in an Iterable based on key and a key comparer.\r\n * @param source Async Iterable\r\n * @param keySelector Key Selector\r\n * @param ascending Ascending or Descending Sort\r\n * @param comparer Key Comparer for Sorting. Optional.\r\n * @returns Async Iterable Iterator\r\n */\r\nasync function* asSortedKeyValues(source, keySelector, ascending, comparer) {\r\n    const map = await asKeyMap_1.asKeyMap(source, keySelector);\r\n    const sortedKeys = [...map.keys()].sort(comparer ? comparer : undefined);\r\n    if (ascending) {\r\n        for (let i = 0; i < sortedKeys.length; i++) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = sortedKeys.length - 1; i >= 0; i--) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n}\r\nexports.asSortedKeyValues = asSortedKeyValues;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asSortedKeyValuesSync = void 0;\r\nconst asKeyMapSync_1 = require(\"./asKeyMapSync\");\r\n/**\r\n * Sorts values in an Iterable based on key and a key comparer.\r\n * @param source Iterable\r\n * @param keySelector Key Selector\r\n * @param ascending Ascending or Descending Sort\r\n * @param comparer Key Comparer for Sorting. Optional.\r\n * @returns Async Iterable Iterator\r\n */\r\nasync function* asSortedKeyValuesSync(source, keySelector, ascending, comparer) {\r\n    const map = asKeyMapSync_1.asKeyMapSync(source, keySelector);\r\n    const sortedKeys = [...map.keys()].sort(comparer ? comparer : undefined);\r\n    if (ascending) {\r\n        for (let i = 0; i < sortedKeys.length; i++) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = sortedKeys.length - 1; i >= 0; i--) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n}\r\nexports.asSortedKeyValuesSync = asSortedKeyValuesSync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.nextIteration = void 0;\r\n/* eslint-disable  */\r\n/**\r\n * @private Don't use directly.\r\n */\r\nexports.nextIteration = (source, onfulfilled) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const generator = () => dataFunc.generator().then((x) => {\r\n                const convValues = new Array(x.length);\r\n                for (let i = 0; i < x.length; i++) {\r\n                    convValues[i] = onfulfilled(x[i]);\r\n                }\r\n                return convValues;\r\n            });\r\n            return {\r\n                generator,\r\n                type: 0 /* PromiseToArray */,\r\n            };\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const generator = () => {\r\n                const previousData = dataFunc.generator();\r\n                const newPromises = new Array(previousData.length);\r\n                for (let i = 0; i < previousData.length; i++) {\r\n                    newPromises[i] = previousData[i].then(onfulfilled);\r\n                }\r\n                return newPromises;\r\n            };\r\n            return {\r\n                generator,\r\n                type: 1 /* ArrayOfPromises */,\r\n            };\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const generator = async () => {\r\n                const previousData = await dataFunc.generator();\r\n                const newPromises = new Array(previousData.length);\r\n                for (let i = 0; i < previousData.length; i++) {\r\n                    newPromises[i] = previousData[i].then(onfulfilled);\r\n                }\r\n                return newPromises;\r\n            };\r\n            return {\r\n                generator,\r\n                type: 2 /* PromiseOfPromises */,\r\n            };\r\n        }\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.nextIterationAsync = void 0;\r\n/* eslint-disable  */\r\n/**\r\n * @private Next Iteration for Parallel Enumerable\r\n */\r\nexports.nextIterationAsync = (source, onfulfilled) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const generator = async () => {\r\n                const results = await dataFunc.generator();\r\n                const newPromises = new Array(results.length);\r\n                for (let i = 0; i < results.length; i++) {\r\n                    newPromises[i] = onfulfilled(results[i]);\r\n                }\r\n                return newPromises;\r\n            };\r\n            return {\r\n                generator,\r\n                type: 2 /* PromiseOfPromises */,\r\n            };\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const generator = () => dataFunc\r\n                .generator()\r\n                .map((promise) => promise.then(onfulfilled));\r\n            return {\r\n                generator,\r\n                type: 1 /* ArrayOfPromises */,\r\n            };\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const generator = async () => {\r\n                const promises = await dataFunc.generator();\r\n                return promises.map((promise) => promise.then(onfulfilled));\r\n            };\r\n            return {\r\n                generator,\r\n                type: 2 /* PromiseOfPromises */,\r\n            };\r\n        }\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.nextIterationWithIndex = void 0;\r\n/* eslint-disable  */\r\nexports.nextIterationWithIndex = (source, onfulfilled) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const generator = () => dataFunc.generator().then((x) => {\r\n                const convValues = new Array(x.length);\r\n                for (let i = 0; i < x.length; i++) {\r\n                    convValues[i] = onfulfilled(x[i], i);\r\n                }\r\n                return convValues;\r\n            });\r\n            return {\r\n                generator,\r\n                type: 0 /* PromiseToArray */,\r\n            };\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const generator = () => {\r\n                const previousData = dataFunc.generator();\r\n                const newPromises = new Array(previousData.length);\r\n                for (let i = 0; i < previousData.length; i++) {\r\n                    newPromises[i] = previousData[i].then((value) => {\r\n                        return onfulfilled(value, i);\r\n                    });\r\n                }\r\n                return newPromises;\r\n            };\r\n            return {\r\n                generator,\r\n                type: 1 /* ArrayOfPromises */,\r\n            };\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const generator = async () => {\r\n                const previousData = await dataFunc.generator();\r\n                const newPromises = new Array(previousData.length);\r\n                for (let i = 0; i < previousData.length; i++) {\r\n                    newPromises[i] = previousData[i].then((value) => onfulfilled(value, i));\r\n                }\r\n                return newPromises;\r\n            };\r\n            return {\r\n                generator,\r\n                type: 2 /* PromiseOfPromises */,\r\n            };\r\n        }\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.nextIterationWithIndexAsync = void 0;\r\n/* eslint-disable  */\r\nexports.nextIterationWithIndexAsync = (source, onfulfilled) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const generator = async () => {\r\n                const results = await dataFunc.generator();\r\n                const newPromises = new Array(results.length);\r\n                for (let i = 0; i < results.length; i++) {\r\n                    newPromises[i] = onfulfilled(results[i], i);\r\n                }\r\n                return newPromises;\r\n            };\r\n            return {\r\n                generator,\r\n                type: 2 /* PromiseOfPromises */,\r\n            };\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const generator = () => dataFunc\r\n                .generator()\r\n                .map((promise, index) => promise.then((x) => onfulfilled(x, index)));\r\n            return {\r\n                generator,\r\n                type: 1 /* ArrayOfPromises */,\r\n            };\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const generator = async () => {\r\n                const promises = await dataFunc.generator();\r\n                return promises.map((promise, index) => promise.then((x) => onfulfilled(x, index)));\r\n            };\r\n            return {\r\n                generator,\r\n                type: 2 /* PromiseOfPromises */,\r\n            };\r\n        }\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.aggregate = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nfunction aggregate(source, seedOrFunc, func, resultSelector) {\r\n    if (resultSelector) {\r\n        if (!func) {\r\n            throw new ReferenceError(`TAccumulate function is undefined`);\r\n        }\r\n        return aggregate3(source, seedOrFunc, func, resultSelector);\r\n    }\r\n    else if (func) {\r\n        return aggregate2(source, seedOrFunc, func);\r\n    }\r\n    else {\r\n        return aggregate1(source, seedOrFunc);\r\n    }\r\n}\r\nexports.aggregate = aggregate;\r\nconst aggregate1 = async (source, func) => {\r\n    let aggregateValue;\r\n    for await (const value of source) {\r\n        if (aggregateValue) {\r\n            aggregateValue = func(aggregateValue, value);\r\n        }\r\n        else {\r\n            aggregateValue = value;\r\n        }\r\n    }\r\n    if (aggregateValue === undefined) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return aggregateValue;\r\n};\r\nconst aggregate2 = async (source, seed, func) => {\r\n    let aggregateValue = seed;\r\n    for await (const value of source) {\r\n        aggregateValue = func(aggregateValue, value);\r\n    }\r\n    return aggregateValue;\r\n};\r\nconst aggregate3 = async (source, seed, func, resultSelector) => {\r\n    let aggregateValue = seed;\r\n    for await (const value of source) {\r\n        aggregateValue = func(aggregateValue, value);\r\n    }\r\n    return resultSelector(aggregateValue);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.all = void 0;\r\nconst _nextIteration_1 = require(\"./_nextIteration\");\r\n/**\r\n * Determines whether all elements of a sequence satisfy a condition.\r\n * @param source An IParallelEnumerable<T> that contains the elements to apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns ``true`` if every element of the source sequence passes the test in the specified predicate,\r\n * or if the sequence is empty; otherwise, ``false``.\r\n */\r\nexports.all = (source, predicate) => {\r\n    const nextIter = _nextIteration_1.nextIteration(source, (x) => {\r\n        if (!predicate(x)) {\r\n            throw new Error(String(false));\r\n        }\r\n        return true;\r\n    });\r\n    switch (nextIter.type) {\r\n        case 0 /* PromiseToArray */:\r\n            return nextIter.generator()\r\n                .then(() => true, () => false);\r\n        case 1 /* ArrayOfPromises */:\r\n            return Promise.all(nextIter.generator())\r\n                .then(() => true, () => false);\r\n        case 2 /* PromiseOfPromises */:\r\n            return nextIter.generator()\r\n                .then(Promise.all.bind(Promise))\r\n                .then(() => true, () => false);\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.allAsync = void 0;\r\nconst _nextIterationAsync_1 = require(\"./_nextIterationAsync\");\r\n/**\r\n * Determines whether all elements of a sequence satisfy a condition.\r\n * @param source An IParallelEnumerable<T> that contains the elements to apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns ``true`` if every element of the source sequence passes the test in the specified predicate,\r\n * or if the sequence is empty; otherwise, ``false``.\r\n */\r\nexports.allAsync = (source, predicate) => {\r\n    const nextIter = _nextIterationAsync_1.nextIterationAsync(source, async (x) => {\r\n        if (await predicate(x) === false) {\r\n            throw new Error(String(false));\r\n        }\r\n        return true;\r\n    });\r\n    switch (nextIter.type) {\r\n        case 0 /* PromiseToArray */:\r\n            return nextIter\r\n                .generator()\r\n                .then(() => true, () => false);\r\n        case 1 /* ArrayOfPromises */:\r\n            return Promise.all(nextIter.generator())\r\n                .then(() => true, () => false);\r\n        case 2 /* PromiseOfPromises */:\r\n            return nextIter.generator()\r\n                .then(Promise.all.bind(Promise))\r\n                .then(() => true, () => false);\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.any = void 0;\r\nconst _nextIteration_1 = require(\"./_nextIteration\");\r\n/**\r\n * Determines whether a sequence contains any elements.\r\n * If predicate is specified, determines whether any element of a sequence satisfies a condition.\r\n * @param source The IEnumerable<T> to check for emptiness or apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns Whether or not the sequence contains any elements or contains any elements matching the predicate\r\n */\r\nexports.any = (source, predicate) => {\r\n    if (predicate) {\r\n        return any2(source, predicate);\r\n    }\r\n    else {\r\n        return any1(source);\r\n    }\r\n};\r\nconst any1 = async (source) => {\r\n    const dataFunc = source.dataFunc;\r\n    let values;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */:\r\n            values = await dataFunc.generator();\r\n            return values.length !== 0;\r\n        case 1 /* ArrayOfPromises */:\r\n            values = dataFunc.generator();\r\n            return values.length !== 0;\r\n        case 2 /* PromiseOfPromises */:\r\n            values = await dataFunc.generator();\r\n            return values.length !== 0;\r\n    }\r\n};\r\nconst any2 = async (source, predicate) => {\r\n    const dataFunc = _nextIteration_1.nextIteration(source, predicate);\r\n    let values;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */:\r\n            values = await dataFunc.generator();\r\n            return values.includes(true);\r\n        case 1 /* ArrayOfPromises */:\r\n            values = await Promise.all(dataFunc.generator());\r\n            return values.includes(true);\r\n        case 2 /* PromiseOfPromises */:\r\n            values = await Promise.all(await dataFunc.generator());\r\n            return values.includes(true);\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.anyAsync = void 0;\r\nconst _nextIterationAsync_1 = require(\"./_nextIterationAsync\");\r\n/**\r\n * Determines whether any element of a sequence satisfies a condition.\r\n * @param source An IParallelEnumerable<T> whose elements to apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns Whether or not the parallel sequence contains any value (from the predicate)\r\n */\r\nfunction anyAsync(source, predicate) {\r\n    const nextIter = _nextIterationAsync_1.nextIterationAsync(source, predicate);\r\n    switch (nextIter.type) {\r\n        case 0 /* PromiseToArray */:\r\n            return nextIter.generator().then((values) => {\r\n                return values.some((x) => x);\r\n            });\r\n        case 1 /* ArrayOfPromises */:\r\n            return Promise.all(nextIter.generator()).then((values) => {\r\n                return values.some((x) => x);\r\n            });\r\n        case 2 /* PromiseOfPromises */:\r\n            return nextIter.generator().then((values) => Promise.all(values)).then((values) => {\r\n                return values.some((x) => x);\r\n            });\r\n    }\r\n}\r\nexports.anyAsync = anyAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Converts a IEnumerable enumerable to an async one.\r\n * @param source A parallel IEnumerable\r\n * @returns IAsyncEnumerable<TSource>\r\n */\r\nexports.asAsync = (source) => {\r\n    async function* generator() {\r\n        for await (const value of source) {\r\n            yield value;\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(generator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.average = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nfunction average(source, selector) {\r\n    if (selector) {\r\n        return average2(source, selector);\r\n    }\r\n    else {\r\n        return average1(source);\r\n    }\r\n}\r\nexports.average = average;\r\nconst average1 = async (source) => {\r\n    let value;\r\n    let itemCount;\r\n    for (const item of await source.toArray()) {\r\n        value = (value || 0) + item;\r\n        itemCount = (itemCount || 0) + 1;\r\n    }\r\n    if (value === undefined) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return value / itemCount;\r\n};\r\nconst average2 = async (source, func) => {\r\n    let value;\r\n    // eslint-disable-next-line no-shadow\r\n    let count;\r\n    for (const item of await source.toArray()) {\r\n        value = (value || 0) + func(item);\r\n        count = (count || 0) + 1;\r\n    }\r\n    if (value === undefined) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return value / count;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.averageAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst _nextIterationAsync_1 = require(\"./_nextIterationAsync\");\r\n/**\r\n * Computes the average of a sequence of values\r\n * that are obtained by invoking a transform function on each element of the input sequence.\r\n * @param source A sequence of values to calculate the average of.\r\n * @param selector A transform function to apply to each element.\r\n * @throws {InvalidOperationException} source contains no elements.\r\n * @returns Average value (from the selector) of this parallel sequence\r\n */\r\nasync function averageAsync(source, selector) {\r\n    const nextIter = _nextIterationAsync_1.nextIterationAsync(source, selector);\r\n    // eslint-disable-next-line @typescript-eslint/array-type\r\n    let values;\r\n    switch (nextIter.type) {\r\n        case 1 /* ArrayOfPromises */:\r\n            values = nextIter.generator();\r\n            break;\r\n        case 2 /* PromiseOfPromises */:\r\n            values = await nextIter.generator();\r\n            break;\r\n        case 0 /* PromiseToArray */:\r\n        default:\r\n            values = await nextIter.generator();\r\n            break;\r\n    }\r\n    if (values.length === 0) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    let value = 0;\r\n    for (const selectedValue of values) {\r\n        value += await selectedValue;\r\n    }\r\n    return value / values.length;\r\n}\r\nexports.averageAsync = averageAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.concatenate = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Concatenates two sequences.\r\n * @param first The first sequence to concatenate.\r\n * @param second The sequence to concatenate to the first sequence.\r\n * @returns An IParallelEnumerable<T> that contains the concatenated elements of the two input sequences.\r\n */\r\nfunction concatenate(\r\n// eslint-disable-next-line no-shadow\r\nfirst, second) {\r\n    const generator = async () => {\r\n        // Wait for both enumerables\r\n        const promiseResults = await Promise.all([first.toArray(), second.toArray()]);\r\n        // Concat\r\n        const firstData = promiseResults[0];\r\n        const secondData = promiseResults[1];\r\n        const data = new Array(firstData.length + secondData.length);\r\n        let i = 0;\r\n        for (; i < firstData.length; i++) {\r\n            data[i] = firstData[i];\r\n        }\r\n        for (let j = 0; j < secondData.length; j++, i++) {\r\n            data[i] = secondData[j];\r\n        }\r\n        return data;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.concatenate = concatenate;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.contains = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst _nextIteration_1 = require(\"./_nextIteration\");\r\n/**\r\n * Determines whether a sequence contains a specified element by using the specified or default IEqualityComparer<T>.\r\n * @param source A sequence in which to locate a value.\r\n * @param value The value to locate in the sequence.\r\n * @param comparer An equality comparer to compare values. Optional.\r\n * @returns Whether or not source contains the specified value\r\n */\r\nasync function contains(source, value, comparer = shared_1.StrictEqualityComparer) {\r\n    let values;\r\n    if (comparer) {\r\n        values = _nextIteration_1.nextIteration(source, (x) => comparer(value, x));\r\n    }\r\n    else {\r\n        values = _nextIteration_1.nextIteration(source, (x) => x === value);\r\n    }\r\n    switch (values.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const data = await values.generator();\r\n            return data.some((x) => x);\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const data = await Promise.all(values.generator());\r\n            return data.some((x) => x);\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const data = await Promise.all(await values.generator());\r\n            return data.some((x) => x);\r\n        }\r\n    }\r\n}\r\nexports.contains = contains;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.containsAsync = void 0;\r\nconst _nextIterationAsync_1 = require(\"./_nextIterationAsync\");\r\n/**\r\n * Determines whether a sequence contains a specified element by using the specified or default IEqualityComparer<T>.\r\n * @param source A sequence in which to locate a value.\r\n * @param value The value to locate in the sequence.\r\n * @param comparer An equality comparer to compare values. Optional.\r\n * @returns Whether or not the specified parallel sequence contains a value\r\n */\r\nasync function containsAsync(source, value, comparer) {\r\n    const values = _nextIterationAsync_1.nextIterationAsync(source, (x) => comparer(value, x));\r\n    switch (values.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const data = await values.generator();\r\n            return data.some((x) => x);\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const data = await Promise.all(values.generator());\r\n            return data.some((x) => x);\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const data = await Promise.all(await values.generator());\r\n            return data.some((x) => x);\r\n        }\r\n    }\r\n}\r\nexports.containsAsync = containsAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.count = void 0;\r\n/**\r\n * Returns the number of elements in a sequence\r\n * or represents how many elements in the specified sequence satisfy a condition\r\n * if the predicate is specified.\r\n * @param source A sequence that contains elements to be counted.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @returns The number of elements in the input sequence.\r\n */\r\nexports.count = (source, predicate) => {\r\n    if (predicate) {\r\n        return count2(source, predicate);\r\n    }\r\n    else {\r\n        return count1(source);\r\n    }\r\n};\r\nconst count1 = async (source) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */:\r\n        case 2 /* PromiseOfPromises */:\r\n            const arrayData = await source.toArray();\r\n            return arrayData.length;\r\n        case 1 /* ArrayOfPromises */:\r\n            const promises = dataFunc.generator();\r\n            return promises.length;\r\n    }\r\n};\r\nconst count2 = async (source, predicate) => {\r\n    const values = await source.toArray();\r\n    let totalCount = 0;\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (predicate(values[i]) === true) {\r\n            totalCount++;\r\n        }\r\n    }\r\n    return totalCount;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.countAsync = void 0;\r\nconst _nextIterationAsync_1 = require(\"./_nextIterationAsync\");\r\n/**\r\n * Returns how many elements in the specified sequence satisfy a condition\r\n * @param source A sequence that contains elements to be counted.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns How many elements in the specified sequence satisfy the provided predicate.\r\n */\r\nexports.countAsync = async (source, predicate) => {\r\n    const data = _nextIterationAsync_1.nextIterationAsync(source, predicate);\r\n    let countPromise;\r\n    switch (data.type) {\r\n        case 1 /* ArrayOfPromises */:\r\n            countPromise = Promise.all(data.generator());\r\n            break;\r\n        case 2 /* PromiseOfPromises */:\r\n            countPromise = Promise.all(await data.generator());\r\n            break;\r\n        case 0 /* PromiseToArray */:\r\n        default:\r\n            countPromise = data.generator();\r\n            break;\r\n    }\r\n    let totalCount = 0;\r\n    for (const value of await countPromise) {\r\n        if (value) {\r\n            totalCount++;\r\n        }\r\n    }\r\n    return totalCount;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.distinct = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Returns distinct elements from a sequence by using the default or specified equality comparer to compare values.\r\n * @param source The sequence to remove duplicate elements from.\r\n * @param comparer An IEqualityComparer<T> to compare values. Optional. Defaults to Strict Equality Comparison.\r\n * @returns An IParallelEnumerable<T> that contains distinct elements from the source sequence.\r\n */\r\nfunction distinct(source, comparer = shared_1.StrictEqualityComparer) {\r\n    const generator = async () => {\r\n        const distinctElements = [];\r\n        for (const item of await source.toArray()) {\r\n            const foundItem = distinctElements.find((x) => comparer(x, item));\r\n            if (!foundItem) {\r\n                distinctElements.push(item);\r\n            }\r\n        }\r\n        return distinctElements;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.distinct = distinct;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.distinctAsync = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Returns distinct elements from a sequence by using the specified equality comparer to compare values.\r\n * @param source The sequence to remove duplicate elements from.\r\n * @param comparer An IAsyncEqualityComparer<T> to compare values.\r\n * @returns An IParallelEnumerable<T> that contains distinct elements from the source sequence.\r\n */\r\nfunction distinctAsync(source, comparer) {\r\n    const generator = async () => {\r\n        const distinctElements = [];\r\n        outerLoop: for (const item of await source.toArray()) {\r\n            for (const distinctElement of distinctElements) {\r\n                const found = await comparer(distinctElement, item);\r\n                if (found) {\r\n                    continue outerLoop;\r\n                }\r\n            }\r\n            distinctElements.push(item);\r\n        }\r\n        return distinctElements;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.distinctAsync = distinctAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.each = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nconst _nextIteration_1 = require(\"./_nextIteration\");\r\n/**\r\n * Performs a specified action on each element of the IParallelEnumerable<TSource>\r\n * @param source The source to iterate\r\n * @param action The action to take an each element\r\n * @returns A new IParallelEnumerable<T> that executes the action lazily as you iterate.\r\n */\r\nfunction each(source, action) {\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable(_nextIteration_1.nextIteration(source, (x) => {\r\n        action(x);\r\n        return x;\r\n    }));\r\n}\r\nexports.each = each;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.eachAsync = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nconst _nextIterationAsync_1 = require(\"./_nextIterationAsync\");\r\n/**\r\n * Performs a specified action on each element of the IParallelEnumerable<TSource>\r\n * @param source The source to iterate\r\n * @param action The action to take an each element\r\n * @returns A new IParallelEnumerable<T> that executes the action lazily as you iterate.\r\n */\r\nfunction eachAsync(source, action) {\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable(_nextIterationAsync_1.nextIterationAsync(source, async (x) => {\r\n        await action(x);\r\n        return x;\r\n    }));\r\n}\r\nexports.eachAsync = eachAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.elementAt = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the element at a specified index in a sequence.\r\n * @param source An IEnumerable<T> to return an element from.\r\n * @param index The zero-based index of the element to retrieve.\r\n * @throws {ArgumentOutOfRangeException}\r\n * index is less than 0 or greater than or equal to the number of elements in source.\r\n * @returns The element at the specified index in the sequence.\r\n */\r\nasync function elementAt(source, index) {\r\n    if (index < 0) {\r\n        throw new shared_1.ArgumentOutOfRangeException(\"index\");\r\n    }\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */:\r\n            return dataFunc.generator().then((values) => {\r\n                if (index >= values.length) {\r\n                    throw new shared_1.ArgumentOutOfRangeException(\"index\");\r\n                }\r\n                else {\r\n                    return values[index];\r\n                }\r\n            });\r\n        case 1 /* ArrayOfPromises */:\r\n            return Promise.all(dataFunc.generator()).then((values) => {\r\n                if (index >= values.length) {\r\n                    throw new shared_1.ArgumentOutOfRangeException(\"index\");\r\n                }\r\n                else {\r\n                    return values[index];\r\n                }\r\n            });\r\n        case 2 /* PromiseOfPromises */:\r\n            return dataFunc.generator().then(async (values) => {\r\n                if (index >= values.length) {\r\n                    throw new shared_1.ArgumentOutOfRangeException(\"index\");\r\n                }\r\n                else {\r\n                    return await values[index];\r\n                }\r\n            });\r\n    }\r\n}\r\nexports.elementAt = elementAt;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.elementAtOrDefault = void 0;\r\n/**\r\n * Returns the element at a specified index in a sequence or a default value if the index is out of range.\r\n * @param source An IEnumerable<T> to return an element from.\r\n * @param index The zero-based index of the element to retrieve.\r\n * @returns\r\n * default(TSource) if the index is outside the bounds of the source sequence;\r\n * otherwise, the element at the specified position in the source sequence.\r\n */\r\nfunction elementAtOrDefault(source, index) {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */:\r\n            return dataFunc.generator().then((values) => {\r\n                if (index >= values.length) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    return values[index];\r\n                }\r\n            });\r\n        case 1 /* ArrayOfPromises */:\r\n            return Promise.all(dataFunc.generator()).then((values) => {\r\n                if (index >= values.length) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    return values[index];\r\n                }\r\n            });\r\n        case 2 /* PromiseOfPromises */:\r\n            return dataFunc.generator().then(async (values) => {\r\n                if (index >= values.length) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    return await values[index];\r\n                }\r\n            });\r\n    }\r\n}\r\nexports.elementAtOrDefault = elementAtOrDefault;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.except = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Produces the set difference of two sequences by using the comparer provided\r\n * or EqualityComparer to compare values.\r\n * @param first An IAsyncParallel<T> whose elements that are not also in second will be returned.\r\n * @param second An IAsyncParallel<T> whose elements that also occur in the first sequence\r\n * will cause those elements to be removed from the returned sequence.\r\n * @param comparer An IEqualityComparer<T> to compare values. Optional.\r\n * @returns A sequence that contains the set difference of the elements of two sequences.\r\n */\r\nfunction except(\r\n// eslint-disable-next-line no-shadow\r\nfirst, second, comparer = shared_1.StrictEqualityComparer) {\r\n    const generator = async () => {\r\n        const values = await Promise.all([first.toArray(), second.toArray()]);\r\n        const firstValues = values[0];\r\n        const secondValues = values[1];\r\n        const resultValues = [];\r\n        for (const firstItem of firstValues) {\r\n            let exists = false;\r\n            for (let j = 0; j < secondValues.length; j++) {\r\n                const secondItem = secondValues[j];\r\n                if (comparer(firstItem, secondItem) === true) {\r\n                    exists = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (exists === false) {\r\n                resultValues.push(firstItem);\r\n            }\r\n        }\r\n        return resultValues;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.except = except;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.exceptAsync = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Produces the set difference of two sequences by using the comparer provided to compare values.\r\n * @param first An IAsyncParallel<T> whose elements that are not also in second will be returned.\r\n * @param second An IAsyncParallel<T> whose elements that also occur in the first sequence\r\n * will cause those elements to be removed from the returned sequence.\r\n * @param comparer An IAsyncEqualityComparer<T> to compare values.\r\n * @returns A sequence that contains the set difference of the elements of two sequences.\r\n */\r\nfunction exceptAsync(\r\n// eslint-disable-next-line no-shadow\r\nfirst, second, comparer) {\r\n    const generator = async () => {\r\n        const values = await Promise.all([first.toArray(), second.toArray()]);\r\n        const firstValues = values[0];\r\n        const secondValues = values[1];\r\n        const resultValues = [];\r\n        for (const firstItem of firstValues) {\r\n            let exists = false;\r\n            for (let j = 0; j < secondValues.length; j++) {\r\n                const secondItem = secondValues[j];\r\n                if (await comparer(firstItem, secondItem) === true) {\r\n                    exists = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (exists === false) {\r\n                resultValues.push(firstItem);\r\n            }\r\n        }\r\n        return resultValues;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.exceptAsync = exceptAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.first = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst toArray_1 = require(\"./toArray\");\r\n/**\r\n * Returns the first element of a sequence.\r\n * If predicate is specified, returns the first element in a sequence that satisfies a specified condition.\r\n * @param source The IParallelEnumerable<T> to return the first element of.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @throws {InvalidOperationException} The source sequence is empty.\r\n * @returns The first element in the specified sequence.\r\n * If predicate is specified,\r\n * the first element in the sequence that passes the test in the specified predicate function.\r\n */\r\nfunction first(source, predicate) {\r\n    if (predicate) {\r\n        return first2(source, predicate);\r\n    }\r\n    else {\r\n        return first1(source);\r\n    }\r\n}\r\nexports.first = first;\r\nconst first1 = async (source) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const values = await dataFunc.generator();\r\n            if (values.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            else {\r\n                return values[0];\r\n            }\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const promises = dataFunc.generator();\r\n            if (promises.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            else {\r\n                return await promises[0];\r\n            }\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const promises = await dataFunc.generator();\r\n            if (promises.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            else {\r\n                return await promises[0];\r\n            }\r\n        }\r\n    }\r\n};\r\nconst first2 = async (source, predicate) => {\r\n    const data = await toArray_1.toArray(source);\r\n    for (const value of data) {\r\n        if (predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.firstAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst toArray_1 = require(\"./toArray\");\r\n/**\r\n * Returns the first element in a sequence that satisfies a specified condition.\r\n * @param source An IParallelEnumerable<T> to return an element from.\r\n * @param predicate An async function to test each element for a condition.\r\n * @throws {InvalidOperationException} No elements in Iteration matching predicate\r\n * @returns The first element in the sequence that passes the test in the specified predicate function.\r\n */\r\nasync function firstAsync(source, predicate) {\r\n    const data = await toArray_1.toArray(source);\r\n    for (const value of data) {\r\n        if (await predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n}\r\nexports.firstAsync = firstAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.firstOrDefault = void 0;\r\nconst toArray_1 = require(\"./toArray\");\r\n/**\r\n * Returns first element in sequence that satisfies predicate otherwise\r\n * returns the first element in the sequence. Returns null if no value found.\r\n * @param source An IParallelEnumerable<T> to return an element from.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @returns The first element in the sequence\r\n * or the first element that passes the test in the specified predicate function.\r\n * Returns null if no value found.\r\n */\r\nfunction firstOrDefault(source, predicate) {\r\n    if (predicate) {\r\n        return firstOrDefault2(source, predicate);\r\n    }\r\n    else {\r\n        return firstOrDefault1(source);\r\n    }\r\n}\r\nexports.firstOrDefault = firstOrDefault;\r\nconst firstOrDefault1 = async (source) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const values = await dataFunc.generator();\r\n            if (values.length === 0) {\r\n                return null;\r\n            }\r\n            else {\r\n                return values[0];\r\n            }\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const promises = dataFunc.generator();\r\n            if (promises.length === 0) {\r\n                return null;\r\n            }\r\n            else {\r\n                return await promises[0];\r\n            }\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const promises = await dataFunc.generator();\r\n            if (promises.length === 0) {\r\n                return null;\r\n            }\r\n            else {\r\n                return await promises[0];\r\n            }\r\n        }\r\n    }\r\n};\r\nconst firstOrDefault2 = async (source, predicate) => {\r\n    const data = await toArray_1.toArray(source);\r\n    for (const value of data) {\r\n        if (predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.firstOrDefaultAsync = void 0;\r\nconst toArray_1 = require(\"./toArray\");\r\n/**\r\n * Returns first element in sequence that satisfies. Returns null if no value found.\r\n * @param source An IParallelEnumerable<T> to return an element from.\r\n * @param predicate An async function to test each element for a condition.\r\n * @returns The first element that passes the test in the specified predicate function.\r\n * Returns null if no value found.\r\n */\r\nasync function firstOrDefaultAsync(source, predicate) {\r\n    const data = await toArray_1.toArray(source);\r\n    for (const value of data) {\r\n        if (await predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.firstOrDefaultAsync = firstOrDefaultAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.groupBy = void 0;\r\nconst Grouping_1 = require(\"../../sync/Grouping\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nfunction groupBy(source, keySelector, comparer) {\r\n    if (comparer) {\r\n        return groupBy_0(source, keySelector, comparer);\r\n    }\r\n    else {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return groupBy_0_Simple(source, keySelector);\r\n    }\r\n}\r\nexports.groupBy = groupBy;\r\nfunction groupBy_0_Simple(source, keySelector) {\r\n    const generator = async () => {\r\n        const keyMap = {};\r\n        for (const value of await source.toArray()) {\r\n            const key = keySelector(value);\r\n            const grouping = keyMap[key]; // TODO\r\n            if (grouping) {\r\n                grouping.push(value);\r\n            }\r\n            else {\r\n                keyMap[key] = new Grouping_1.Grouping(key, value);\r\n            }\r\n        }\r\n        const results = new Array();\r\n        /* eslint-disable guard-for-in */\r\n        for (const value in keyMap) {\r\n            results.push(keyMap[value]);\r\n        }\r\n        /* eslint-enable guard-for-in */\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nfunction groupBy_0(source, keySelector, comparer) {\r\n    const generator = async () => {\r\n        const keyMap = new Array();\r\n        for (const value of await source.toArray()) {\r\n            const key = keySelector(value);\r\n            let found = false;\r\n            for (let i = 0; i < keyMap.length; i++) {\r\n                const group = keyMap[i];\r\n                if (comparer(group.key, key)) {\r\n                    group.push(value);\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === false) {\r\n                keyMap.push(new Grouping_1.Grouping(key, value));\r\n            }\r\n        }\r\n        const results = new Array();\r\n        for (const g of keyMap) {\r\n            results.push(g);\r\n        }\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.groupByAsync = void 0;\r\nconst Grouping_1 = require(\"../../sync/Grouping\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nfunction groupByAsync(source, keySelector, comparer) {\r\n    if (comparer) {\r\n        return groupByAsync_0(source, keySelector, comparer);\r\n    }\r\n    else {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return groupByAsync_0_Simple(source, keySelector);\r\n    }\r\n}\r\nexports.groupByAsync = groupByAsync;\r\nfunction groupByAsync_0(source, keySelector, comparer) {\r\n    const generator = async () => {\r\n        const keyMap = new Array();\r\n        for await (const value of source) {\r\n            const key = await keySelector(value);\r\n            let found = false;\r\n            for (let i = 0; i < keyMap.length; i++) {\r\n                const group = keyMap[i];\r\n                if (await comparer(group.key, key) === true) {\r\n                    group.push(value);\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === false) {\r\n                keyMap.push(new Grouping_1.Grouping(key, value));\r\n            }\r\n        }\r\n        const results = new Array();\r\n        for (const g of keyMap) {\r\n            results.push(g);\r\n        }\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nfunction groupByAsync_0_Simple(source, keySelector) {\r\n    const generator = async () => {\r\n        const keyMap = {};\r\n        for (const value of await source.toArray()) {\r\n            const key = await keySelector(value);\r\n            const grouping = keyMap[key];\r\n            if (grouping) {\r\n                grouping.push(value);\r\n            }\r\n            else {\r\n                keyMap[key] = new Grouping_1.Grouping(key, value);\r\n            }\r\n        }\r\n        const results = new Array();\r\n        /* eslint-disable guard-for-in */\r\n        for (const value in keyMap) {\r\n            results.push(keyMap[value]);\r\n        }\r\n        /* eslint-enable guard-for-in */\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.groupByWithSel = void 0;\r\nconst Grouping_1 = require(\"../../sync/Grouping\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nfunction groupByWithSel(source, keySelector, elementSelector, comparer) {\r\n    if (comparer) {\r\n        return groupBy1(source, keySelector, elementSelector, comparer);\r\n    }\r\n    else {\r\n        return groupBy1Simple(source, keySelector, elementSelector);\r\n    }\r\n}\r\nexports.groupByWithSel = groupByWithSel;\r\nconst groupBy1 = (source, keySelector, elementSelector, comparer) => {\r\n    const generator = async () => {\r\n        const keyMap = new Array();\r\n        for await (const value of source) {\r\n            const key = keySelector(value);\r\n            let found = false;\r\n            for (let i = 0; i < keyMap.length; i++) {\r\n                const group = keyMap[i];\r\n                if (comparer(group.key, key)) {\r\n                    group.push(elementSelector(value));\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === false) {\r\n                const element = elementSelector(value);\r\n                keyMap.push(new Grouping_1.Grouping(key, element));\r\n            }\r\n        }\r\n        const results = new Array();\r\n        for (const value of keyMap) {\r\n            results.push(value);\r\n        }\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n};\r\nconst groupBy1Simple = (source, keySelector, elementSelector) => {\r\n    // generate(): AsyncIterableIterator<IGrouping<string | number, TElement>>\r\n    const generator = async () => {\r\n        const keyMap = {};\r\n        for (const value of await source.toArray()) {\r\n            const key = keySelector(value);\r\n            const grouping = keyMap[key];\r\n            const element = elementSelector(value);\r\n            if (grouping) {\r\n                grouping.push(element);\r\n            }\r\n            else {\r\n                keyMap[key] = new Grouping_1.Grouping(key, element);\r\n            }\r\n        }\r\n        /* eslint-disable guard-for-in */\r\n        const results = new Array();\r\n        for (const value in keyMap) {\r\n            results.push(keyMap[value]);\r\n        }\r\n        /* eslint-enable guard-for-in */\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.intersect = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Produces the set intersection of two sequences by using the specified IEqualityComparer<T> to compare values.\r\n * If not comparer is specified, uses the @see {StrictEqualityComparer}\r\n * @param first An IParallelEnumerable<T> whose distinct elements that also appear in second will be returned.\r\n * @param second An IAsyncParallel<T> whose distinct elements that also appear in the first sequence will be returned.\r\n * @param comparer An IAsyncEqualityComparer<T> to compare values. Optional.\r\n * @returns A sequence that contains the elements that form the set intersection of two sequences.\r\n */\r\nfunction intersect(\r\n// eslint-disable-next-line no-shadow\r\nfirst, second, comparer = shared_1.StrictEqualityComparer) {\r\n    const generator = async () => {\r\n        const firstResults = await first.distinct(comparer).toArray();\r\n        if (firstResults.length === 0) {\r\n            return [];\r\n        }\r\n        const secondResults = await second.toArray();\r\n        const results = new Array();\r\n        for (let i = 0; i < firstResults.length; i++) {\r\n            const firstValue = firstResults[i];\r\n            for (let j = 0; j < secondResults.length; j++) {\r\n                const secondValue = secondResults[j];\r\n                if (comparer(firstValue, secondValue) === true) {\r\n                    results.push(firstValue);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.intersect = intersect;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.intersectAsync = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Produces the set intersection of two sequences by using the specified IAsyncEqualityComparer<T> to compare values.\r\n * @param first An IParallelEnumerable<T> whose distinct elements that also appear in second will be returned.\r\n * @param second An IAsyncParallel<T> whose distinct elements that also appear in the first sequence will be returned.\r\n * @param comparer An IAsyncEqualityComparer<T> to compare values.\r\n * @returns A sequence that contains the elements that form the set intersection of two sequences.\r\n */\r\nfunction intersectAsync(\r\n// eslint-disable-next-line no-shadow\r\nfirst, second, comparer) {\r\n    const generator = async () => {\r\n        const firstResults = await first.distinctAsync(comparer).toArray();\r\n        if (firstResults.length === 0) {\r\n            return [];\r\n        }\r\n        const secondResults = await second.toArray();\r\n        const results = new Array();\r\n        for (let i = 0; i < firstResults.length; i++) {\r\n            const firstValue = firstResults[i];\r\n            for (let j = 0; j < secondResults.length; j++) {\r\n                const secondValue = secondResults[j];\r\n                if (await comparer(firstValue, secondValue) === true) {\r\n                    results.push(firstValue);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.intersectAsync = intersectAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.join = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Correlates the elements of two sequences based on matching keys.\r\n * A specified IEqualityComparer<T> is used to compare keys or the strict equality comparer.\r\n * @param outer The first sequence to join.\r\n * @param inner The sequence to join to the first sequence.\r\n * @param outerKeySelector A function to extract the join key from each element of the first sequence.\r\n * @param innerKeySelector A function to extract the join key from each element of the second sequence.\r\n * @param resultSelector A function to create a result element from two matching elements.\r\n * @param comparer An IEqualityComparer<T> to hash and compare keys. Optional.\r\n * @returns An IParallelEnumerable<T> that has elements of type TResult that\r\n * are obtained by performing an inner join on two sequences.\r\n */\r\nfunction join(outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer = shared_1.StrictEqualityComparer) {\r\n    const generator = async () => {\r\n        const innerOuter = await Promise.all([inner.toArray(), outer.toArray()]);\r\n        const innerArray = innerOuter[0];\r\n        const outerArray = innerOuter[1];\r\n        const results = new Array();\r\n        for (const o of outerArray) {\r\n            const outerKey = outerKeySelector(o);\r\n            for (const i of innerArray) {\r\n                const innerKey = innerKeySelector(i);\r\n                if (comparer(outerKey, innerKey) === true) {\r\n                    results.push(resultSelector(o, i));\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.join = join;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.last = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the last element of a sequence.\r\n * If predicate is specified, the last element of a sequence that satisfies a specified condition.\r\n * @param source An IParallelEnumerable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @throws {InvalidOperationException} The source sequence is empty.\r\n * @returns The value at the last position in the source sequence\r\n * or the last element in the sequence that passes the test in the specified predicate function.\r\n */\r\nfunction last(source, predicate) {\r\n    if (predicate) {\r\n        return last2(source, predicate);\r\n    }\r\n    else {\r\n        return last1(source);\r\n    }\r\n}\r\nexports.last = last;\r\nconst last1 = async (source) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const values = await dataFunc.generator();\r\n            if (values.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            else {\r\n                return values[values.length - 1];\r\n            }\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const promises = dataFunc.generator();\r\n            if (promises.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            else {\r\n                return await promises[promises.length - 1];\r\n            }\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const promises = await dataFunc.generator();\r\n            if (promises.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            else {\r\n                return await promises[promises.length - 1];\r\n            }\r\n        }\r\n    }\r\n};\r\nconst last2 = async (source, predicate) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const values = await dataFunc.generator();\r\n            // Promise Array - Predicate\r\n            for (let i = values.length - 1; i >= 0; i--) {\r\n                const value = values[i];\r\n                if (predicate(value)) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const promises = dataFunc.generator();\r\n            // Promise Array - Predicate\r\n            for (let i = promises.length - 1; i >= 0; i--) {\r\n                const value = await promises[i];\r\n                if (predicate(value)) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const promises = await dataFunc.generator();\r\n            // Promise Array - Predicate\r\n            for (let i = promises.length - 1; i >= 0; i--) {\r\n                const value = await promises[i];\r\n                if (predicate(value)) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.lastAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the last element of a sequence that satisfies a specified condition.\r\n * @param source An IParallelEnumerable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition.\r\n * @throws {InvalidOperationException} The source sequence is empty.\r\n * @returns The last element in the sequence that passes the test in the specified predicate function.\r\n */\r\nasync function lastAsync(source, predicate) {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const values = await dataFunc.generator();\r\n            // Promise Array - Predicate\r\n            for (let i = values.length - 1; i >= 0; i--) {\r\n                const value = values[i];\r\n                if (await predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const promises = dataFunc.generator();\r\n            // Promise Array - Predicate\r\n            for (let i = promises.length - 1; i >= 0; i--) {\r\n                const value = await promises[i];\r\n                if (await predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const promises = await dataFunc.generator();\r\n            // Promise Array - Predicate\r\n            for (let i = promises.length - 1; i >= 0; i--) {\r\n                const value = await promises[i];\r\n                if (await predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n}\r\nexports.lastAsync = lastAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.lastOrDefault = void 0;\r\n/**\r\n * Returns the last element of a sequence.\r\n * If predicate is specified, the last element of a sequence that satisfies a specified condition.\r\n * @param source An IParallelEnumerable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @returns The value at the last position in the source sequence\r\n * or the last element in the sequence that passes the test in the specified predicate function.\r\n */\r\nfunction lastOrDefault(source, predicate) {\r\n    if (predicate) {\r\n        return lastOrDefault2(source, predicate);\r\n    }\r\n    else {\r\n        return lastOrDefault1(source);\r\n    }\r\n}\r\nexports.lastOrDefault = lastOrDefault;\r\nconst lastOrDefault1 = async (source) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const values = await dataFunc.generator();\r\n            if (values.length === 0) {\r\n                return null;\r\n            }\r\n            else {\r\n                return values[values.length - 1];\r\n            }\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const promises = dataFunc.generator();\r\n            if (promises.length === 0) {\r\n                return null;\r\n            }\r\n            else {\r\n                return await promises[promises.length - 1];\r\n            }\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const promises = await dataFunc.generator();\r\n            if (promises.length === 0) {\r\n                return null;\r\n            }\r\n            else {\r\n                return await promises[promises.length - 1];\r\n            }\r\n        }\r\n    }\r\n};\r\nconst lastOrDefault2 = async (source, predicate) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const values = await dataFunc.generator();\r\n            for (let i = values.length - 1; i >= 0; i--) {\r\n                const value = values[i];\r\n                if (predicate(value)) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const promises = dataFunc.generator();\r\n            for (let i = promises.length - 1; i >= 0; i--) {\r\n                const value = await promises[i];\r\n                if (predicate(value)) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const promises = await dataFunc.generator();\r\n            for (let i = promises.length - 1; i >= 0; i--) {\r\n                const value = await promises[i];\r\n                if (predicate(value)) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.lastOrDefaultAsync = void 0;\r\n/**\r\n * Returns the last element of a sequence that satisfies a specified condition.\r\n * @param source An IParallelEnumerable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns The last element in the sequence that passes the test in the specified predicate function.\r\n * Null if no elements.\r\n */\r\nasync function lastOrDefaultAsync(source, predicate) {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const values = await dataFunc.generator();\r\n            for (let i = values.length - 1; i >= 0; i--) {\r\n                const value = values[i];\r\n                if (await predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const promises = dataFunc.generator();\r\n            for (let i = promises.length - 1; i >= 0; i--) {\r\n                const value = await promises[i];\r\n                if (await predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const promises = await dataFunc.generator();\r\n            for (let i = promises.length - 1; i >= 0; i--) {\r\n                const value = await promises[i];\r\n                if (await predicate(value) === true) {\r\n                    return value;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.lastOrDefaultAsync = lastOrDefaultAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.max = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nconst _nextIteration_1 = require(\"./_nextIteration\");\r\nasync function max(source, selector) {\r\n    let maxInfo;\r\n    if (selector) {\r\n        const dataFunc = _nextIteration_1.nextIteration(source, selector);\r\n        maxInfo = await new BasicParallelEnumerable_1.BasicParallelEnumerable(dataFunc).toArray();\r\n    }\r\n    else {\r\n        maxInfo = await source.toArray();\r\n    }\r\n    if (maxInfo.length === 0) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return Math.max.apply(null, maxInfo);\r\n}\r\nexports.max = max;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.maxAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nconst _nextIterationAsync_1 = require(\"./_nextIterationAsync\");\r\n/**\r\n * Invokes an async transform function on each element of a sequence and returns the maximum value.\r\n * @param source A sequence of values to determine the maximum value of.\r\n * @param selector A transform function to apply to each element.\r\n * @throws {InvalidOperationException} source contains no elements.\r\n * @returns The maximum value in the sequence.\r\n */\r\nasync function maxAsync(source, selector) {\r\n    const dataFunc = _nextIterationAsync_1.nextIterationAsync(source, selector);\r\n    const maxInfo = await new BasicParallelEnumerable_1.BasicParallelEnumerable(dataFunc).toArray();\r\n    if (maxInfo.length === 0) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return Math.max.apply(null, maxInfo);\r\n}\r\nexports.maxAsync = maxAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.min = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nconst _nextIteration_1 = require(\"./_nextIteration\");\r\nasync function min(source, selector) {\r\n    let minInfo;\r\n    if (selector) {\r\n        const dataFunc = _nextIteration_1.nextIteration(source, selector);\r\n        minInfo = await new BasicParallelEnumerable_1.BasicParallelEnumerable(dataFunc)\r\n            .toArray();\r\n    }\r\n    else {\r\n        minInfo = await source.toArray();\r\n    }\r\n    if (minInfo.length === 0) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return Math.min.apply(null, minInfo);\r\n}\r\nexports.min = min;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.minAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nconst _nextIterationAsync_1 = require(\"./_nextIterationAsync\");\r\n/**\r\n * Invokes a transform function on each element of a sequence and returns the minimum value.\r\n * @param source A sequence of values to determine the minimum value of.\r\n * @param selector A transform function to apply to each element.\r\n * @throws {InvalidOperationException} source contains no elements.\r\n * @returns The minimum value in the sequence.\r\n */\r\nasync function minAsync(source, selector) {\r\n    const dataFunc = _nextIterationAsync_1.nextIterationAsync(source, selector);\r\n    const maxInfo = await new BasicParallelEnumerable_1.BasicParallelEnumerable(dataFunc).toArray();\r\n    if (maxInfo.length === 0) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return Math.min.apply(null, maxInfo);\r\n}\r\nexports.minAsync = minAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ofType = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Applies a type filter to a source iteration\r\n * @param source Async Iteration to Filtery by Type\r\n * @param type Either value for typeof or a consturctor function\r\n * @returns Values that match the type string or are instance of type\r\n */\r\nfunction ofType(source, type) {\r\n    const typeCheck = typeof type === \"string\" ?\r\n        ((x) => typeof x === type) :\r\n        ((x) => x instanceof type);\r\n    const data = async () => (await source.toArray()).filter(typeCheck);\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator: data,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.ofType = ofType;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderBy = void 0;\r\nconst OrderedParallelEnumerable_1 = require(\"../OrderedParallelEnumerable\");\r\n/**\r\n * Sorts the elements of a sequence in ascending order by using a specified or default comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector A function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys. Optional.\r\n * @returns An IOrderedParallelEnumerable<TElement> whose elements are sorted according to a key.\r\n */\r\nfunction orderBy(source, keySelector, comparer) {\r\n    return OrderedParallelEnumerable_1.OrderedParallelEnumerable.generate(source, keySelector, true, comparer);\r\n}\r\nexports.orderBy = orderBy;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderByAsync = void 0;\r\nconst OrderedParallelEnumerable_1 = require(\"../OrderedParallelEnumerable\");\r\n/**\r\n * Sorts the elements of a sequence in ascending order by using a specified comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector An async function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys.\r\n * @returns An IOrderedParallelEnumerable<TElement> whose elements are sorted according to a key.\r\n */\r\nfunction orderByAsync(source, keySelector, comparer) {\r\n    return OrderedParallelEnumerable_1.OrderedParallelEnumerable.generateAsync(source, keySelector, true, comparer);\r\n}\r\nexports.orderByAsync = orderByAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderByDescending = void 0;\r\nconst OrderedParallelEnumerable_1 = require(\"../OrderedParallelEnumerable\");\r\n/**\r\n * Sorts the elements of a sequence in descending order by using a specified or default comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector A function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys. Optional.\r\n * @returns An IOrderedParallelEnumerable<TElement> whose elements are sorted in descending order according to a key.\r\n */\r\nfunction orderByDescending(source, keySelector, comparer) {\r\n    return OrderedParallelEnumerable_1.OrderedParallelEnumerable.generate(source, keySelector, false, comparer);\r\n}\r\nexports.orderByDescending = orderByDescending;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderByDescendingAsync = void 0;\r\nconst OrderedParallelEnumerable_1 = require(\"../OrderedParallelEnumerable\");\r\n/**\r\n * Sorts the elements of a sequence in descending order by using a specified comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector An async function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys.\r\n * @returns An IOrderedParallelEnumerable<TElement> whose elements are sorted in descending order according to a key.\r\n */\r\nfunction orderByDescendingAsync(source, keySelector, comparer) {\r\n    return OrderedParallelEnumerable_1.OrderedParallelEnumerable.generateAsync(source, keySelector, false, comparer);\r\n}\r\nexports.orderByDescendingAsync = orderByDescendingAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.reverse = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Inverts the order of the elements in a sequence.\r\n * @param source A sequence of values to reverse.\r\n * @returns A sequence whose elements correspond to those of the input sequence in reverse order.\r\n */\r\nfunction reverse(source) {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 1 /* ArrayOfPromises */: {\r\n            const generator = () => {\r\n                return dataFunc.generator().reverse();\r\n            };\r\n            return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n                generator,\r\n                type: dataFunc.type,\r\n            });\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const generator = async () => {\r\n                const array = await dataFunc.generator();\r\n                return array.reverse();\r\n            };\r\n            return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n                generator,\r\n                type: dataFunc.type,\r\n            });\r\n        }\r\n        case 0 /* PromiseToArray */: {\r\n            const generator = async () => {\r\n                const array = await dataFunc.generator();\r\n                return array.reverse();\r\n            };\r\n            return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n                generator,\r\n                type: dataFunc.type,\r\n            });\r\n        }\r\n    }\r\n}\r\nexports.reverse = reverse;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.select = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nconst _nextIteration_1 = require(\"./_nextIteration\");\r\nconst _nextIterationWithIndex_1 = require(\"./_nextIterationWithIndex\");\r\nfunction select(source, key) {\r\n    if (typeof key === \"function\") {\r\n        if (key.length === 1) {\r\n            return new BasicParallelEnumerable_1.BasicParallelEnumerable(_nextIteration_1.nextIteration(source, key));\r\n        }\r\n        else {\r\n            return new BasicParallelEnumerable_1.BasicParallelEnumerable(_nextIterationWithIndex_1.nextIterationWithIndex(source, key));\r\n        }\r\n    }\r\n    else {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        return new BasicParallelEnumerable_1.BasicParallelEnumerable(_nextIteration_1.nextIteration(source, (x) => x[key]));\r\n    }\r\n}\r\nexports.select = select;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.selectAsync = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nconst _nextIterationAsync_1 = require(\"./_nextIterationAsync\");\r\nconst _nextIterationWithIndexAsync_1 = require(\"./_nextIterationWithIndexAsync\");\r\nfunction selectAsync(source, keyOrSelector) {\r\n    let generator;\r\n    if (typeof keyOrSelector === \"function\") {\r\n        if (keyOrSelector.length === 1) {\r\n            generator = _nextIterationAsync_1.nextIterationAsync(source, keyOrSelector);\r\n        }\r\n        else {\r\n            generator = _nextIterationWithIndexAsync_1.nextIterationWithIndexAsync(source, keyOrSelector);\r\n        }\r\n    }\r\n    else {\r\n        generator = _nextIterationAsync_1.nextIterationAsync(source, (x) => (x[keyOrSelector]));\r\n    }\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable(generator);\r\n}\r\nexports.selectAsync = selectAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.selectMany = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nconst _nextIteration_1 = require(\"./_nextIteration\");\r\nconst _nextIterationWithIndex_1 = require(\"./_nextIterationWithIndex\");\r\nfunction selectMany(source, selector) {\r\n    const generator = async () => {\r\n        let values;\r\n        if (typeof selector === \"function\") {\r\n            if (selector.length === 1) {\r\n                values = _nextIteration_1.nextIteration(source, selector);\r\n            }\r\n            else {\r\n                values = _nextIterationWithIndex_1.nextIterationWithIndex(source, selector);\r\n            }\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\r\n            values = _nextIteration_1.nextIteration(source, (x) => x[selector]);\r\n        }\r\n        const valuesArray = [];\r\n        switch (values.type) {\r\n            case 0 /* PromiseToArray */: {\r\n                for (const outer of await values.generator()) {\r\n                    for (const y of outer) {\r\n                        valuesArray.push(y);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 1 /* ArrayOfPromises */: {\r\n                for (const outer of values.generator()) {\r\n                    for (const y of await outer) {\r\n                        valuesArray.push(y);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 2 /* PromiseOfPromises */: {\r\n                for (const outer of await values.generator()) {\r\n                    for (const y of await outer) {\r\n                        valuesArray.push(y);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return valuesArray;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.selectMany = selectMany;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.selectManyAsync = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nconst _nextIterationAsync_1 = require(\"./_nextIterationAsync\");\r\nconst _nextIterationWithIndexAsync_1 = require(\"./_nextIterationWithIndexAsync\");\r\n/**\r\n * Projects each element of a sequence to an IParallelEnumerable<T>\r\n * and flattens the resulting sequences into one sequence.\r\n * @param source A sequence of values to project.\r\n * @param selector A transform function to apply to each element.\r\n * @returns An IParallelEnumerable<T> whose elements are the result of invoking the\r\n * one-to-many transform function on each element of the input sequence.\r\n */\r\nfunction selectManyAsync(source, selector) {\r\n    const generator = async () => {\r\n        let values;\r\n        if (selector.length === 1) {\r\n            values = _nextIterationAsync_1.nextIterationAsync(source, selector);\r\n        }\r\n        else {\r\n            values = _nextIterationWithIndexAsync_1.nextIterationWithIndexAsync(source, selector);\r\n        }\r\n        const valuesArray = [];\r\n        switch (values.type) {\r\n            case 0 /* PromiseToArray */: {\r\n                for (const outer of await values.generator()) {\r\n                    for (const y of outer) {\r\n                        valuesArray.push(y);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 1 /* ArrayOfPromises */: {\r\n                for (const outer of values.generator()) {\r\n                    for (const y of await outer) {\r\n                        valuesArray.push(y);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 2 /* PromiseOfPromises */: {\r\n                for (const outer of await values.generator()) {\r\n                    for (const y of await outer) {\r\n                        valuesArray.push(y);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return valuesArray;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.selectManyAsync = selectManyAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sequenceEquals = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Compares two parallel sequences to see if they are equal using a comparer function.\r\n * @param first First Sequence\r\n * @param second Second Sequence\r\n * @param comparer Comparer\r\n * @returns Whether or not the two iterations are equal\r\n */\r\nasync function sequenceEquals(\r\n// eslint-disable-next-line no-shadow\r\nfirst, second, comparer = shared_1.StrictEqualityComparer) {\r\n    const firstArray = await first.toArray();\r\n    const secondArray = await second.toArray();\r\n    if (firstArray.length !== secondArray.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < firstArray.length; i++) {\r\n        const firstResult = firstArray[i];\r\n        const secondResult = secondArray[i];\r\n        if (comparer(firstResult, secondResult) === false) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.sequenceEquals = sequenceEquals;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sequenceEqualsAsync = void 0;\r\n/**\r\n * Compares two parallel iterables to see if they are equal using a async comparer function.\r\n * @param first First Sequence\r\n * @param second Second Sequence\r\n * @param comparer Async Comparer\r\n * @returns Whether or not the two iterations are equal\r\n */\r\nasync function sequenceEqualsAsync(\r\n// eslint-disable-next-line no-shadow\r\nfirst, second, comparer) {\r\n    const firstArray = await first.toArray();\r\n    const secondArray = await second.toArray();\r\n    if (firstArray.length !== secondArray.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < firstArray.length; i++) {\r\n        const firstResult = firstArray[i];\r\n        const secondResult = secondArray[i];\r\n        if (await comparer(firstResult, secondResult) === false) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.sequenceEqualsAsync = sequenceEqualsAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.single = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst toArray_1 = require(\"./toArray\");\r\n/**\r\n * Returns the only element of a sequence that satisfies a specified condition (if specified),\r\n * and throws an exception if more than one such element exists.\r\n * @param source An IParallelEnumerable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition. (Optional)\r\n * @throws {InvalidOperationException} No element satisfies the condition in predicate. OR\r\n * More than one element satisfies the condition in predicate. OR\r\n * The source sequence is empty.\r\n * @returns The single element of the input sequence that satisfies a condition.\r\n */\r\nfunction single(source, predicate) {\r\n    if (predicate) {\r\n        return single2(source, predicate);\r\n    }\r\n    else {\r\n        return single1(source);\r\n    }\r\n}\r\nexports.single = single;\r\nconst single1 = async (source) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const results = await dataFunc.generator();\r\n            if (results.length > 1) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n            }\r\n            else if (results.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            return results[0];\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const results = dataFunc.generator();\r\n            if (results.length > 1) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n            }\r\n            else if (results.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            return results[0];\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const results = await dataFunc.generator();\r\n            if (results.length > 1) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n            }\r\n            else if (results.length === 0) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n            }\r\n            return await results[0];\r\n        }\r\n    }\r\n};\r\nconst single2 = async (source, predicate) => {\r\n    const results = await toArray_1.toArray(source);\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for (const value of results) {\r\n        if (predicate(value)) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneMatchingElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    if (hasValue === false) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n    }\r\n    return singleValue;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.singleAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst toArray_1 = require(\"./toArray\");\r\n/**\r\n * Returns the only element of a sequence that satisfies a specified condition,\r\n * and throws an exception if more than one such element exists.\r\n * @param source An IParallelEnumerable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition.\r\n * @throws {InvalidOperationException}\r\n * No element satisfies the condition in predicate. OR\r\n * More than one element satisfies the condition in predicate. OR\r\n * The source sequence is empty.\r\n * @returns The single element of the input sequence that satisfies a condition.\r\n */\r\nasync function singleAsync(source, predicate) {\r\n    const results = await toArray_1.toArray(source);\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for (const value of results) {\r\n        if (await predicate(value) === true) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneMatchingElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    if (hasValue === false) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n    }\r\n    return singleValue;\r\n}\r\nexports.singleAsync = singleAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.singleOrDefault = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst toArray_1 = require(\"./toArray\");\r\n/**\r\n * If predicate is specified returns the only element of a sequence that satisfies a specified condition,\r\n * ootherwise returns the only element of a sequence. Returns a default value if no such element exists.\r\n * @param source An IParallelEnumerable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition. Optional.\r\n * @throws {InvalidOperationException}\r\n * If predicate is specified more than one element satisfies the condition in predicate,\r\n * otherwise the input sequence contains more than one element.\r\n * @returns The single element of the input sequence that satisfies the condition,\r\n * or null if no such element is found.\r\n */\r\nexports.singleOrDefault = (source, predicate) => {\r\n    if (predicate) {\r\n        return singleOrDefault2(source, predicate);\r\n    }\r\n    else {\r\n        return singleOrDefault1(source);\r\n    }\r\n};\r\nconst singleOrDefault1 = async (source) => {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const results = await dataFunc.generator();\r\n            if (results.length > 1) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n            }\r\n            else if (results.length === 0) {\r\n                return null;\r\n            }\r\n            return results[0];\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const results = dataFunc.generator();\r\n            if (results.length > 1) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n            }\r\n            else if (results.length === 0) {\r\n                return null;\r\n            }\r\n            return results[0];\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const results = await dataFunc.generator();\r\n            if (results.length > 1) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n            }\r\n            else if (results.length === 0) {\r\n                return null;\r\n            }\r\n            return await results[0];\r\n        }\r\n    }\r\n};\r\nconst singleOrDefault2 = async (source, predicate) => {\r\n    const results = await toArray_1.toArray(source);\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for (const value of results) {\r\n        if (predicate(value)) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    return singleValue;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.singleOrDefaultAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst toArray_1 = require(\"./toArray\");\r\n/**\r\n * If predicate is specified returns the only element of a sequence that satisfies a specified condition,\r\n * ootherwise returns the only element of a sequence. Returns a default value if no such element exists.\r\n * @param source An IParallelEnumerable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition. Optional.\r\n * @throws {InvalidOperationException}\r\n * If predicate is specified more than one element satisfies the condition in predicate,\r\n * otherwise the input sequence contains more than one element.\r\n * @returns The single element of the input sequence that satisfies the condition,\r\n * or null if no such element is found.\r\n */\r\nasync function singleOrDefaultAsync(source, predicate) {\r\n    const results = await toArray_1.toArray(source);\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for (const value of results) {\r\n        if (await predicate(value) === true) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    return singleValue;\r\n}\r\nexports.singleOrDefaultAsync = singleOrDefaultAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.skip = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Bypasses a specified number of elements in a sequence and then returns the remaining elements.\r\n * @param source An IParallelEnumerable<T> to return elements from.\r\n * @param count The number of elements to skip before returning the remaining elements.\r\n * @returns\r\n * An IParallelEnumerable<T> that contains the elements that occur after the specified index in the input sequence.\r\n */\r\nfunction skip(source, count) {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */: {\r\n            const generator = async () => (await dataFunc.generator()).slice(count);\r\n            return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n                generator,\r\n                type: 0 /* PromiseToArray */,\r\n            });\r\n        }\r\n        case 1 /* ArrayOfPromises */: {\r\n            const generator = () => dataFunc.generator().slice(count);\r\n            return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n                generator,\r\n                type: 1 /* ArrayOfPromises */,\r\n            });\r\n        }\r\n        case 2 /* PromiseOfPromises */: {\r\n            const generator = async () => {\r\n                const dataInner = await dataFunc.generator();\r\n                return dataInner.slice(count);\r\n            };\r\n            const dataFuncNew = {\r\n                generator,\r\n                type: 2 /* PromiseOfPromises */,\r\n            };\r\n            return new BasicParallelEnumerable_1.BasicParallelEnumerable(dataFuncNew);\r\n        }\r\n    }\r\n}\r\nexports.skip = skip;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.skipWhile = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source An IAsyncParallel<T> to return elements from.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IParallelEnumerable<T> that contains the elements from the input sequence starting at the first element\r\n * in the linear series that does not pass the test specified by predicate.\r\n */\r\nfunction skipWhile(source, predicate) {\r\n    const generator = async () => {\r\n        const values = await source.toArray();\r\n        let i = 0;\r\n        for (; i < values.length; i++) {\r\n            const value = values[i];\r\n            if (predicate(value, i) === false) {\r\n                break;\r\n            }\r\n        }\r\n        const returnedValues = [];\r\n        for (; i < values.length; i++) {\r\n            returnedValues.push(values[i]);\r\n        }\r\n        return returnedValues;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.skipWhile = skipWhile;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.skipWhileAsync = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source An IAsyncParallel<T> to return elements from.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IParallelEnumerable<T> that contains the elements from the input sequence starting\r\n * at the first element in the linear series that does not pass the test specified by predicate.\r\n */\r\nfunction skipWhileAsync(source, predicate) {\r\n    const generator = async () => {\r\n        const values = await source.toArray();\r\n        let i = 0;\r\n        for (; i < values.length; i++) {\r\n            const value = values[i];\r\n            if (await predicate(value, i) === false) {\r\n                break;\r\n            }\r\n        }\r\n        const returnedValues = [];\r\n        for (; i < values.length; i++) {\r\n            returnedValues.push(values[i]);\r\n        }\r\n        return returnedValues;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.skipWhileAsync = skipWhileAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sum = void 0;\r\nfunction sum(source, selector) {\r\n    if (selector) {\r\n        return sum2(source, selector);\r\n    }\r\n    else {\r\n        return sum1(source);\r\n    }\r\n}\r\nexports.sum = sum;\r\nconst sum1 = async (source) => {\r\n    let totalSum = 0;\r\n    for (const value of await source.toArray()) {\r\n        totalSum += value;\r\n    }\r\n    return totalSum;\r\n};\r\nconst sum2 = async (source, selector) => {\r\n    let total = 0;\r\n    for (const value of await source.toArray()) {\r\n        total += selector(value);\r\n    }\r\n    return total;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sumAsync = void 0;\r\n/**\r\n * Computes the sum of the sequence of numeric values that are obtained by invoking a transform function\r\n * on each element of the input sequence.\r\n * @param source A sequence of values that are used to calculate a sum.\r\n * @param selector A transform function to apply to each element.\r\n * @returns Sum of the sequence\r\n */\r\nasync function sumAsync(source, selector) {\r\n    let total = 0;\r\n    for (const value of await source.toArray()) {\r\n        total += await selector(value);\r\n    }\r\n    return total;\r\n}\r\nexports.sumAsync = sumAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.take = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Returns a specified number of contiguous elements from the start of a sequence.\r\n * @param source The sequence to return elements from.\r\n * @param amount The number of elements to return.\r\n * @returns An IParallelEnumerable<T> that contains the specified number of elements\r\n * from the start of the input sequence.\r\n */\r\nfunction take(source, amount) {\r\n    const amountLeft = amount > 0 ? amount : 0;\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 1 /* ArrayOfPromises */:\r\n            const generator1 = () => dataFunc.generator().splice(0, amountLeft);\r\n            return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n                generator: generator1,\r\n                type: 1 /* ArrayOfPromises */,\r\n            });\r\n        case 2 /* PromiseOfPromises */:\r\n            const generator2 = () => dataFunc.generator().then((x) => x.splice(0, amountLeft));\r\n            return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n                generator: generator2,\r\n                type: 2 /* PromiseOfPromises */,\r\n            });\r\n        case 0 /* PromiseToArray */:\r\n        default:\r\n            const generator3 = () => dataFunc.generator().then((x) => x.splice(0, amountLeft));\r\n            return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n                generator: generator3,\r\n                type: 0 /* PromiseToArray */,\r\n            });\r\n    }\r\n}\r\nexports.take = take;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.takeWhile = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Returns elements from a sequence as long as a specified condition is true.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source The sequence to return elements from.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IAsyncEnumerable<T> that contains elements from the input sequence\r\n * that occur before the element at which the test no longer passes.\r\n */\r\nfunction takeWhile(source, predicate) {\r\n    const generator = async () => {\r\n        const values = await source.toArray();\r\n        const results = new Array();\r\n        if (predicate.length === 1) {\r\n            for (const value of values) {\r\n                if (predicate(value) === true) {\r\n                    results.push(value);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (predicate(value, i) === true) {\r\n                    results.push(value);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.takeWhile = takeWhile;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.takeWhileAsync = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Returns elements from a sequence as long as a specified condition is true.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source The sequence to return elements from.\r\n * @param predicate An async function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IParallelEnumerable<T> that contains elements\r\n * from the input sequence that occur before the element at which the test no longer passes.\r\n */\r\nfunction takeWhileAsync(source, predicate) {\r\n    const generator = async () => {\r\n        const values = await source.toArray();\r\n        const results = new Array();\r\n        if (predicate.length === 1) {\r\n            const sPredicate = predicate;\r\n            for (const value of values) {\r\n                if (await sPredicate(value) === true) {\r\n                    results.push(value);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < values.length; i++) {\r\n                const value = values[i];\r\n                if (await predicate(value, i) === true) {\r\n                    results.push(value);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.takeWhileAsync = takeWhileAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toArray = void 0;\r\n/**\r\n * Creates an array from a IParallelEnumerable<T>.\r\n * @param source An IParallelEnumerable<T> to create an array from.\r\n * @returns An array of elements\r\n */\r\nfunction toArray(source) {\r\n    const dataFunc = source.dataFunc;\r\n    switch (dataFunc.type) {\r\n        case 0 /* PromiseToArray */:\r\n            return dataFunc.generator();\r\n        case 1 /* ArrayOfPromises */:\r\n            return Promise.all(dataFunc.generator());\r\n        case 2 /* PromiseOfPromises */:\r\n            return (async () => {\r\n                const data = await dataFunc.generator();\r\n                return Promise.all(data);\r\n            })();\r\n        default:\r\n            throw new Error(\"Not Implemented\");\r\n    }\r\n}\r\nexports.toArray = toArray;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toMap = void 0;\r\n/**\r\n * Converts an AsyncIterable<V> to a Map<K, V[]>.\r\n * @param source An Iterable<V> to convert.\r\n * @param selector A function to serve as a key selector.\r\n * @returns A promise for Map<K, V[]>\r\n */\r\nasync function toMap(source, selector) {\r\n    const map = new Map();\r\n    for await (const value of source) {\r\n        const key = selector(value);\r\n        const array = map.get(key);\r\n        if (array === undefined) {\r\n            map.set(key, [value]);\r\n        }\r\n        else {\r\n            array.push(value);\r\n        }\r\n    }\r\n    return map;\r\n}\r\nexports.toMap = toMap;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toMapAsync = void 0;\r\n/**\r\n * Converts an AsyncIterable<V> to a Map<K, V[]>.\r\n * @param source An Iterable<V> to convert.\r\n * @param selector An async function to serve as a key selector.\r\n * @returns A promise for Map<K, V[]>\r\n */\r\nasync function toMapAsync(source, selector) {\r\n    const map = new Map();\r\n    for await (const value of source) {\r\n        const key = await selector(value);\r\n        const array = map.get(key);\r\n        if (array === undefined) {\r\n            map.set(key, [value]);\r\n        }\r\n        else {\r\n            array.push(value);\r\n        }\r\n    }\r\n    return map;\r\n}\r\nexports.toMapAsync = toMapAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toSet = void 0;\r\n/**\r\n * Converts the Async Itertion to a Set\r\n * @param source Iteration\r\n * @returns Set containing the iteration values\r\n */\r\nasync function toSet(source) {\r\n    const set = new Set();\r\n    for await (const item of source) {\r\n        set.add(item);\r\n    }\r\n    return set;\r\n}\r\nexports.toSet = toSet;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.union = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Produces the set union of two sequences by using scrict equality comparison or a specified IEqualityComparer<T>.\r\n * @param first An IAsyncParallel<T> whose distinct elements form the first set for the union.\r\n * @param second An IAsyncParallel<T> whose distinct elements form the second set for the union.\r\n * @param comparer The IEqualityComparer<T> to compare values. Optional.\r\n * @returns An IParallelEnumerable<T> that contains the elements from both input sequences, excluding duplicates.\r\n */\r\nfunction union(first, second, comparer) {\r\n    if (comparer) {\r\n        return union2(first, second, comparer);\r\n    }\r\n    else {\r\n        return union1(first, second);\r\n    }\r\n}\r\nexports.union = union;\r\nconst union1 = (first, second) => {\r\n    async function generator() {\r\n        const set = new Set();\r\n        const secondPromise = second.toArray();\r\n        for await (const item of first) {\r\n            if (set.has(item) === false) {\r\n                set.add(item);\r\n            }\r\n        }\r\n        const secondValues = await secondPromise;\r\n        for (const item of secondValues) {\r\n            if (set.has(item) === false) {\r\n                set.add(item);\r\n            }\r\n        }\r\n        return [...set.keys()];\r\n    }\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n};\r\nconst union2 = (\r\n// eslint-disable-next-line no-shadow\r\nfirst, second, comparer) => {\r\n    const generator = async () => {\r\n        const result = [];\r\n        const values = await Promise.all([first.toArray(), second.toArray()]);\r\n        for (const source of values) {\r\n            for (const value of source) {\r\n                let exists = false;\r\n                for (const resultValue of result) {\r\n                    if (comparer(value, resultValue) === true) {\r\n                        exists = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (exists === false) {\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.unionAsync = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Produces the set union of two sequences by using a specified IAsyncEqualityComparer<T>.\r\n * @param first An AsyncIterable<T> whose distinct elements form the first set for the union.\r\n * @param second An AsyncIterable<T> whose distinct elements form the second set for the union.\r\n * @param comparer The IAsyncEqualityComparer<T> to compare values.\r\n * @returns An IAsyncEnumerable<T> that contains the elements from both input sequences, excluding duplicates.\r\n */\r\nfunction unionAsync(\r\n// eslint-disable-next-line no-shadow\r\nfirst, second, comparer) {\r\n    const generator = async () => {\r\n        const result = [];\r\n        const values = await Promise.all([first.toArray(), second.toArray()]);\r\n        for (const source of values) {\r\n            for (const value of source) {\r\n                let exists = false;\r\n                for (const resultValue of result) {\r\n                    if (await comparer(value, resultValue) === true) {\r\n                        exists = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (exists === false) {\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.unionAsync = unionAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.where = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Filters a sequence of values based on a predicate.\r\n * Each element's index is used in the logic of the predicate function.\r\n * @param source An IAsyncParallel<T> to filter.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IParallelEnumerable<T> that contains elements from the input sequence that satisfy the condition.\r\n */\r\nfunction where(source, predicate) {\r\n    const generator = async () => {\r\n        const values = await source.toArray();\r\n        return values.filter(predicate);\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.where = where;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.whereAsync = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Filters a sequence of values based on a predicate.\r\n * Each element's index is used in the logic of the predicate function.\r\n * @param source An IAsyncParallel<T> to filter.\r\n * @param predicate A async function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IParallelEnumerable<T> that contains elements from the input sequence that satisfy the condition.\r\n */\r\nfunction whereAsync(source, predicate) {\r\n    const generator = async () => {\r\n        const values = await source.toArray();\r\n        const valuesAsync = values.map(async (x, i) => {\r\n            const keep = await predicate(x, i);\r\n            return {\r\n                keep,\r\n                x,\r\n            };\r\n        });\r\n        const filteredValues = [];\r\n        for (const value of await Promise.all(valuesAsync)) {\r\n            if (value.keep) {\r\n                filteredValues.push(value.x);\r\n            }\r\n        }\r\n        return filteredValues;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.whereAsync = whereAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.zip = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nfunction zip(first, second, resultSelector) {\r\n    if (resultSelector) {\r\n        return zip2(first, second, resultSelector);\r\n    }\r\n    else {\r\n        return zip1(first, second);\r\n    }\r\n}\r\nexports.zip = zip;\r\nconst zip1 = (source, second) => {\r\n    async function generator() {\r\n        const [left, right] = await Promise.all([source.toArray(), second.toArray()]);\r\n        const maxLength = left.length > right.length ? left.length : right.length;\r\n        const results = new Array(maxLength);\r\n        for (let i = 0; i < maxLength; i++) {\r\n            const a = left[i];\r\n            const b = right[i];\r\n            results[i] = [a, b];\r\n        }\r\n        return results;\r\n    }\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n};\r\nconst zip2 = (source, second, resultSelector) => {\r\n    async function generator() {\r\n        const [left, right] = await Promise.all([source.toArray(), second.toArray()]);\r\n        const maxLength = left.length > right.length ? left.length : right.length;\r\n        const results = new Array(maxLength);\r\n        for (let i = 0; i < maxLength; i++) {\r\n            const a = left[i];\r\n            const b = right[i];\r\n            results[i] = resultSelector(a, b);\r\n        }\r\n        return results;\r\n    }\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.zipAsync = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Applies a specified async function to the corresponding elements of two sequences,\r\n * producing a sequence of the results.\r\n * @param first The first sequence to merge.\r\n * @param second The second sequence to merge.\r\n * @param resultSelector An async function that specifies how to merge the elements from the two sequences.\r\n * @returns An IAsyncEnumerable<T> that contains merged elements of two input sequences.\r\n */\r\nfunction zipAsync(first, second, resultSelector) {\r\n    async function generator() {\r\n        const [left, right] = await Promise.all([first.toArray(), second.toArray()]);\r\n        const maxLength = left.length > right.length ? left.length : right.length;\r\n        const resultPromises = new Array(maxLength);\r\n        for (let i = 0; i < maxLength; i++) {\r\n            const a = left[i];\r\n            const b = right[i];\r\n            resultPromises[i] = resultSelector(a, b);\r\n        }\r\n        return Promise.all(resultPromises);\r\n    }\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.zipAsync = zipAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isParallelEnumerable = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"./BasicParallelEnumerable\");\r\n/* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment */\r\n/**\r\n * Determine if the source is IParallelEnumerable\r\n * @param source Any value\r\n * @returns Whether or not this type is a Parallel Enumerable\r\n */\r\nexports.isParallelEnumerable = (source) => {\r\n    if (!source) {\r\n        return false;\r\n    }\r\n    if (source instanceof BasicParallelEnumerable_1.BasicParallelEnumerable) {\r\n        return true;\r\n    }\r\n    if (typeof source[Symbol.asyncIterator] !== \"function\") {\r\n        return false;\r\n    }\r\n    const propertyNames = Object.getOwnPropertyNames(BasicParallelEnumerable_1.BasicParallelEnumerable.prototype)\r\n        .filter((v) => v !== \"constructor\");\r\n    const methods = source.prototype || source;\r\n    for (const prop of propertyNames) {\r\n        if (typeof methods[prop] !== \"function\") {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.emptyParallel = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Returns an empty IParallelEnumerable<T> that has the specified type argument.\r\n * @returns An empty IParallelEnumerable<T> whose type argument is TResult.\r\n */\r\nexports.emptyParallel = () => {\r\n    const dataFunc = {\r\n        generator: async () => [],\r\n        type: 0 /* PromiseToArray */,\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable(dataFunc);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.flattenParallel = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nfunction flattenParallel(source, shallow) {\r\n    async function* iterator(sourceInner) {\r\n        for await (const item of sourceInner) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n            if (item[Symbol.asyncIterator] !== undefined) {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                const items = shallow ? item : iterator(item);\r\n                for await (const inner of items) {\r\n                    yield inner;\r\n                }\r\n            }\r\n            else {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    const generator = async () => {\r\n        const results = [];\r\n        for await (const x of iterator(source)) {\r\n            results.push(x);\r\n        }\r\n        return results;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n}\r\nexports.flattenParallel = flattenParallel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.fromParallel = void 0;\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\nfunction fromParallel(type, generator) {\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        type,\r\n    });\r\n}\r\nexports.fromParallel = fromParallel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar emptyParallel_1 = require(\"./emptyParallel\");\r\nObject.defineProperty(exports, \"emptyParallel\", { enumerable: true, get: function () { return emptyParallel_1.emptyParallel; } });\r\nvar flattenParallel_1 = require(\"./flattenParallel\");\r\nObject.defineProperty(exports, \"flattenParallel\", { enumerable: true, get: function () { return flattenParallel_1.flattenParallel; } });\r\nvar fromParallel_1 = require(\"./fromParallel\");\r\nObject.defineProperty(exports, \"fromParallel\", { enumerable: true, get: function () { return fromParallel_1.fromParallel; } });\r\nvar partitionParallel_1 = require(\"./partitionParallel\");\r\nObject.defineProperty(exports, \"partitionParallel\", { enumerable: true, get: function () { return partitionParallel_1.partitionParallel; } });\r\nvar rangeParallel_1 = require(\"./rangeParallel\");\r\nObject.defineProperty(exports, \"rangeParallel\", { enumerable: true, get: function () { return rangeParallel_1.rangeParallel; } });\r\nvar repeatParallel_1 = require(\"./repeatParallel\");\r\nObject.defineProperty(exports, \"repeatParallel\", { enumerable: true, get: function () { return repeatParallel_1.repeatParallel; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.partitionParallel = void 0;\r\n/**\r\n * Paritions the Iterable<T> into a tuple of failing and passing arrays\r\n * based on the predicate.\r\n * @param source Elements to Partition\r\n * @param predicate Pass / Fail condition\r\n * @returns [pass, fail]\r\n */\r\nexports.partitionParallel = async (source, predicate) => {\r\n    const fail = [];\r\n    const pass = [];\r\n    for await (const value of source) {\r\n        if (predicate(value) === true) {\r\n            pass.push(value);\r\n        }\r\n        else {\r\n            fail.push(value);\r\n        }\r\n    }\r\n    return [pass, fail];\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rangeParallel = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Generates a sequence of integral numbers within a specified range.\r\n * @param start The value of the first integer in the sequence.\r\n * @param count The number of sequential integers to generate.\r\n * @throws {ArgumentOutOfRangeException} Start is Less than 0\r\n * OR start + count -1 is larger than MAX_SAFE_INTEGER.\r\n * @returns An IParallelEnumerable<number> that contains a range of sequential integral numbers.\r\n */\r\nfunction rangeParallel(start, count) {\r\n    if (start < 0 || (start + count - 1) > Number.MAX_SAFE_INTEGER) {\r\n        throw new shared_1.ArgumentOutOfRangeException(`start`);\r\n    }\r\n    function generator() {\r\n        const items = [];\r\n        const maxI = start + count;\r\n        for (let i = start; i < maxI; i++) {\r\n            items.push(Promise.resolve(i));\r\n        }\r\n        return items;\r\n    }\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 1 /* ArrayOfPromises */,\r\n    });\r\n}\r\nexports.rangeParallel = rangeParallel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.repeatParallel = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicParallelEnumerable_1 = require(\"../BasicParallelEnumerable\");\r\n/**\r\n * Generates a sequence that contains one repeated value.\r\n * @param element The value to be repeated.\r\n * @param count The number of times to repeat the value in the generated sequence.\r\n * @param delay Miliseconds for Timeout\r\n * @returns An IParallelEnumerable<T> that contains a repeated value.\r\n */\r\nfunction repeatParallel(\r\n// eslint-disable-next-line no-shadow\r\nelement, count, delay) {\r\n    if (count < 0) {\r\n        throw new shared_1.ArgumentOutOfRangeException(`count`);\r\n    }\r\n    if (delay) {\r\n        return repeat2(element, count, delay);\r\n    }\r\n    else {\r\n        return repeat1(element, count);\r\n    }\r\n}\r\nexports.repeatParallel = repeatParallel;\r\nconst repeat1 = (element, count) => {\r\n    const generator = async () => {\r\n        const values = new Array(count);\r\n        for (let i = 0; i < count; i++) {\r\n            values[i] = element;\r\n        }\r\n        return values;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 0 /* PromiseToArray */,\r\n    });\r\n};\r\nconst repeat2 = (element, count, delay) => {\r\n    const generator = async () => {\r\n        const values = new Array(count);\r\n        for (let i = 0; i < count; i++) {\r\n            values[i] = new Promise((resolve) => setTimeout(() => resolve(element), delay));\r\n        }\r\n        return values;\r\n    };\r\n    return new BasicParallelEnumerable_1.BasicParallelEnumerable({\r\n        generator,\r\n        type: 2 /* PromiseOfPromises */,\r\n    });\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ArgumentOutOfRangeException = void 0;\r\n/**\r\n * Exception thrown when the passed in argument\r\n * is out of range.\r\n */\r\nclass ArgumentOutOfRangeException extends RangeError {\r\n    constructor(paramName) {\r\n        super(`${paramName} was out of range.` +\r\n            ` Must be non-negative and less than the size of the collection.`);\r\n        this.paramName = paramName;\r\n        this.name = `ArgumentOutOfRangeException`;\r\n        this.stack = this.stack || (new Error()).stack;\r\n    }\r\n}\r\nexports.ArgumentOutOfRangeException = ArgumentOutOfRangeException;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EqualityComparer = void 0;\r\n/**\r\n * Does weak (==) comparison between two values.\r\n * Good for comparing numbers and strings.\r\n * @param x left value\r\n * @param y right value\r\n * @returns x == y\r\n */\r\nexports.EqualityComparer = (x, y) => \r\n// eslint-disable-next-line eqeqeq\r\nx == y;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ErrorString = void 0;\r\n/**\r\n * @private\r\n */\r\nexports.ErrorString = Object.freeze({\r\n    MoreThanOneElement: `Sequence contains more than one element`,\r\n    MoreThanOneMatchingElement: `Sequence contains more than one matching element`,\r\n    NoElements: `Sequence contains no elements`,\r\n    NoMatch: `Sequence contains no matching element`,\r\n});\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InvalidOperationException = void 0;\r\n/**\r\n * Invalid Operation Exception\r\n */\r\nclass InvalidOperationException extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = `InvalidOperationException`;\r\n        this.stack = this.stack || (new Error()).stack;\r\n    }\r\n}\r\nexports.InvalidOperationException = InvalidOperationException;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NumberComparer = void 0;\r\n/**\r\n * Compares two numeric values.\r\n * @param x left value\r\n * @param y right value\r\n * @returns x - y\r\n */\r\nexports.NumberComparer = (x, y) => x - y;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StrictEqualityComparer = void 0;\r\n/**\r\n * Does strict (===) comparison between two values.\r\n * @param x left value\r\n * @param y right value\r\n * @returns Whether or not the two values are strictly equal\r\n */\r\nexports.StrictEqualityComparer = (x, y) => x === y;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StringifyComparer = void 0;\r\n/**\r\n * Compares two values by converting them to json\r\n * and then comparing the two json strings.\r\n * @param x left value\r\n * @param y right value\r\n * @returns Whether or not the two values produce equal JSON\r\n */\r\nexports.StringifyComparer = (x, y) => JSON.stringify(x) === JSON.stringify(y);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ArgumentOutOfRangeException_1 = require(\"./ArgumentOutOfRangeException\");\r\nObject.defineProperty(exports, \"ArgumentOutOfRangeException\", { enumerable: true, get: function () { return ArgumentOutOfRangeException_1.ArgumentOutOfRangeException; } });\r\nvar EqualityComparer_1 = require(\"./EqualityComparer\");\r\nObject.defineProperty(exports, \"EqualityComparer\", { enumerable: true, get: function () { return EqualityComparer_1.EqualityComparer; } });\r\nvar ErrorString_1 = require(\"./ErrorString\");\r\nObject.defineProperty(exports, \"ErrorString\", { enumerable: true, get: function () { return ErrorString_1.ErrorString; } });\r\nvar InvalidOperationException_1 = require(\"./InvalidOperationException\");\r\nObject.defineProperty(exports, \"InvalidOperationException\", { enumerable: true, get: function () { return InvalidOperationException_1.InvalidOperationException; } });\r\nvar NumberComparer_1 = require(\"./NumberComparer\");\r\nObject.defineProperty(exports, \"NumberComparer\", { enumerable: true, get: function () { return NumberComparer_1.NumberComparer; } });\r\nvar StrictEqualityComparer_1 = require(\"./StrictEqualityComparer\");\r\nObject.defineProperty(exports, \"StrictEqualityComparer\", { enumerable: true, get: function () { return StrictEqualityComparer_1.StrictEqualityComparer; } });\r\nvar StringifyComparer_1 = require(\"./StringifyComparer\");\r\nObject.defineProperty(exports, \"StringifyComparer\", { enumerable: true, get: function () { return StringifyComparer_1.StringifyComparer; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ArrayEnumerable = void 0;\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\n/**\r\n * Array backed Enumerable\r\n */\r\nclass ArrayEnumerable extends Array {\r\n}\r\nexports.ArrayEnumerable = ArrayEnumerable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BasicEnumerable = void 0;\r\n/* eslint-disable @typescript-eslint/no-empty-interface */\r\n/**\r\n * Basic Enumerable. Usually returned from the Enumerable class.\r\n * @private\r\n */\r\nclass BasicEnumerable {\r\n    constructor(iterator) {\r\n        this.iterator = iterator;\r\n        //\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this.iterator();\r\n    }\r\n}\r\nexports.BasicEnumerable = BasicEnumerable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Grouping = void 0;\r\nconst ArrayEnumerable_1 = require(\"./ArrayEnumerable\");\r\n/**\r\n * Key to Values Enumeration\r\n * @private\r\n */\r\nclass Grouping extends ArrayEnumerable_1.ArrayEnumerable {\r\n    constructor(key, startingItem) {\r\n        super(1);\r\n        this.key = key;\r\n        this[0] = startingItem;\r\n    }\r\n}\r\nexports.Grouping = Grouping;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrderedEnumerable = void 0;\r\nconst OrderedAsyncEnumerable_1 = require(\"../async/OrderedAsyncEnumerable\");\r\nconst asSortedKeyValues_1 = require(\"./_ordered/asSortedKeyValues\");\r\nconst asSortedKeyValuesAsync_1 = require(\"./_ordered/asSortedKeyValuesAsync\");\r\nconst BasicEnumerable_1 = require(\"./BasicEnumerable\");\r\n/**\r\n * Represents Ordered Enumeration\r\n * @private\r\n */\r\nclass OrderedEnumerable extends BasicEnumerable_1.BasicEnumerable {\r\n    constructor(orderedPairs) {\r\n        super(function* () {\r\n            for (const orderedPair of orderedPairs()) {\r\n                yield* orderedPair;\r\n            }\r\n        });\r\n        this.orderedPairs = orderedPairs;\r\n    }\r\n    // #region Sync\r\n    static generate(source, keySelector, ascending, comparer) {\r\n        let orderedPairs;\r\n        if (source instanceof OrderedEnumerable) {\r\n            orderedPairs = function* () {\r\n                for (const pair of source.orderedPairs()) {\r\n                    yield* asSortedKeyValues_1.asSortedKeyValues(pair, keySelector, ascending, comparer);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            orderedPairs = () => asSortedKeyValues_1.asSortedKeyValues(source, keySelector, ascending, comparer);\r\n        }\r\n        return new OrderedEnumerable(orderedPairs);\r\n    }\r\n    // #endregion\r\n    // #region Async\r\n    static generateAsync(source, keySelector, ascending, comparer) {\r\n        let orderedPairs;\r\n        if (source instanceof OrderedEnumerable) {\r\n            orderedPairs = async function* () {\r\n                for (const pair of source.orderedPairs()) {\r\n                    yield* asSortedKeyValuesAsync_1.asSortedKeyValuesAsync(pair, keySelector, ascending, comparer);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            orderedPairs = () => asSortedKeyValuesAsync_1.asSortedKeyValuesAsync(source, keySelector, ascending, comparer);\r\n        }\r\n        return new OrderedAsyncEnumerable_1.OrderedAsyncEnumerable(orderedPairs);\r\n    }\r\n    // #endregion\r\n    thenBy(keySelector, comparer) {\r\n        return OrderedEnumerable.generate(this, keySelector, true, comparer);\r\n    }\r\n    thenByAsync(keySelector, comparer) {\r\n        return OrderedEnumerable.generateAsync(this, keySelector, true, comparer);\r\n    }\r\n    thenByDescending(keySelector, comparer) {\r\n        return OrderedEnumerable.generate(this, keySelector, false, comparer);\r\n    }\r\n    thenByDescendingAsync(keySelector, comparer) {\r\n        return OrderedEnumerable.generateAsync(this, keySelector, false, comparer);\r\n    }\r\n}\r\nexports.OrderedEnumerable = OrderedEnumerable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asKeyMap = void 0;\r\n/**\r\n * Converts values to a key values map.\r\n * @param source Iterable\r\n * @param keySelector Key Selector for Map\r\n * @returns Map for Key to Values\r\n */\r\nexports.asKeyMap = (source, keySelector) => {\r\n    const map = new Map();\r\n    for (const item of source) {\r\n        const key = keySelector(item);\r\n        const currentMapping = map.get(key);\r\n        if (currentMapping) {\r\n            currentMapping.push(item);\r\n        }\r\n        else {\r\n            map.set(key, [item]);\r\n        }\r\n    }\r\n    return map;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asKeyMapAsync = void 0;\r\n/**\r\n * Converts values to a key values map.\r\n * @param source Iterable\r\n * @param keySelector Async Key Selector for Map\r\n * @returns Map for Key to Values\r\n */\r\nexports.asKeyMapAsync = async (source, keySelector) => {\r\n    const map = new Map();\r\n    for (const item of source) {\r\n        const key = await keySelector(item);\r\n        const currentMapping = map.get(key);\r\n        if (currentMapping) {\r\n            currentMapping.push(item);\r\n        }\r\n        else {\r\n            map.set(key, [item]);\r\n        }\r\n    }\r\n    return map;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asSortedKeyValues = void 0;\r\nconst asKeyMap_1 = require(\"./asKeyMap\");\r\n/**\r\n * Sorts values in an Iterable based on key and a key comparer.\r\n * @param source Iterable\r\n * @param keySelector Key Selector\r\n * @param ascending Ascending or Descending Sort\r\n * @param comparer Key Comparer for Sorting. Optional.\r\n */\r\nfunction* asSortedKeyValues(source, keySelector, ascending, comparer) {\r\n    const map = asKeyMap_1.asKeyMap(source, keySelector);\r\n    const sortedKeys = [...map.keys()].sort(comparer ? comparer : undefined);\r\n    if (ascending) {\r\n        for (let i = 0; i < sortedKeys.length; i++) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = sortedKeys.length - 1; i >= 0; i--) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n}\r\nexports.asSortedKeyValues = asSortedKeyValues;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asSortedKeyValuesAsync = void 0;\r\nconst asKeyMapAsync_1 = require(\"./asKeyMapAsync\");\r\n/**\r\n * Sorts values in an Iterable based on key and a key comparer.\r\n * @param source Iterable\r\n * @param keySelector Async Key Selector\r\n * @param ascending Ascending or Descending Sort\r\n * @param comparer Key Comparer for Sorting. Optional.\r\n * @returns Async Iterable Iterator\r\n */\r\nasync function* asSortedKeyValuesAsync(source, keySelector, ascending, comparer) {\r\n    const map = await asKeyMapAsync_1.asKeyMapAsync(source, keySelector);\r\n    const sortedKeys = [...map.keys()].sort(comparer ? comparer : undefined);\r\n    if (ascending) {\r\n        for (let i = 0; i < sortedKeys.length; i++) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = sortedKeys.length - 1; i >= 0; i--) {\r\n            yield map.get(sortedKeys[i]);\r\n        }\r\n    }\r\n}\r\nexports.asSortedKeyValuesAsync = asSortedKeyValuesAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.aggregate = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nfunction aggregate(source, seedOrFunc, func, resultSelector) {\r\n    if (resultSelector) {\r\n        if (!func) {\r\n            throw new ReferenceError(`TAccumulate function is undefined`);\r\n        }\r\n        return aggregate3(source, seedOrFunc, func, resultSelector);\r\n    }\r\n    else if (func) {\r\n        return aggregate2(source, seedOrFunc, func);\r\n    }\r\n    else {\r\n        return aggregate1(source, seedOrFunc);\r\n    }\r\n}\r\nexports.aggregate = aggregate;\r\nconst aggregate1 = (source, func) => {\r\n    let aggregateValue;\r\n    for (const value of source) {\r\n        if (aggregateValue) {\r\n            aggregateValue = func(aggregateValue, value);\r\n        }\r\n        else {\r\n            aggregateValue = value;\r\n        }\r\n    }\r\n    if (aggregateValue === undefined) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return aggregateValue;\r\n};\r\nconst aggregate2 = (source, seed, func) => {\r\n    let aggregateValue = seed;\r\n    for (const value of source) {\r\n        aggregateValue = func(aggregateValue, value);\r\n    }\r\n    return aggregateValue;\r\n};\r\nconst aggregate3 = (source, seed, func, resultSelector) => {\r\n    let aggregateValue = seed;\r\n    for (const value of source) {\r\n        aggregateValue = func(aggregateValue, value);\r\n    }\r\n    return resultSelector(aggregateValue);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.all = void 0;\r\n/**\r\n * Determines whether all elements of a sequence satisfy a condition.\r\n * @param source An Iterable<T> that contains the elements to apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns ``true`` if every element of the source sequence passes the test in the specified predicate,\r\n * or if the sequence is empty; otherwise, ``false``.\r\n */\r\nexports.all = (source, predicate) => {\r\n    for (const item of source) {\r\n        if (predicate(item) === false) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.allAsync = void 0;\r\n/**\r\n * Determines whether all elements of a sequence satisfy a condition.\r\n * @param source An Iterable<T> that contains the elements to apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns ``true`` if every element of the source sequence passes the test in the specified predicate,\r\n * or if the sequence is empty; otherwise, ``false``.\r\n */\r\nexports.allAsync = async (source, predicate) => {\r\n    for (const item of source) {\r\n        if (await predicate(item) === false) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.any = void 0;\r\n/**\r\n * Determines whether a sequence contains any elements.\r\n * If predicate is specified, determines whether any element of a sequence satisfies a condition.\r\n * @param source The Iterable<T> to check for emptiness or apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns true if the source sequence contains any elements or passes the test specified; otherwise, false.\r\n */\r\nexports.any = (source, predicate) => {\r\n    if (predicate) {\r\n        return any2(source, predicate);\r\n    }\r\n    else {\r\n        return any1(source);\r\n    }\r\n};\r\nconst any1 = (source) => {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    for (const _ of source) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\nconst any2 = (source, predicate) => {\r\n    for (const item of source) {\r\n        if (predicate(item) === true) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.anyAsync = void 0;\r\n/**\r\n * Determines whether any element of a sequence satisfies a condition.\r\n * @param source An IEnumerable<T> whose elements to apply the predicate to.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns true if the source sequence contains any elements or passes the test specified; otherwise, false.\r\n */\r\nexports.anyAsync = async (source, predicate) => {\r\n    for (const item of source) {\r\n        if (await predicate(item) === true) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Converts the iterable to an @see {IAsyncEnumerable}\r\n * @param source The Iterable<T> to convert\r\n * @returns An IAsyncEnumerable<T>\r\n */\r\nexports.asAsync = (source) => {\r\n    async function* generator() {\r\n        for (const value of source) {\r\n            yield value;\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(generator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.asParallel = void 0;\r\nconst fromParallel_1 = require(\"../../parallel/static/fromParallel\");\r\n/**\r\n * Converts an iterable to @see {IParallelEnumerable}\r\n * @param source Sequence to convert\r\n * @returns An IParallelEnumerable<T>\r\n */\r\nexports.asParallel = (source) => {\r\n    const generator = async () => {\r\n        const array = [];\r\n        for (const value of source) {\r\n            array.push(value);\r\n        }\r\n        return array;\r\n    };\r\n    return fromParallel_1.fromParallel(0 /* PromiseToArray */, generator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.average = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nfunction average(source, selector) {\r\n    if (selector) {\r\n        return average2(source, selector);\r\n    }\r\n    else {\r\n        return average1(source);\r\n    }\r\n}\r\nexports.average = average;\r\nconst average1 = (source) => {\r\n    let value;\r\n    let count;\r\n    for (const item of source) {\r\n        value = (value || 0) + item;\r\n        count = (count || 0) + 1;\r\n    }\r\n    if (value === undefined) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return value / count;\r\n};\r\nconst average2 = (source, func) => {\r\n    let value;\r\n    let count;\r\n    for (const item of source) {\r\n        value = (value || 0) + func(item);\r\n        count = (count || 0) + 1;\r\n    }\r\n    if (value === undefined) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return value / count;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.averageAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Computes the average of a sequence of values\r\n * that are obtained by invoking a transform function on each element of the input sequence.\r\n * @param source A sequence of values to calculate the average of.\r\n * @param selector A transform function to apply to each element.\r\n * @throws {InvalidOperationException} source contains no elements.\r\n * @returns Avarage of the sequence of values\r\n */\r\nexports.averageAsync = async (source, selector) => {\r\n    let value;\r\n    let count;\r\n    for (const item of source) {\r\n        value = (value || 0) + await selector(item);\r\n        count = (count || 0) + 1;\r\n    }\r\n    if (value === undefined) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return value / count;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.concatenate = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Concatenates two sequences.\r\n * @param first The first sequence to concatenate.\r\n * @param second The sequence to concatenate to the first sequence.\r\n * @returns An IEnumerable<T> that contains the concatenated elements of the two input sequences.\r\n */\r\nexports.concatenate = (first, second) => {\r\n    function* iterator() {\r\n        yield* first;\r\n        yield* second;\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.contains = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Determines whether a sequence contains a specified element by using the specified or default IEqualityComparer<T>.\r\n * @param source A sequence in which to locate a value.\r\n * @param value The value to locate in the sequence.\r\n * @param comparer An equality comparer to compare values. Optional.\r\n * @returns true if the source sequence contains an element that has the specified value; otherwise, false.\r\n */\r\nexports.contains = (source, value, comparer = shared_1.StrictEqualityComparer) => {\r\n    for (const item of source) {\r\n        if (comparer(value, item)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.containsAsync = void 0;\r\n/**\r\n * Determines whether a sequence contains a specified element by using the specified or default IEqualityComparer<T>.\r\n * @param source A sequence in which to locate a value.\r\n * @param value The value to locate in the sequence.\r\n * @param comparer An equality comparer to compare values. Optional.\r\n * @returns true if the source sequence contains an element that has the specified value; otherwise, false.\r\n */\r\nexports.containsAsync = async (source, value, comparer) => {\r\n    for (const item of source) {\r\n        if (await comparer(value, item)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.count = void 0;\r\n/**\r\n * Returns the number of elements in a sequence\r\n * or represents how many elements in the specified sequence satisfy a condition\r\n * if the predicate is specified.\r\n * @param source A sequence that contains elements to be counted.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @returns The number of elements in the input sequence.\r\n */\r\nexports.count = (source, predicate) => {\r\n    if (predicate) {\r\n        return count2(source, predicate);\r\n    }\r\n    else {\r\n        return count1(source);\r\n    }\r\n};\r\nconst count1 = (source) => {\r\n    // eslint-disable-next-line no-shadow\r\n    let count = 0;\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    for (const _ of source) {\r\n        count++;\r\n    }\r\n    return count;\r\n};\r\nconst count2 = (source, predicate) => {\r\n    // eslint-disable-next-line no-shadow\r\n    let count = 0;\r\n    for (const value of source) {\r\n        if (predicate(value) === true) {\r\n            count++;\r\n        }\r\n    }\r\n    return count;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.countAsync = void 0;\r\n/**\r\n * Returns the number of elements in a sequence\r\n * or represents how many elements in the specified sequence satisfy a condition\r\n * if the predicate is specified.\r\n * @param source A sequence that contains elements to be counted.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns The number of elements in the input sequence.\r\n */\r\nexports.countAsync = async (source, predicate) => {\r\n    let count = 0;\r\n    for (const value of source) {\r\n        if (await predicate(value) === true) {\r\n            count++;\r\n        }\r\n    }\r\n    return count;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.distinct = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Returns distinct elements from a sequence by using the default or specified equality comparer to compare values.\r\n * @param source The sequence to remove duplicate elements from.\r\n * @param comparer An IEqualityComparer<T> to compare values. Optional. Defaults to Strict Equality Comparison.\r\n * @returns An IEnumerable<T> that contains distinct elements from the source sequence.\r\n */\r\nexports.distinct = (source, comparer = shared_1.StrictEqualityComparer) => {\r\n    function* iterator() {\r\n        const distinctElements = [];\r\n        for (const item of source) {\r\n            const foundItem = distinctElements.find((x) => comparer(x, item));\r\n            if (!foundItem) {\r\n                distinctElements.push(item);\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.distinctAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Returns distinct elements from a sequence by using the specified equality comparer to compare values.\r\n * @param source The sequence to remove duplicate elements from.\r\n * @param comparer An IAsyncEqualityComparer<T> to compare values.\r\n * @returns An IAsyncEnumerable<T> that contains distinct elements from the source sequence.\r\n */\r\nexports.distinctAsync = (source, comparer) => {\r\n    async function* iterator() {\r\n        const distinctElements = [];\r\n        outerLoop: for (const item of source) {\r\n            for (const distinctElement of distinctElements) {\r\n                const found = await comparer(distinctElement, item);\r\n                if (found) {\r\n                    continue outerLoop;\r\n                }\r\n            }\r\n            distinctElements.push(item);\r\n            yield item;\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.each = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Performs a specified action on each element of the Iterable<TSource>\r\n * @param source The source to iterate\r\n * @param action The action to take an each element\r\n * @returns A new IEnumerable<T> that executes the action lazily as you iterate.\r\n */\r\nexports.each = (source, action) => {\r\n    function* generator() {\r\n        for (const value of source) {\r\n            action(value);\r\n            yield value;\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(generator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.eachAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Performs a specified action on each element of the Iterable<TSource>\r\n * @param source The source to iterate\r\n * @param action The action to take an each element\r\n * @returns A new IAsyncEnumerable<T> that executes the action lazily as you iterate.\r\n */\r\nexports.eachAsync = (source, action) => {\r\n    async function* generator() {\r\n        for (const value of source) {\r\n            await action(value);\r\n            yield value;\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(generator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.elementAt = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the element at a specified index in a sequence.\r\n * @param source An IEnumerable<T> to return an element from.\r\n * @param index The zero-based index of the element to retrieve.\r\n * @throws {ArgumentOutOfRangeException}\r\n * index is less than 0 or greater than or equal to the number of elements in source.\r\n * @returns The element at the specified position in the source sequence.\r\n */\r\nexports.elementAt = (source, index) => {\r\n    if (index < 0) {\r\n        throw new shared_1.ArgumentOutOfRangeException(\"index\");\r\n    }\r\n    let i = 0;\r\n    for (const item of source) {\r\n        if (index === i++) {\r\n            return item;\r\n        }\r\n    }\r\n    throw new shared_1.ArgumentOutOfRangeException(\"index\");\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.elementAtOrDefault = void 0;\r\n/**\r\n * Returns the element at a specified index in a sequence or a default value if the index is out of range.\r\n * @param source An IEnumerable<T> to return an element from.\r\n * @param index The zero-based index of the element to retrieve.\r\n * @returns\r\n * null if the index is outside the bounds of the source sequence;\r\n * otherwise, the element at the specified position in the source sequence.\r\n */\r\nexports.elementAtOrDefault = (source, index) => {\r\n    let i = 0;\r\n    for (const item of source) {\r\n        if (index === i++) {\r\n            return item;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.except = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Produces the set difference of two sequences by using the comparer provided\r\n * or EqualityComparer to compare values.\r\n * @param first An IEnumerable<T> whose elements that are not also in second will be returned.\r\n * @param second An IEnumerable<T> whose elements that also occur in the first sequence\r\n * will cause those elements to be removed from the returned sequence.\r\n * @param comparer An IEqualityComparer<T> to compare values. Optional.\r\n * @returns A sequence that contains the set difference of the elements of two sequences.\r\n */\r\nexports.except = (first, second, comparer = shared_1.StrictEqualityComparer) => {\r\n    function* iterator() {\r\n        const secondArray = [...second];\r\n        for (const firstItem of first) {\r\n            let exists = false;\r\n            for (let j = 0; j < secondArray.length; j++) {\r\n                const secondItem = secondArray[j];\r\n                if (comparer(firstItem, secondItem) === true) {\r\n                    exists = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (exists === false) {\r\n                yield firstItem;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.exceptAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Produces the set difference of two sequences by using the comparer provided to compare values.\r\n * @param first An IEnumerable<T> whose elements that are not also in second will be returned.\r\n * @param second An IEnumerable<T> whose elements that also occur in the first sequence\r\n * will cause those elements to be removed from the returned sequence.\r\n * @param comparer An IAsyncEqualityComparer<T> to compare values.\r\n * @returns A sequence that contains the set difference of the elements of two sequences.\r\n */\r\nexports.exceptAsync = (first, second, comparer) => {\r\n    async function* iterator() {\r\n        const secondArray = [...second];\r\n        for (const firstItem of first) {\r\n            let exists = false;\r\n            for (let j = 0; j < secondArray.length; j++) {\r\n                const secondItem = secondArray[j];\r\n                if (await comparer(firstItem, secondItem) === true) {\r\n                    exists = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (exists === false) {\r\n                yield firstItem;\r\n            }\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.first = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns first element in sequence that satisfies predicate otherwise\r\n * returns the first element in the sequence.\r\n * @param source An Iterable<T> to return an element from.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @throws {InvalidOperationException} No elements in Iteration matching predicate\r\n * @returns The first element in the sequence\r\n * or the first element that passes the test in the specified predicate function.\r\n */\r\nexports.first = (source, predicate) => {\r\n    if (predicate) {\r\n        return first2(source, predicate);\r\n    }\r\n    else {\r\n        return first1(source);\r\n    }\r\n};\r\nconst first1 = (source) => {\r\n    // eslint-disable-next-line no-shadow\r\n    const first = source[Symbol.iterator]().next();\r\n    if (first.done === true) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return first.value;\r\n};\r\nconst first2 = (source, predicate) => {\r\n    for (const value of source) {\r\n        if (predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.firstAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the first element in a sequence that satisfies a specified condition.\r\n * @param source An Iterable<T> to return an element from.\r\n * @param predicate A function to test each element for a condition.\r\n * @throws {InvalidOperationException} No elements in Iteration matching predicate\r\n * @returns The first element in the sequence that passes the test in the specified predicate function.\r\n */\r\nexports.firstAsync = async (source, predicate) => {\r\n    for (const value of source) {\r\n        if (await predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.firstOrDefault = void 0;\r\n/**\r\n * Returns first element in sequence that satisfies predicate otherwise\r\n * returns the first element in the sequence. Returns null if no value found.\r\n * @param source An Iterable<T> to return an element from.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @returns The first element in the sequence\r\n * or the first element that passes the test in the specified predicate function.\r\n * Returns null if no value found.\r\n */\r\nexports.firstOrDefault = (source, predicate) => {\r\n    if (predicate) {\r\n        return firstOrDefault2(source, predicate);\r\n    }\r\n    else {\r\n        return firstOrDefault1(source);\r\n    }\r\n};\r\nconst firstOrDefault1 = (source) => {\r\n    const first = source[Symbol.iterator]().next();\r\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n    return first.value || null;\r\n};\r\nconst firstOrDefault2 = (source, predicate) => {\r\n    for (const value of source) {\r\n        if (predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.firstOrDefaultAsync = void 0;\r\n/**\r\n * Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.\r\n * @param source An Iterable<T> to return an element from.\r\n * @param predicate An async function to test each element for a condition.\r\n * @returns null if source is empty or if no element passes the test specified by predicate;\r\n * otherwise, the first element in source that passes the test specified by predicate.\r\n */\r\nasync function firstOrDefaultAsync(source, predicate) {\r\n    for (const value of source) {\r\n        if (await predicate(value) === true) {\r\n            return value;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.firstOrDefaultAsync = firstOrDefaultAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.groupBy = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\nconst groupByShared_1 = require(\"./groupByShared\");\r\nfunction groupBy(source, keySelector, comparer) {\r\n    let iterable;\r\n    if (comparer) {\r\n        iterable = groupByShared_1.groupBy_0(source, keySelector, comparer);\r\n    }\r\n    else {\r\n        iterable = groupByShared_1.groupBy_0_Simple(source, keySelector);\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterable);\r\n}\r\nexports.groupBy = groupBy;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.groupByAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\nconst Grouping_1 = require(\"../Grouping\");\r\nfunction groupByAsync(source, keySelector, comparer) {\r\n    if (comparer) {\r\n        return groupByAsync_0(source, keySelector, comparer);\r\n    }\r\n    else {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return groupByAsync_0_Simple(source, keySelector);\r\n    }\r\n}\r\nexports.groupByAsync = groupByAsync;\r\nfunction groupByAsync_0_Simple(source, keySelector) {\r\n    async function* iterator() {\r\n        const keyMap = {};\r\n        for (const value of source) {\r\n            const key = await keySelector(value);\r\n            const grouping = keyMap[key];\r\n            if (grouping) {\r\n                grouping.push(value);\r\n            }\r\n            else {\r\n                keyMap[key] = new Grouping_1.Grouping(key, value);\r\n            }\r\n        }\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const value in keyMap) {\r\n            yield keyMap[value];\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n}\r\nfunction groupByAsync_0(source, keySelector, comparer) {\r\n    async function* generate() {\r\n        const keyMap = new Array();\r\n        for (const value of source) {\r\n            const key = await keySelector(value);\r\n            let found = false;\r\n            for (let i = 0; i < keyMap.length; i++) {\r\n                const group = keyMap[i];\r\n                if (await comparer(group.key, key) === true) {\r\n                    group.push(value);\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === false) {\r\n                keyMap.push(new Grouping_1.Grouping(key, value));\r\n            }\r\n        }\r\n        for (const keyValue of keyMap) {\r\n            yield keyValue;\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(generate);\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.groupBy_1 = exports.groupBy_1_Simple = exports.groupBy_0_Simple = exports.groupBy_0 = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\nconst Grouping_1 = require(\"../Grouping\");\r\n/* eslint-disable jsdoc/require-returns */\r\n/* eslint-disable @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match */\r\n/**\r\n * Group and Iterable Based on a Generic Key and an equality comparer\r\n * @param source Iteration\r\n * @param keySelector Key Selector\r\n * @param comparer Key Comparer\r\n * @private\r\n */\r\nexports.groupBy_0 = (source, keySelector, comparer) => {\r\n    return function* generate() {\r\n        const keyMap = new Array();\r\n        for (const value of source) {\r\n            const key = keySelector(value);\r\n            let found = false;\r\n            for (let i = 0; i < keyMap.length; i++) {\r\n                const group = keyMap[i];\r\n                if (comparer(group.key, key)) {\r\n                    group.push(value);\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === false) {\r\n                keyMap.push(new Grouping_1.Grouping(key, value));\r\n            }\r\n        }\r\n        for (const keyValue of keyMap) {\r\n            yield keyValue;\r\n        }\r\n    };\r\n};\r\n/**\r\n * @private\r\n */\r\nexports.groupBy_0_Simple = (source, keySelector) => {\r\n    return function* iterator() {\r\n        const keyMap = {};\r\n        for (const value of source) {\r\n            const key = keySelector(value);\r\n            const grouping = keyMap[key];\r\n            if (grouping) {\r\n                grouping.push(value);\r\n            }\r\n            else {\r\n                keyMap[key] = new Grouping_1.Grouping(key, value);\r\n            }\r\n        }\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const value in keyMap) {\r\n            yield keyMap[value];\r\n        }\r\n    };\r\n};\r\n/**\r\n * @private\r\n */\r\nfunction groupBy_1_Simple(source, keySelector, elementSelector) {\r\n    function* generate() {\r\n        const keyMap = {};\r\n        for (const value of source) {\r\n            const key = keySelector(value);\r\n            const grouping = keyMap[key];\r\n            const element = elementSelector(value);\r\n            if (grouping) {\r\n                grouping.push(element);\r\n            }\r\n            else {\r\n                keyMap[key] = new Grouping_1.Grouping(key, element);\r\n            }\r\n        }\r\n        /* eslint-disable guard-for-in */\r\n        for (const value in keyMap) {\r\n            yield keyMap[value];\r\n        }\r\n        /* eslint-enable guard-for-in */\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(generate);\r\n}\r\nexports.groupBy_1_Simple = groupBy_1_Simple;\r\n/**\r\n * @private\r\n */\r\nfunction groupBy_1(source, keySelector, elementSelector, comparer) {\r\n    function* generate() {\r\n        const keyMap = new Array();\r\n        for (const value of source) {\r\n            const key = keySelector(value);\r\n            let found = false;\r\n            for (let i = 0; i < keyMap.length; i++) {\r\n                const group = keyMap[i];\r\n                if (comparer(group.key, key)) {\r\n                    group.push(elementSelector(value));\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (found === false) {\r\n                const element = elementSelector(value);\r\n                keyMap.push(new Grouping_1.Grouping(key, element));\r\n            }\r\n        }\r\n        for (const keyValue of keyMap) {\r\n            yield keyValue;\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(generate);\r\n}\r\nexports.groupBy_1 = groupBy_1;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.groupByWithSel = void 0;\r\nconst groupByShared_1 = require(\"./groupByShared\");\r\nfunction groupByWithSel(source, keySelector, elementSelector, comparer) {\r\n    if (comparer) {\r\n        return groupByShared_1.groupBy_1(source, keySelector, elementSelector, comparer);\r\n    }\r\n    else {\r\n        return groupByShared_1.groupBy_1_Simple(source, keySelector, elementSelector);\r\n    }\r\n}\r\nexports.groupByWithSel = groupByWithSel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.intersect = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Produces the set intersection of two sequences by using the specified IEqualityComparer<T> to compare values.\r\n * If no comparer is selected, uses the StrictEqualityComparer.\r\n * @param first An IEnumerable<T> whose distinct elements that also appear in second will be returned.\r\n * @param second An Iterable<T> whose distinct elements that also appear in the first sequence will be returned.\r\n * @param comparer An IEqualityComparer<T> to compare values. Optional.\r\n * @returns A sequence that contains the elements that form the set intersection of two sequences.\r\n */\r\nexports.intersect = (first, second, comparer = shared_1.StrictEqualityComparer) => {\r\n    function* iterator() {\r\n        const firstResults = [...first.distinct(comparer)];\r\n        if (firstResults.length === 0) {\r\n            return;\r\n        }\r\n        const secondResults = [...second];\r\n        for (let i = 0; i < firstResults.length; i++) {\r\n            const firstValue = firstResults[i];\r\n            for (let j = 0; j < secondResults.length; j++) {\r\n                const secondValue = secondResults[j];\r\n                if (comparer(firstValue, secondValue) === true) {\r\n                    yield firstValue;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.intersectAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Produces the set intersection of two sequences by using the specified IAsyncEqualityComparer<T> to compare values.\r\n * @param first An IEnumerable<T> whose distinct elements that also appear in second will be returned.\r\n * @param second An Iterable<T> whose distinct elements that also appear in the first sequence will be returned.\r\n * @param comparer An IAsyncEqualityComparer<T> to compare values.\r\n * @returns A sequence that contains the elements that form the set intersection of two sequences.\r\n */\r\nexports.intersectAsync = (first, second, comparer) => {\r\n    async function* iterator() {\r\n        const firstResults = [];\r\n        for await (const item of first.distinctAsync(comparer)) {\r\n            firstResults.push(item);\r\n        }\r\n        if (firstResults.length === 0) {\r\n            return;\r\n        }\r\n        const secondResults = [...second];\r\n        for (let i = 0; i < firstResults.length; i++) {\r\n            const firstValue = firstResults[i];\r\n            for (let j = 0; j < secondResults.length; j++) {\r\n                const secondValue = secondResults[j];\r\n                if (await comparer(firstValue, secondValue) === true) {\r\n                    yield firstValue;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.join = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n// TODO: join Async\r\n/**\r\n * Correlates the elements of two sequences based on matching keys.\r\n * A specified IEqualityComparer<T> is used to compare keys or the strict equality comparer.\r\n * @param outer The first sequence to join.\r\n * @param inner The sequence to join to the first sequence.\r\n * @param outerKeySelector A function to extract the join key from each element of the first sequence.\r\n * @param innerKeySelector A function to extract the join key from each element of the second sequence.\r\n * @param resultSelector A function to create a result element from two matching elements.\r\n * @param comparer An IEqualityComparer<T> to hash and compare keys. Optional.\r\n * @returns An IEnumerable<T> that has elements of type TResult that\r\n * are obtained by performing an inner join on two sequences.\r\n */\r\nexports.join = (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer = shared_1.StrictEqualityComparer) => {\r\n    function* iterator() {\r\n        const innerArray = [...inner];\r\n        for (const o of outer) {\r\n            const outerKey = outerKeySelector(o);\r\n            for (const i of innerArray) {\r\n                const innerKey = innerKeySelector(i);\r\n                if (comparer(outerKey, innerKey) === true) {\r\n                    yield resultSelector(o, i);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.last = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the last element of a sequence.\r\n * If predicate is specified, the last element of a sequence that satisfies a specified condition.\r\n * @param source An Iterable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @throws {InvalidOperationException} The source sequence is empty.\r\n * @returns The value at the last position in the source sequence\r\n * or the last element in the sequence that passes the test in the specified predicate function.\r\n */\r\nexports.last = (source, predicate) => {\r\n    if (predicate) {\r\n        return last2(source, predicate);\r\n    }\r\n    else {\r\n        return last1(source);\r\n    }\r\n};\r\nconst last1 = (source) => {\r\n    let lastItem;\r\n    for (const value of source) {\r\n        lastItem = value;\r\n    }\r\n    if (!lastItem) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return lastItem;\r\n};\r\nconst last2 = (source, predicate) => {\r\n    let lastItem;\r\n    for (const value of source) {\r\n        if (predicate(value) === true) {\r\n            lastItem = value;\r\n        }\r\n    }\r\n    if (!lastItem) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n    }\r\n    return lastItem;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.lastAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the last element of a sequence that satisfies a specified condition.\r\n * @param source An Iterable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition.\r\n * @throws {InvalidOperationException} The source sequence is empty.\r\n * @returns The last element in the sequence that passes the test in the specified predicate function.\r\n */\r\nexports.lastAsync = async (source, predicate) => {\r\n    let last;\r\n    for (const value of source) {\r\n        if (await predicate(value) === true) {\r\n            last = value;\r\n        }\r\n    }\r\n    if (!last) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n    }\r\n    return last;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.lastOrDefault = void 0;\r\n/**\r\n * Returns the last element of a sequence.\r\n * If predicate is specified, the last element of a sequence that satisfies a specified condition.\r\n * @param source An Iterable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition. Optional.\r\n * @returns The value at the last position in the source sequence\r\n * or the last element in the sequence that passes the test in the specified predicate function.\r\n */\r\nfunction lastOrDefault(source, predicate) {\r\n    if (predicate) {\r\n        return lastOrDefault2(source, predicate);\r\n    }\r\n    else {\r\n        return lastOrDefault1(source);\r\n    }\r\n}\r\nexports.lastOrDefault = lastOrDefault;\r\nconst lastOrDefault1 = (source) => {\r\n    let last = null;\r\n    for (const value of source) {\r\n        last = value;\r\n    }\r\n    return last;\r\n};\r\nconst lastOrDefault2 = (source, predicate) => {\r\n    let last = null;\r\n    for (const value of source) {\r\n        if (predicate(value) === true) {\r\n            last = value;\r\n        }\r\n    }\r\n    return last;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.lastOrDefaultAsync = void 0;\r\n/**\r\n * Returns the last element of a sequence that satisfies a specified condition.\r\n * @param source An Iterable<T> to return the last element of.\r\n * @param predicate A function to test each element for a condition.\r\n * @returns The last element in the sequence that passes the test in the specified predicate function.\r\n * Null if no elements.\r\n */\r\nexports.lastOrDefaultAsync = async (source, predicate) => {\r\n    let last = null;\r\n    for (const value of source) {\r\n        if (await predicate(value) === true) {\r\n            last = value;\r\n        }\r\n    }\r\n    return last;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.max = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nfunction max(source, selector) {\r\n    if (selector) {\r\n        return max2(source, selector);\r\n    }\r\n    else {\r\n        return max1(source);\r\n    }\r\n}\r\nexports.max = max;\r\nconst max1 = (source) => {\r\n    let maxItem = null;\r\n    for (const item of source) {\r\n        maxItem = Math.max(maxItem || Number.NEGATIVE_INFINITY, item);\r\n    }\r\n    if (maxItem === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return maxItem;\r\n    }\r\n};\r\nconst max2 = (source, selector) => {\r\n    let maxItem = null;\r\n    for (const item of source) {\r\n        maxItem = Math.max(maxItem || Number.NEGATIVE_INFINITY, selector(item));\r\n    }\r\n    if (maxItem === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return maxItem;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.maxAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Invokes an async transform function on each element of a sequence and returns the maximum value.\r\n * @param source A sequence of values to determine the maximum value of.\r\n * @param selector A transform function to apply to each element.\r\n * @throws {InvalidOperationException} source contains no elements.\r\n * @returns The maximum value in the sequence.\r\n */\r\nexports.maxAsync = async (source, selector) => {\r\n    let max = null;\r\n    for (const item of source) {\r\n        max = Math.max(max || Number.NEGATIVE_INFINITY, await selector(item));\r\n    }\r\n    if (max === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return max;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.min = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nfunction min(source, selector) {\r\n    if (selector) {\r\n        return min2(source, selector);\r\n    }\r\n    else {\r\n        return min1(source);\r\n    }\r\n}\r\nexports.min = min;\r\nconst min1 = (source) => {\r\n    let minItem = null;\r\n    for (const item of source) {\r\n        minItem = Math.min(minItem || Number.POSITIVE_INFINITY, item);\r\n    }\r\n    if (minItem === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return minItem;\r\n    }\r\n};\r\nconst min2 = (source, selector) => {\r\n    let minItem = null;\r\n    for (const item of source) {\r\n        minItem = Math.min(minItem || Number.POSITIVE_INFINITY, selector(item));\r\n    }\r\n    if (minItem === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return minItem;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.minAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Invokes a transform function on each element of a sequence and returns the minimum value.\r\n * @param source A sequence of values to determine the minimum value of.\r\n * @param selector A transform function to apply to each element.\r\n * @throws {InvalidOperationException} source contains no elements.\r\n * @returns The minimum value in the sequence.\r\n */\r\nexports.minAsync = async (source, selector) => {\r\n    let min = null;\r\n    for (const item of source) {\r\n        min = Math.min(min || Number.POSITIVE_INFINITY, await selector(item));\r\n    }\r\n    if (min === null) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    else {\r\n        return min;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ofType = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Applies a type filter to a source iteration\r\n * @param source Iteration to Filtery by Type\r\n * @param type Either value for typeof or a consturctor function\r\n * @returns Values that match the type string or are instance of type\r\n */\r\nexports.ofType = (source, type) => {\r\n    const typeCheck = typeof type === \"string\" ?\r\n        ((x) => typeof x === type) :\r\n        ((x) => x instanceof type);\r\n    function* iterator() {\r\n        for (const item of source) {\r\n            if (typeCheck(item)) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderBy = void 0;\r\nconst OrderedEnumerable_1 = require(\"../OrderedEnumerable\");\r\n/**\r\n * Sorts the elements of a sequence in ascending order by using a specified or default comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector A function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys. Optional.\r\n * @returns An IOrderedEnumerable<TElement> whose elements are sorted according to a key.\r\n */\r\nfunction orderBy(source, keySelector, comparer) {\r\n    return OrderedEnumerable_1.OrderedEnumerable.generate(source, keySelector, true, comparer);\r\n}\r\nexports.orderBy = orderBy;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderByAsync = void 0;\r\nconst OrderedEnumerable_1 = require(\"../OrderedEnumerable\");\r\n/**\r\n * Sorts the elements of a sequence in ascending order by using a specified comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector An async function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys.\r\n * @returns An IOrderedAsyncEnumerable<TElement> whose elements are sorted according to a key.\r\n */\r\nfunction orderByAsync(source, keySelector, comparer) {\r\n    return OrderedEnumerable_1.OrderedEnumerable.generateAsync(source, keySelector, true, comparer);\r\n}\r\nexports.orderByAsync = orderByAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderByDescending = void 0;\r\nconst OrderedEnumerable_1 = require(\"../OrderedEnumerable\");\r\n/**\r\n * Sorts the elements of a sequence in descending order by using a specified or default comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector A function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys. Optional.\r\n * @returns An IOrderedEnumerable<TElement> whose elements are sorted in descending order according to a key.\r\n */\r\nfunction orderByDescending(source, keySelector, comparer) {\r\n    return OrderedEnumerable_1.OrderedEnumerable.generate(source, keySelector, false, comparer);\r\n}\r\nexports.orderByDescending = orderByDescending;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.orderByDescendingAsync = void 0;\r\nconst OrderedEnumerable_1 = require(\"../OrderedEnumerable\");\r\n/**\r\n * Sorts the elements of a sequence in descending order by using a specified comparer.\r\n * @param source A sequence of values to order.\r\n * @param keySelector An async function to extract a key from an element.\r\n * @param comparer An IComparer<T> to compare keys.\r\n * @returns An IOrderedAsyncEnumerable<TElement> whose elements are sorted in descending order according to a key.\r\n */\r\nfunction orderByDescendingAsync(source, keySelector, comparer) {\r\n    return OrderedEnumerable_1.OrderedEnumerable.generateAsync(source, keySelector, false, comparer);\r\n}\r\nexports.orderByDescendingAsync = orderByDescendingAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.reverse = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Inverts the order of the elements in a sequence.\r\n * @param source A sequence of values to reverse.\r\n * @returns A sequence whose elements correspond to those of the input sequence in reverse order.\r\n */\r\nexports.reverse = (source) => {\r\n    function* iterator() {\r\n        for (const x of [...source].reverse()) {\r\n            yield x;\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.select = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Projects each element of a sequence into a new form.\r\n * @param source A sequence of values to invoke a transform function on.\r\n * @param selector A key of TSource.\r\n * @returns\r\n * An IEnumerable<T> whose elements are the result of getting the value from the key on each element of source.\r\n */\r\nfunction select(source, selector) {\r\n    if (typeof selector === \"function\") {\r\n        const { length } = selector;\r\n        if (length === 1) {\r\n            return select1(source, selector);\r\n        }\r\n        else {\r\n            return select2(source, selector);\r\n        }\r\n    }\r\n    else {\r\n        return select3(source, selector);\r\n    }\r\n}\r\nexports.select = select;\r\nconst select1 = (source, selector) => {\r\n    function* iterator() {\r\n        for (const value of source) {\r\n            yield selector(value);\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\nconst select2 = (source, selector) => {\r\n    function* iterator() {\r\n        let index = 0;\r\n        for (const value of source) {\r\n            yield selector(value, index);\r\n            index++;\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\nconst select3 = (source, key) => {\r\n    function* iterator() {\r\n        for (const value of source) {\r\n            yield value[key];\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.selectAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\nfunction selectAsync(source, selector) {\r\n    if (typeof selector === \"function\") {\r\n        if (selector.length === 1) {\r\n            return selectAsync1(source, selector);\r\n        }\r\n        else {\r\n            return selectAsync2(source, selector);\r\n        }\r\n    }\r\n    else {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return selectAsync3(source, selector);\r\n    }\r\n}\r\nexports.selectAsync = selectAsync;\r\nconst selectAsync1 = (source, selector) => {\r\n    async function* iterator() {\r\n        for (const value of source) {\r\n            yield selector(value);\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n};\r\nconst selectAsync2 = (source, selector) => {\r\n    async function* iterator() {\r\n        let index = 0;\r\n        for (const value of source) {\r\n            yield selector(value, index);\r\n            index++;\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n};\r\nconst selectAsync3 = (source, key) => {\r\n    async function* iterator() {\r\n        for (const value of source) {\r\n            yield value[key];\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.selectMany = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\nfunction selectMany(source, selector) {\r\n    if (typeof selector === \"function\") {\r\n        if (selector.length === 1) {\r\n            return selectMany1(source, selector);\r\n        }\r\n        else {\r\n            return selectMany2(source, selector);\r\n        }\r\n    }\r\n    else {\r\n        return selectMany3(source, selector);\r\n    }\r\n}\r\nexports.selectMany = selectMany;\r\nconst selectMany1 = (source, selector) => {\r\n    function* iterator() {\r\n        for (const value of source) {\r\n            for (const selectorValue of selector(value)) {\r\n                yield selectorValue;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\nconst selectMany2 = (source, selector) => {\r\n    function* iterator() {\r\n        let index = 0;\r\n        for (const value of source) {\r\n            for (const selectorValue of selector(value, index)) {\r\n                yield selectorValue;\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\nconst selectMany3 = (source, selector) => {\r\n    function* iterator() {\r\n        for (const value of source) {\r\n            for (const selectorValue of value[selector]) {\r\n                yield selectorValue;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.selectManyAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Projects each element of a sequence to an IAsyncEnumerable<T> and flattens the resulting sequences into one sequence.\r\n * @param source A sequence of values to project.\r\n * @param selector A transform function to apply to each element.\r\n * @returns An IAsyncEnumerable<T> whose elements are the result of invoking the\r\n * one-to-many transform function on each element of the input sequence.\r\n */\r\nfunction selectManyAsync(source, selector) {\r\n    if (selector.length === 1) {\r\n        return selectManyAsync1(source, selector);\r\n    }\r\n    else {\r\n        return selectManyAsync2(source, selector);\r\n    }\r\n}\r\nexports.selectManyAsync = selectManyAsync;\r\nconst selectManyAsync1 = (source, selector) => {\r\n    async function* generator() {\r\n        for (const value of source) {\r\n            const innerValues = await selector(value);\r\n            for (const innerValue of innerValues) {\r\n                yield innerValue;\r\n            }\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(generator);\r\n};\r\nconst selectManyAsync2 = (source, selector) => {\r\n    async function* generator() {\r\n        let index = 0;\r\n        for (const value of source) {\r\n            const innerValues = await selector(value, index);\r\n            for (const innerValue of innerValues) {\r\n                yield innerValue;\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(generator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sequenceEquals = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Determines whether or not two sequences are equal\r\n * @param first first iterable\r\n * @param second second iterable\r\n * @param comparer Compare function to use, by default is @see {StrictEqualityComparer}\r\n * @returns Whether or not the two iterables are equal\r\n */\r\nfunction sequenceEquals(first, second, comparer = shared_1.StrictEqualityComparer) {\r\n    const firstIterator = first[Symbol.iterator]();\r\n    const secondIterator = second[Symbol.iterator]();\r\n    let firstResult = firstIterator.next();\r\n    let secondResult = secondIterator.next();\r\n    while (!firstResult.done && !secondResult.done) {\r\n        if (!comparer(firstResult.value, secondResult.value)) {\r\n            return false;\r\n        }\r\n        firstResult = firstIterator.next();\r\n        secondResult = secondIterator.next();\r\n    }\r\n    return firstResult.done === true && secondResult.done === true;\r\n}\r\nexports.sequenceEquals = sequenceEquals;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sequenceEqualsAsync = void 0;\r\n/**\r\n * Compares two sequences to see if they are equal using a async comparer function.\r\n * @param first First Sequence\r\n * @param second Second Sequence\r\n * @param comparer Async Comparer\r\n * @returns Whether or not the two iterations are equal\r\n */\r\nasync function sequenceEqualsAsync(first, second, comparer) {\r\n    const firstIterator = first[Symbol.iterator]();\r\n    const secondIterator = second[Symbol.iterator]();\r\n    let firstResult = firstIterator.next();\r\n    let secondResult = secondIterator.next();\r\n    while (!firstResult.done && !secondResult.done) {\r\n        if (await comparer(firstResult.value, secondResult.value) === false) {\r\n            return false;\r\n        }\r\n        firstResult = firstIterator.next();\r\n        secondResult = secondIterator.next();\r\n    }\r\n    return firstResult.done === true && secondResult.done === true;\r\n}\r\nexports.sequenceEqualsAsync = sequenceEqualsAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.single = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the only element of a sequence that satisfies a specified condition (if specified),\r\n * and throws an exception if more than one such element exists.\r\n * @param source An Iterable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition. (Optional)\r\n * @throws {InvalidOperationException} No element satisfies the condition in predicate. OR\r\n * More than one element satisfies the condition in predicate. OR\r\n * The source sequence is empty.\r\n * @returns The single element of the input sequence that satisfies a condition.\r\n */\r\nexports.single = (source, predicate) => {\r\n    if (predicate) {\r\n        return single2(source, predicate);\r\n    }\r\n    else {\r\n        return single1(source);\r\n    }\r\n};\r\nconst single1 = (source) => {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for (const value of source) {\r\n        if (hasValue === true) {\r\n            throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n        }\r\n        else {\r\n            hasValue = true;\r\n            singleValue = value;\r\n        }\r\n    }\r\n    if (hasValue === false) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoElements);\r\n    }\r\n    return singleValue;\r\n};\r\nconst single2 = (source, predicate) => {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for (const value of source) {\r\n        if (predicate(value)) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneMatchingElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    if (hasValue === false) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n    }\r\n    return singleValue;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.singleAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the only element of a sequence that satisfies a specified condition,\r\n * and throws an exception if more than one such element exists.\r\n * @param source An Iterable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition.\r\n * @throws {InvalidOperationException}\r\n * No element satisfies the condition in predicate. OR\r\n * More than one element satisfies the condition in predicate. OR\r\n * The source sequence is empty.\r\n * @returns The single element of the input sequence that satisfies a condition.\r\n */\r\nexports.singleAsync = async (source, predicate) => {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for (const value of source) {\r\n        if (await predicate(value)) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneMatchingElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    if (hasValue === false) {\r\n        throw new shared_1.InvalidOperationException(shared_1.ErrorString.NoMatch);\r\n    }\r\n    return singleValue;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.singleOrDefault = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * If predicate is specified returns the only element of a sequence that satisfies a specified condition,\r\n * ootherwise returns the only element of a sequence. Returns a default value if no such element exists.\r\n * @param source An Iterable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition. Optional.\r\n * @throws {InvalidOperationException}\r\n * If predicate is specified more than one element satisfies the condition in predicate,\r\n * otherwise the input sequence contains more than one element.\r\n * @returns The single element of the input sequence that satisfies the condition,\r\n * or null if no such element is found.\r\n */\r\nexports.singleOrDefault = (source, predicate) => {\r\n    if (predicate) {\r\n        return singleOrDefault2(source, predicate);\r\n    }\r\n    else {\r\n        return singleOrDefault1(source);\r\n    }\r\n};\r\nconst singleOrDefault1 = (source) => {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for (const value of source) {\r\n        if (hasValue === true) {\r\n            throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n        }\r\n        else {\r\n            hasValue = true;\r\n            singleValue = value;\r\n        }\r\n    }\r\n    return singleValue;\r\n};\r\nconst singleOrDefault2 = (source, predicate) => {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for (const value of source) {\r\n        if (predicate(value)) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneMatchingElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    return singleValue;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.singleOrDefaultAsync = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\n/**\r\n * Returns the only element of a sequence that satisfies a specified condition.\r\n * Returns a default value if no such element exists.\r\n * @param source An Iterable<T> to return a single element from.\r\n * @param predicate A function to test an element for a condition. Optional.\r\n * @throws {InvalidOperationException}\r\n * If predicate is specified more than one element satisfies the condition in predicate,\r\n * otherwise the input sequence contains more than one element.\r\n * @returns The single element of the input sequence that satisfies the condition,\r\n * or null if no such element is found.\r\n */\r\nexports.singleOrDefaultAsync = async (source, predicate) => {\r\n    let hasValue = false;\r\n    let singleValue = null;\r\n    for (const value of source) {\r\n        if (await predicate(value)) {\r\n            if (hasValue === true) {\r\n                throw new shared_1.InvalidOperationException(shared_1.ErrorString.MoreThanOneElement);\r\n            }\r\n            else {\r\n                hasValue = true;\r\n                singleValue = value;\r\n            }\r\n        }\r\n    }\r\n    return singleValue;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.skip = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Bypasses a specified number of elements in a sequence and then returns the remaining elements.\r\n * @param source An Iterable<T> to return elements from.\r\n * @param count The number of elements to skip before returning the remaining elements.\r\n * @returns An IEnumerable<T> that contains the elements that occur after the specified index in the input sequence.\r\n */\r\nexports.skip = (source, count) => {\r\n    function* iterator() {\r\n        let i = 0;\r\n        for (const item of source) {\r\n            if (i++ >= count) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.skipWhile = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source An Iterable<T> to return elements from.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IEnumerable<T> that contains the elements from the input sequence starting at the first element\r\n * in the linear series that does not pass the test specified by predicate.\r\n */\r\nexports.skipWhile = (source, predicate) => {\r\n    if (predicate.length === 1) {\r\n        return skipWhile1(source, predicate);\r\n    }\r\n    else {\r\n        return skipWhile2(source, predicate);\r\n    }\r\n};\r\nconst skipWhile1 = (source, predicate) => {\r\n    function* iterator() {\r\n        let skip = true;\r\n        for (const item of source) {\r\n            if (skip === false) {\r\n                yield item;\r\n            }\r\n            else if (predicate(item) === false) {\r\n                skip = false;\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\nconst skipWhile2 = (source, predicate) => {\r\n    function* iterator() {\r\n        let index = 0;\r\n        let skip = true;\r\n        for (const item of source) {\r\n            if (skip === false) {\r\n                yield item;\r\n            }\r\n            else if (predicate(item, index) === false) {\r\n                skip = false;\r\n                yield item;\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.skipWhileAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source An Iterable<T> to return elements from.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IAsyncEnumerable<T> that contains the elements from the input sequence starting\r\n * at the first element in the linear series that does not pass the test specified by predicate.\r\n */\r\nexports.skipWhileAsync = (source, predicate) => {\r\n    if (predicate.length === 1) {\r\n        return skipWhileAsync1(source, predicate);\r\n    }\r\n    else {\r\n        return skipWhileAsync2(source, predicate);\r\n    }\r\n};\r\nconst skipWhileAsync1 = (source, predicate) => {\r\n    async function* iterator() {\r\n        let skip = true;\r\n        for (const item of source) {\r\n            if (skip === false) {\r\n                yield item;\r\n            }\r\n            else if (await predicate(item) === false) {\r\n                skip = false;\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n};\r\nconst skipWhileAsync2 = (source, predicate) => {\r\n    async function* iterator() {\r\n        let index = 0;\r\n        let skip = true;\r\n        for (const item of source) {\r\n            if (skip === false) {\r\n                yield item;\r\n            }\r\n            else if (await predicate(item, index) === false) {\r\n                skip = false;\r\n                yield item;\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sum = void 0;\r\nfunction sum(source, selector) {\r\n    if (selector) {\r\n        return sum2(source, selector);\r\n    }\r\n    else {\r\n        return sum1(source);\r\n    }\r\n}\r\nexports.sum = sum;\r\nconst sum1 = (source) => {\r\n    let total = 0;\r\n    for (const value of source) {\r\n        total += value;\r\n    }\r\n    return total;\r\n};\r\nconst sum2 = (source, selector) => {\r\n    let total = 0;\r\n    for (const value of source) {\r\n        total += selector(value);\r\n    }\r\n    return total;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sumAsync = void 0;\r\n/**\r\n * Computes the sum of the sequence of numeric values that are obtained by invoking a transform function\r\n * on each element of the input sequence.\r\n * @param source A sequence of values that are used to calculate a sum.\r\n * @param selector A transform function to apply to each element.\r\n * @returns The sum of the projected values.\r\n */\r\nexports.sumAsync = async (source, selector) => {\r\n    let sum = 0;\r\n    for (const value of source) {\r\n        sum += await selector(value);\r\n    }\r\n    return sum;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.take = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Returns a specified number of contiguous elements from the start of a sequence.\r\n * @param source The sequence to return elements from.\r\n * @param amount The number of elements to return.\r\n * @returns An IEnumerable<T> that contains the specified number of elements from the start of the input sequence.\r\n */\r\nexports.take = (source, amount) => {\r\n    function* iterator() {\r\n        // negative amounts should yield empty\r\n        let amountLeft = amount > 0 ? amount : 0;\r\n        for (const item of source) {\r\n            if (amountLeft-- === 0) {\r\n                break;\r\n            }\r\n            else {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.takeWhile = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Returns elements from a sequence as long as a specified condition is true.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source The sequence to return elements from.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IEnumerable<T> that contains elements from the input sequence\r\n * that occur before the element at which the test no longer passes.\r\n */\r\nexports.takeWhile = (source, predicate) => {\r\n    if (predicate.length === 1) {\r\n        return takeWhile1(source, predicate);\r\n    }\r\n    else {\r\n        return takeWhile2(source, predicate);\r\n    }\r\n};\r\nconst takeWhile1 = (source, predicate) => {\r\n    /**\r\n     * @internal\r\n     */\r\n    function* iterator() {\r\n        for (const item of source) {\r\n            if (predicate(item)) {\r\n                yield item;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\nconst takeWhile2 = (source, predicate) => {\r\n    function* iterator() {\r\n        let index = 0;\r\n        for (const item of source) {\r\n            if (predicate(item, index++)) {\r\n                yield item;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.takeWhileAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Returns elements from a sequence as long as a specified condition is true.\r\n * The element's index is used in the logic of the predicate function.\r\n * @param source The sequence to return elements from.\r\n * @param predicate A async function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IAsyncEnumerable<T> that contains elements from the input sequence\r\n * that occur before the element at which the test no longer passes.\r\n */\r\nfunction takeWhileAsync(source, predicate) {\r\n    if (predicate.length === 1) {\r\n        return takeWhileAsync1(source, predicate);\r\n    }\r\n    else {\r\n        return takeWhileAsync2(source, predicate);\r\n    }\r\n}\r\nexports.takeWhileAsync = takeWhileAsync;\r\nconst takeWhileAsync1 = (source, predicate) => {\r\n    async function* iterator() {\r\n        for (const item of source) {\r\n            if (await predicate(item)) {\r\n                yield item;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n};\r\nconst takeWhileAsync2 = (source, predicate) => {\r\n    async function* iterator() {\r\n        let index = 0;\r\n        for (const item of source) {\r\n            if (await predicate(item, index++)) {\r\n                yield item;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toArray = void 0;\r\n/**\r\n * Creates an array from a Iterable<T>.\r\n * @param source An Iterable<T> to create an array from.\r\n * @returns An array of elements\r\n */\r\nexports.toArray = (source) => {\r\n    return [...source];\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toMap = void 0;\r\n/**\r\n * Converts an Iterable<V> to a Map<K, V[]>.\r\n * @param source An Iterable<V> to convert.\r\n * @param selector A function to serve as a key selector.\r\n * @returns Map<K, V[]>\r\n */\r\nexports.toMap = (source, selector) => {\r\n    const map = new Map();\r\n    for (const value of source) {\r\n        const key = selector(value);\r\n        const array = map.get(key);\r\n        if (array === undefined) {\r\n            map.set(key, [value]);\r\n        }\r\n        else {\r\n            array.push(value);\r\n        }\r\n    }\r\n    return map;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toMapAsync = void 0;\r\n/**\r\n * Converts an Iterable<V> to a Map<K, V[]>.\r\n * @param source An Iterable<V> to convert.\r\n * @param selector An async function to serve as a key selector.\r\n * @returns A promise for Map<K, V[]>\r\n */\r\nasync function toMapAsync(source, selector) {\r\n    const map = new Map();\r\n    for (const value of source) {\r\n        const key = await selector(value);\r\n        const array = map.get(key);\r\n        if (array === undefined) {\r\n            map.set(key, [value]);\r\n        }\r\n        else {\r\n            array.push(value);\r\n        }\r\n    }\r\n    return map;\r\n}\r\nexports.toMapAsync = toMapAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toSet = void 0;\r\n/**\r\n * Converts the Itertion to a Set\r\n * @param source Iteration\r\n * @returns Set containing the iteration values\r\n */\r\nexports.toSet = (source) => {\r\n    return new Set(source);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.union = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Produces the set union of two sequences by using scrict equality comparison or a specified IEqualityComparer<T>.\r\n * @param first An Iterable<T> whose distinct elements form the first set for the union.\r\n * @param second An Iterable<T> whose distinct elements form the second set for the union.\r\n * @param comparer The IEqualityComparer<T> to compare values. Optional.\r\n * @returns An IEnumerable<T> that contains the elements from both input sequences, excluding duplicates.\r\n */\r\nexports.union = (first, second, comparer) => {\r\n    if (comparer) {\r\n        return union2(first, second, comparer);\r\n    }\r\n    else {\r\n        return union1(first, second);\r\n    }\r\n};\r\nconst union1 = (first, second) => {\r\n    function* iterator() {\r\n        const set = new Set();\r\n        for (const item of first) {\r\n            if (set.has(item) === false) {\r\n                yield item;\r\n                set.add(item);\r\n            }\r\n        }\r\n        for (const item of second) {\r\n            if (set.has(item) === false) {\r\n                yield item;\r\n                set.add(item);\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\nconst union2 = (first, second, comparer) => {\r\n    function* iterator() {\r\n        const result = [];\r\n        for (const source of [first, second]) {\r\n            for (const value of source) {\r\n                let exists = false;\r\n                for (const resultValue of result) {\r\n                    if (comparer(value, resultValue) === true) {\r\n                        exists = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (exists === false) {\r\n                    yield value;\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.unionAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Produces the set union of two sequences by using a specified IAsyncEqualityComparer<T>.\r\n * @param first An Iterable<T> whose distinct elements form the first set for the union.\r\n * @param second An Iterable<T> whose distinct elements form the second set for the union.\r\n * @param comparer The IAsyncEqualityComparer<T> to compare values.\r\n * @returns An IAsyncEnumerable<T> that contains the elements from both input sequences, excluding duplicates.\r\n */\r\nexports.unionAsync = (first, second, comparer) => {\r\n    async function* iterator() {\r\n        const result = [];\r\n        for (const source of [first, second]) {\r\n            for (const value of source) {\r\n                let exists = false;\r\n                for (const resultValue of result) {\r\n                    if (await comparer(value, resultValue) === true) {\r\n                        exists = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (exists === false) {\r\n                    yield value;\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.where = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Filters a sequence of values based on a predicate.\r\n * Each element's index is used in the logic of the predicate function.\r\n * @param source An Iterable<T> to filter.\r\n * @param predicate A function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IEnumerable<T> that contains elements from the input sequence that satisfy the condition.\r\n */\r\nexports.where = (source, predicate) => {\r\n    if (predicate.length === 1) {\r\n        return where1(source, predicate);\r\n    }\r\n    else {\r\n        return where2(source, predicate);\r\n    }\r\n};\r\nconst where1 = (source, predicate) => {\r\n    function* iterator() {\r\n        for (const item of source) {\r\n            if (predicate(item) === true) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\nconst where2 = (source, predicate) => {\r\n    function* iterator() {\r\n        let i = 0;\r\n        for (const item of source) {\r\n            if (predicate(item, i++) === true) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.whereAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Filters a sequence of values based on a predicate.\r\n * Each element's index is used in the logic of the predicate function.\r\n * @param source An Iterable<T> to filter.\r\n * @param predicate A async function to test each source element for a condition;\r\n * the second parameter of the function represents the index of the source element.\r\n * @returns An IAsyncEnumerable<T> that contains elements from the input sequence that satisfy the condition.\r\n */\r\nexports.whereAsync = (source, predicate) => {\r\n    if (predicate.length === 1) {\r\n        return whereAsync1(source, predicate);\r\n    }\r\n    else {\r\n        return whereAsync2(source, predicate);\r\n    }\r\n};\r\nconst whereAsync1 = (source, predicate) => {\r\n    async function* generator() {\r\n        for (const item of source) {\r\n            if (await predicate(item) === true) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(generator);\r\n};\r\nconst whereAsync2 = (source, predicate) => {\r\n    async function* generator() {\r\n        let i = 0;\r\n        for (const item of source) {\r\n            if (await predicate(item, i++) === true) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(generator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.zip = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\nfunction zip(source, second, resultSelector) {\r\n    if (resultSelector) {\r\n        return zip2(source, second, resultSelector);\r\n    }\r\n    else {\r\n        return zip1(source, second);\r\n    }\r\n}\r\nexports.zip = zip;\r\nconst zip1 = (source, second) => {\r\n    function* iterator() {\r\n        const firstIterator = source[Symbol.iterator]();\r\n        const secondIterator = second[Symbol.iterator]();\r\n        while (true) {\r\n            const a = firstIterator.next();\r\n            const b = secondIterator.next();\r\n            if (a.done && b.done) {\r\n                break;\r\n            }\r\n            else {\r\n                yield [a.value, b.value];\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\nconst zip2 = (source, second, resultSelector) => {\r\n    function* iterator() {\r\n        const firstIterator = source[Symbol.iterator]();\r\n        const secondIterator = second[Symbol.iterator]();\r\n        while (true) {\r\n            const a = firstIterator.next();\r\n            const b = secondIterator.next();\r\n            if (a.done && b.done) {\r\n                break;\r\n            }\r\n            else {\r\n                yield resultSelector(a.value, b.value);\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.zipAsync = void 0;\r\nconst fromAsync_1 = require(\"../../async/static/fromAsync\");\r\n/**\r\n * Applies a specified async function to the corresponding elements of two sequences,\r\n * producing a sequence of the results.\r\n * @param first The first sequence to merge.\r\n * @param second The second sequence to merge.\r\n * @param resultSelector An async function that specifies how to merge the elements from the two sequences.\r\n * @returns An IAsyncEnumerable<T> that contains merged elements of two input sequences.\r\n */\r\nexports.zipAsync = (first, second, resultSelector) => {\r\n    async function* generator() {\r\n        const firstIterator = first[Symbol.iterator]();\r\n        const secondIterator = second[Symbol.iterator]();\r\n        while (true) {\r\n            const a = firstIterator.next();\r\n            const b = secondIterator.next();\r\n            if (a.done && b.done) {\r\n                break;\r\n            }\r\n            else {\r\n                yield resultSelector(a.value, b.value);\r\n            }\r\n        }\r\n    }\r\n    return fromAsync_1.fromAsync(generator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isEnumerable = void 0;\r\nconst ArrayEnumerable_1 = require(\"./ArrayEnumerable\");\r\nconst BasicEnumerable_1 = require(\"./BasicEnumerable\");\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access */\r\n/**\r\n * Determine if a source is a IEnumerable\r\n * @param source Any Value\r\n * @returns Whether or not this is an Enumerable type\r\n */\r\nexports.isEnumerable = (source) => {\r\n    if (!source) {\r\n        return false;\r\n    }\r\n    if (source instanceof BasicEnumerable_1.BasicEnumerable) {\r\n        return true;\r\n    }\r\n    if (source instanceof ArrayEnumerable_1.ArrayEnumerable) {\r\n        return true;\r\n    }\r\n    if (typeof source[Symbol.iterator] !== \"function\") {\r\n        return false;\r\n    }\r\n    const propertyNames = Object.getOwnPropertyNames(BasicEnumerable_1.BasicEnumerable.prototype)\r\n        .filter((v) => v !== \"constructor\");\r\n    const methods = source.prototype || source;\r\n    for (const prop of propertyNames) {\r\n        if (typeof methods[prop] !== \"function\") {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.empty = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Returns an empty IEnumerable<T> that has the specified type argument.\r\n * @returns An empty IEnumerable<T> whose type argument is TResult.\r\n */\r\nexports.empty = () => {\r\n    const iterator = function* () {\r\n        for (const x of []) {\r\n            yield x;\r\n        }\r\n    };\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.enumerateObject = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Iterates through the object\r\n * @param source Source Object\r\n * @returns IEnumerabe<[TKey, TValue]> of Key Value pairs\r\n */\r\nexports.enumerateObject = (source) => {\r\n    function* iterable() {\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const key in source) {\r\n            yield [key, source[key]];\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterable);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.flatten = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\nfunction flatten(source, shallow) {\r\n    // eslint-disable-next-line no-shadow\r\n    function* iterator(source) {\r\n        for (const item of source) {\r\n            // JS string is an Iterable.\r\n            // We exclude it from being flattened\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n            if (item[Symbol.iterator] !== undefined && typeof item !== \"string\") {\r\n                yield* shallow ? item : iterator(item);\r\n            }\r\n            else {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(() => iterator(source));\r\n}\r\nexports.flatten = flatten;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.from = void 0;\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\nfunction from(source) {\r\n    const isArrayLike = (x) => {\r\n        return Array.isArray(x) || (typeof x === \"object\" && typeof x.length === \"number\" && (x.length === 0 || 0 in x));\r\n    };\r\n    const isIterableType = (x) => typeof x === \"function\";\r\n    if (isArrayLike(source)) {\r\n        const generator = function* () {\r\n            for (let i = 0; i < source.length; i++) {\r\n                yield source[i];\r\n            }\r\n        };\r\n        return new BasicEnumerable_1.BasicEnumerable(generator);\r\n    }\r\n    if (isIterableType(source)) {\r\n        return new BasicEnumerable_1.BasicEnumerable(source);\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(function* () {\r\n        for (const val of source) {\r\n            yield val;\r\n        }\r\n    });\r\n}\r\nexports.from = from;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar empty_1 = require(\"./empty\");\r\nObject.defineProperty(exports, \"empty\", { enumerable: true, get: function () { return empty_1.empty; } });\r\nvar enumerateObject_1 = require(\"./enumerateObject\");\r\nObject.defineProperty(exports, \"enumerateObject\", { enumerable: true, get: function () { return enumerateObject_1.enumerateObject; } });\r\nvar flatten_1 = require(\"./flatten\");\r\nObject.defineProperty(exports, \"flatten\", { enumerable: true, get: function () { return flatten_1.flatten; } });\r\nvar from_1 = require(\"./from\");\r\nObject.defineProperty(exports, \"from\", { enumerable: true, get: function () { return from_1.from; } });\r\nvar partition_1 = require(\"./partition\");\r\nObject.defineProperty(exports, \"partition\", { enumerable: true, get: function () { return partition_1.partition; } });\r\nvar range_1 = require(\"./range\");\r\nObject.defineProperty(exports, \"range\", { enumerable: true, get: function () { return range_1.range; } });\r\nvar repeat_1 = require(\"./repeat\");\r\nObject.defineProperty(exports, \"repeat\", { enumerable: true, get: function () { return repeat_1.repeat; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.partition = void 0;\r\n/**\r\n * Paritions the Iterable<T> into a tuple of failing and passing arrays\r\n * based on the predicate.\r\n * @param source Elements to Partition\r\n * @param predicate Pass / Fail condition\r\n * @returns [pass, fail]\r\n */\r\nexports.partition = (source, predicate) => {\r\n    const fail = [];\r\n    const pass = [];\r\n    for (const value of source) {\r\n        if (predicate(value) === true) {\r\n            pass.push(value);\r\n        }\r\n        else {\r\n            fail.push(value);\r\n        }\r\n    }\r\n    return [pass, fail];\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.range = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Generates a sequence of integral numbers within a specified range.\r\n * @param start The value of the first integer in the sequence.\r\n * @param count The number of sequential integers to generate.\r\n * @throws {ArgumentOutOfRangeException} Start is Less than 0\r\n * OR start + count -1 is larger than MAX_SAFE_INTEGER.\r\n * @returns An IEnumerable<number> that contains a range of sequential integral numbers.\r\n */\r\nexports.range = (start, count) => {\r\n    if (start < 0 || (start + count - 1) > Number.MAX_SAFE_INTEGER) {\r\n        throw new shared_1.ArgumentOutOfRangeException(`start`);\r\n    }\r\n    function* iterator() {\r\n        const max = start + count;\r\n        for (let i = start; i < max; i++) {\r\n            yield i;\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.repeat = void 0;\r\nconst shared_1 = require(\"../../shared\");\r\nconst BasicEnumerable_1 = require(\"../BasicEnumerable\");\r\n/**\r\n * Generates a sequence that contains one repeated value.\r\n * @param element The value to be repeated.\r\n * @param count The number of times to repeat the value in the generated sequence.\r\n * @returns An IEnumerable<T> that contains a repeated value.\r\n */\r\nexports.repeat = (element, count) => {\r\n    if (count < 0) {\r\n        throw new shared_1.ArgumentOutOfRangeException(`count`);\r\n    }\r\n    function* iterator() {\r\n        for (let i = 0; i < count; i++) {\r\n            yield element;\r\n        }\r\n    }\r\n    return new BasicEnumerable_1.BasicEnumerable(iterator);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n});\r\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction getUserAgent() {\n  if (typeof navigator === \"object\" && \"userAgent\" in navigator) {\n    return navigator.userAgent;\n  }\n\n  if (typeof process === \"object\" && \"version\" in process) {\n    return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;\n  }\n\n  return \"<environment undetectable>\";\n}\n\nexports.getUserAgent = getUserAgent;\n//# sourceMappingURL=index.js.map\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseStringPromise = bind(this.parseStringPromise, this);\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    Parser.prototype.parseStringPromise = function(str) {\n      return new Promise((function(_this) {\n        return function(resolve, reject) {\n          return _this.parseString(str, function(err, value) {\n            if (err) {\n              return reject(err);\n            } else {\n              return resolve(value);\n            }\n          });\n        };\n      })(this));\n    };\n\n    return Parser;\n\n  })(events);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n  exports.parseStringPromise = function(str, a) {\n    var options, parser;\n    if (typeof a === 'object') {\n      options = a;\n    }\n    parser = new exports.Parser(options);\n    return parser.parseStringPromise(str);\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n  exports.parseStringPromise = parser.parseStringPromise;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Disconnected: 1,\n    Preceding: 2,\n    Following: 4,\n    Contains: 8,\n    ContainedBy: 16,\n    ImplementationSpecific: 32\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Element: 1,\n    Attribute: 2,\n    Text: 3,\n    CData: 4,\n    EntityReference: 5,\n    EntityDeclaration: 6,\n    ProcessingInstruction: 7,\n    Comment: 8,\n    Document: 9,\n    DocType: 10,\n    DocumentFragment: 11,\n    NotationDeclaration: 12,\n    Declaration: 201,\n    Raw: 202,\n    AttributeDeclaration: 203,\n    ElementDeclaration: 204,\n    Dummy: 205\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  getValue = function(obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n  module.exports.getValue = getValue;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    None: 0,\n    OpenTag: 1,\n    InsideTag: 2,\n    CloseTag: 3\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLNode;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.value = this.stringify.attValue(value);\n      this.type = NodeType.Attribute;\n      this.isId = false;\n      this.schemaTypeInfo = null;\n    }\n\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function() {\n        return true;\n      }\n    });\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLAttribute.prototype.debugInfo = function(name) {\n      name = name || this.name;\n      if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else {\n        return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLAttribute.prototype.isEqualNode = function(node) {\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.value !== this.value) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCData, XMLCharacterData,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLCData;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCharacterData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCharacterData = (function(superClass) {\n    extend(XMLCharacterData, superClass);\n\n    function XMLCharacterData(parent) {\n      XMLCharacterData.__super__.constructor.call(this, parent);\n      this.value = '';\n    }\n\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function() {\n        return this.value.length;\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    XMLCharacterData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCharacterData.prototype.substringData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.appendData = function(arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.insertData = function(offset, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.deleteData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.replaceData = function(offset, count, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.isEqualNode = function(node) {\n      if (!XMLCharacterData.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.data !== this.data) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLCharacterData;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLComment,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.name = \"#comment\";\n      this.type = NodeType.Comment;\n      this.value = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.comment(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLComment;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n\n  XMLDOMStringList = require('./XMLDOMStringList');\n\n  module.exports = XMLDOMConfiguration = (function() {\n    function XMLDOMConfiguration() {\n      var clonedSelf;\n      this.defaultParams = {\n        \"canonical-form\": false,\n        \"cdata-sections\": false,\n        \"comments\": false,\n        \"datatype-normalization\": false,\n        \"element-content-whitespace\": true,\n        \"entities\": true,\n        \"error-handler\": new XMLDOMErrorHandler(),\n        \"infoset\": true,\n        \"validate-if-schema\": false,\n        \"namespaces\": true,\n        \"namespace-declarations\": true,\n        \"normalize-characters\": false,\n        \"schema-location\": '',\n        \"schema-type\": '',\n        \"split-cdata-sections\": true,\n        \"validate\": false,\n        \"well-formed\": true\n      };\n      this.params = clonedSelf = Object.create(this.defaultParams);\n    }\n\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n\n    XMLDOMConfiguration.prototype.getParameter = function(name) {\n      if (this.params.hasOwnProperty(name)) {\n        return this.params[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLDOMConfiguration.prototype.canSetParameter = function(name, value) {\n      return true;\n    };\n\n    XMLDOMConfiguration.prototype.setParameter = function(name, value) {\n      if (value != null) {\n        return this.params[name] = value;\n      } else {\n        return delete this.params[name];\n      }\n    };\n\n    return XMLDOMConfiguration;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMErrorHandler;\n\n  module.exports = XMLDOMErrorHandler = (function() {\n    function XMLDOMErrorHandler() {}\n\n    XMLDOMErrorHandler.prototype.handleError = function(error) {\n      throw new Error(error);\n    };\n\n    return XMLDOMErrorHandler;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMImplementation;\n\n  module.exports = XMLDOMImplementation = (function() {\n    function XMLDOMImplementation() {}\n\n    XMLDOMImplementation.prototype.hasFeature = function(feature, version) {\n      return true;\n    };\n\n    XMLDOMImplementation.prototype.createDocumentType = function(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createDocument = function(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createHTMLDocument = function(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLDOMImplementation;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMStringList;\n\n  module.exports = XMLDOMStringList = (function() {\n    function XMLDOMStringList(arr) {\n      this.arr = arr || [];\n    }\n\n    Object.defineProperty(XMLDOMStringList.prototype, 'length', {\n      get: function() {\n        return this.arr.length;\n      }\n    });\n\n    XMLDOMStringList.prototype.item = function(index) {\n      return this.arr[index] || null;\n    };\n\n    XMLDOMStringList.prototype.contains = function(str) {\n      return this.arr.indexOf(str) !== -1;\n    };\n\n    return XMLDOMStringList;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      this.elementName = this.stringify.name(elementName);\n      this.type = NodeType.AttributeDeclaration;\n      this.attributeName = this.stringify.name(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      if (defaultValue) {\n        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      }\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n      }\n      if (value == null) {\n        throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.name(name);\n      this.type = NodeType.EntityDeclaration;\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n        this.internal = true;\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n        }\n        this.internal = false;\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n        }\n      }\n    }\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.NotationDeclaration;\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var child, i, len, ref, ref1, ref2;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.type = NodeType.DocType;\n      if (parent.children) {\n        ref = parent.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.Element) {\n            this.name = child.name;\n            break;\n          }\n        }\n      }\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref1 = pubID, pubID = ref1.pubID, sysID = ref1.sysID;\n      }\n      if (sysID == null) {\n        ref2 = [pubID, sysID], sysID = ref2[0], pubID = ref2[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    XMLDocType.prototype.isEqualNode = function(node) {\n      if (!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.name !== this.name) {\n        return false;\n      }\n      if (node.publicId !== this.publicId) {\n        return false;\n      }\n      if (node.systemId !== this.systemId) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDOMConfiguration = require('./XMLDOMConfiguration');\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      this.name = \"#document\";\n      this.type = NodeType.Document;\n      this.documentURI = null;\n      this.domConfig = new XMLDOMConfiguration();\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n    }\n\n    Object.defineProperty(XMLDocument.prototype, 'implementation', {\n      value: new XMLDOMImplementation()\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'doctype', {\n      get: function() {\n        var child, i, len, ref;\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.DocType) {\n            return child;\n          }\n        }\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'documentElement', {\n      get: function() {\n        return this.rootObject || null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {\n      get: function() {\n        return false;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].encoding;\n        } else {\n          return null;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].standalone === 'yes';\n        } else {\n          return false;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].version;\n        } else {\n          return \"1.0\";\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'URL', {\n      get: function() {\n        return this.documentURI;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'origin', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'compatMode', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'characterSet', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'contentType', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      writerOptions = {};\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer;\n      }\n      return writer.document(this, writer.filterOptions(writerOptions));\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.document(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocument.prototype.createElement = function(tagName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createDocumentFragment = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTextNode = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createComment = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createCDATASection = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createProcessingInstruction = function(target, data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttribute = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEntityReference = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.importNode = function(importedNode, deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createElementNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttributeNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementById = function(elementId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.adoptNode = function(source) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.normalizeDocument = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.renameNode = function(node, namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEvent = function(eventInterface) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createRange = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createNodeIterator = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTreeWalker = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n\n  NodeType = require('./NodeType');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.createChildNode = function(node) {\n      var att, attName, attributes, child, i, len, ref1, ref2;\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n        case NodeType.Element:\n          attributes = {};\n          ref1 = node.attribs;\n          for (attName in ref1) {\n            if (!hasProp.call(ref1, attName)) continue;\n            att = ref1[attName];\n            attributes[attName] = att.value;\n          }\n          this.node(node.name, attributes);\n          break;\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n      ref2 = node.children;\n      for (i = 0, len = ref2.length; i < len; i++) {\n        child = ref2[i];\n        this.createChildNode(child);\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dummy = function() {\n      return this;\n    };\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n      this.openCurrent();\n      name = getValue(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref1, root;\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement.apply(this, arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref1 = root.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            this.createChildNode(child);\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      var att, chunk, name, ref1;\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n        chunk = '';\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref1 = node.attribs;\n          for (name in ref1) {\n            if (!hasProp.call(ref1, name)) continue;\n            att = ref1[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag;\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      var chunk;\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.debugInfo = function(name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDummy, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDummy = (function(superClass) {\n    extend(XMLDummy, superClass);\n\n    function XMLDummy(parent) {\n      XMLDummy.__super__.constructor.call(this, parent);\n      this.type = NodeType.Dummy;\n    }\n\n    XMLDummy.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLDummy.prototype.toString = function(options) {\n      return '';\n    };\n\n    return XMLDummy;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLElement, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      var child, j, len, ref1;\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name. \" + this.debugInfo());\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.Element;\n      this.attribs = {};\n      this.schemaTypeInfo = null;\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.type === NodeType.Document) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n        if (parent.children) {\n          ref1 = parent.children;\n          for (j = 0, len = ref1.length; j < len; j++) {\n            child = ref1[j];\n            if (child.type === NodeType.DocType) {\n              child.name = this.name;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    Object.defineProperty(XMLElement.prototype, 'tagName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'id', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'className', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'classList', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'attributes', {\n      get: function() {\n        if (!this.attributeMap || !this.attributeMap.nodes) {\n          this.attributeMap = new XMLNamedNodeMap(this.attribs);\n        }\n        return this.attributeMap;\n      }\n    });\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attribs = {};\n      ref1 = this.attribs;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attribs[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, j, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo());\n      }\n      name = getValue(name);\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          attName = name[j];\n          delete this.attribs[attName];\n        }\n      } else {\n        delete this.attribs[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.element(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.getAttribute = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].value;\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttribute = function(name, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNode = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttributeNode = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNode = function(oldAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNS = function(namespaceURI, qualifiedName, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNodeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNodeNS = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.hasAttribute = function(name) {\n      return this.attribs.hasOwnProperty(name);\n    };\n\n    XMLElement.prototype.hasAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttribute = function(name, isId) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].isId;\n      } else {\n        return isId;\n      }\n    };\n\n    XMLElement.prototype.setIdAttributeNS = function(namespaceURI, localName, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttributeNode = function(idAttr, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.isEqualNode = function(node) {\n      var i, j, ref1;\n      if (!XMLElement.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.attribs.length !== this.attribs.length) {\n        return false;\n      }\n      for (i = j = 0, ref1 = this.attribs.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n        if (!this.attribs[i].isEqualNode(node.attribs[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNamedNodeMap;\n\n  module.exports = XMLNamedNodeMap = (function() {\n    function XMLNamedNodeMap(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\n      get: function() {\n        return Object.keys(this.nodes).length || 0;\n      }\n    });\n\n    XMLNamedNodeMap.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItem = function(name) {\n      return this.nodes[name];\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItem = function(node) {\n      var oldNode;\n      oldNode = this.nodes[node.nodeName];\n      this.nodes[node.nodeName] = node;\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItem = function(name) {\n      var oldNode;\n      oldNode = this.nodes[name];\n      delete this.nodes[name];\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.item = function(index) {\n      return this.nodes[Object.keys(this.nodes)[index]] || null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItemNS = function(node) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLNamedNodeMap;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref1,\n    hasProp = {}.hasOwnProperty;\n\n  ref1 = require('./Utility'), isObject = ref1.isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  XMLDummy = null;\n\n  NodeType = null;\n\n  XMLNodeList = null;\n\n  XMLNamedNodeMap = null;\n\n  DocumentPosition = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent1) {\n      this.parent = parent1;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.value = null;\n      this.children = [];\n      this.baseURI = null;\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n        XMLDummy = require('./XMLDummy');\n        NodeType = require('./NodeType');\n        XMLNodeList = require('./XMLNodeList');\n        XMLNamedNodeMap = require('./XMLNamedNodeMap');\n        DocumentPosition = require('./DocumentPosition');\n      }\n    }\n\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function() {\n        return this.value;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function() {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n        return this.childNodeList;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function() {\n        return this.children[0] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function() {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function() {\n        return this.document() || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function() {\n        var child, j, len, ref2, str;\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref2 = this.children;\n          for (j = 0, len = ref2.length; j < len; j++) {\n            child = ref2[j];\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function(value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLNode.prototype.setParent = function(parent) {\n      var child, j, len, ref2, results;\n      this.parent = parent;\n      if (parent) {\n        this.options = parent.options;\n        this.stringify = parent.stringify;\n      }\n      ref2 = this.children;\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        results.push(child.setParent(this));\n      }\n      return results;\n    };\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val;\n      lastChild = null;\n      if (attributes === null && (text == null)) {\n        ref2 = [{}, null], attributes = ref2[0], text = ref2[1];\n      }\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref3 = [attributes, text], text = ref3[0], attributes = ref3[1];\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n            lastChild = this.dummy();\n          } else if (isObject(val) && isEmpty(val)) {\n            lastChild = this.element(key);\n          } else if (!this.options.keepNullNodes && (val == null)) {\n            lastChild = this.dummy();\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n              lastChild = this.element(val);\n            } else {\n              lastChild = this.element(key);\n              lastChild.element(val);\n            }\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else if (!this.options.keepNullNodes && text === null) {\n        lastChild = this.dummy();\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, newChild, refChild, removed;\n      if (name != null ? name.type : void 0) {\n        newChild = name;\n        refChild = attributes;\n        newChild.setParent(this);\n        if (refChild) {\n          i = children.indexOf(refChild);\n          removed = children.splice(i);\n          children.push(newChild);\n          Array.prototype.push.apply(children, removed);\n        } else {\n          children.push(newChild);\n        }\n        return newChild;\n      } else {\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        child = this.parent.element(name, attributes, text);\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref2;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref2 = [])), ref2;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref2;\n      if (name != null) {\n        name = getValue(name);\n      }\n      attributes || (attributes = {});\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref2 = [attributes, text], text = ref2[0], attributes = ref2[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      if (isObject(value)) {\n        this.element(value);\n      }\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.dummy = function() {\n      var child;\n      child = new XMLDummy(this);\n      return child;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children.length === 0) {\n        doc.children.unshift(xmldec);\n      } else if (doc.children[0].type === NodeType.Declaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref2, ref3;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref2 = doc.children;\n      for (i = j = 0, len = ref2.length; j < len; i = ++j) {\n        child = ref2[i];\n        if (child.type === NodeType.DocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref3 = doc.children;\n      for (i = k = 0, len1 = ref3.length; k < len1; i = ++k) {\n        child = ref3[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node. \" + this.debugInfo());\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node. \" + this.debugInfo());\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.debugInfo = function(name) {\n      var ref2, ref3;\n      name = name || this.name;\n      if ((name == null) && !((ref2 = this.parent) != null ? ref2.name : void 0)) {\n        return \"\";\n      } else if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else if (!((ref3 = this.parent) != null ? ref3.name : void 0)) {\n        return \"node: <\" + name + \">\";\n      } else {\n        return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    XMLNode.prototype.replaceChild = function(newChild, oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.removeChild = function(oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.appendChild = function(newChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.hasChildNodes = function() {\n      return this.children.length !== 0;\n    };\n\n    XMLNode.prototype.cloneNode = function(deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.normalize = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isSupported = function(feature, version) {\n      return true;\n    };\n\n    XMLNode.prototype.hasAttributes = function() {\n      return this.attribs.length !== 0;\n    };\n\n    XMLNode.prototype.compareDocumentPosition = function(other) {\n      var ref, res;\n      ref = this;\n      if (ref === other) {\n        return 0;\n      } else if (this.document() !== other.document()) {\n        res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n        if (Math.random() < 0.5) {\n          res |= DocumentPosition.Preceding;\n        } else {\n          res |= DocumentPosition.Following;\n        }\n        return res;\n      } else if (ref.isAncestor(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Preceding;\n      } else if (ref.isDescendant(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Following;\n      } else if (ref.isPreceding(other)) {\n        return DocumentPosition.Preceding;\n      } else {\n        return DocumentPosition.Following;\n      }\n    };\n\n    XMLNode.prototype.isSameNode = function(other) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupPrefix = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isDefaultNamespace = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupNamespaceURI = function(prefix) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isEqualNode = function(node) {\n      var i, j, ref2;\n      if (node.nodeType !== this.nodeType) {\n        return false;\n      }\n      if (node.children.length !== this.children.length) {\n        return false;\n      }\n      for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\n        if (!this.children[i].isEqualNode(node.children[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    XMLNode.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.setUserData = function(key, data, handler) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.getUserData = function(key) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.contains = function(other) {\n      if (!other) {\n        return false;\n      }\n      return other === this || this.isDescendant(other);\n    };\n\n    XMLNode.prototype.isDescendant = function(node) {\n      var child, isDescendantChild, j, len, ref2;\n      ref2 = this.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (node === child) {\n          return true;\n        }\n        isDescendantChild = child.isDescendant(node);\n        if (isDescendantChild) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    XMLNode.prototype.isAncestor = function(node) {\n      return node.isDescendant(this);\n    };\n\n    XMLNode.prototype.isPreceding = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos < thisPos;\n      }\n    };\n\n    XMLNode.prototype.isFollowing = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos > thisPos;\n      }\n    };\n\n    XMLNode.prototype.treePosition = function(node) {\n      var found, pos;\n      pos = 0;\n      found = false;\n      this.foreachTreeNode(this.document(), function(childNode) {\n        pos++;\n        if (!found && childNode === node) {\n          return found = true;\n        }\n      });\n      if (found) {\n        return pos;\n      } else {\n        return -1;\n      }\n    };\n\n    XMLNode.prototype.foreachTreeNode = function(node, func) {\n      var child, j, len, ref2, res;\n      node || (node = this.document());\n      ref2 = node.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (res = func(child)) {\n          return res;\n        } else {\n          res = this.foreachTreeNode(child, func);\n          if (res) {\n            return res;\n          }\n        }\n      }\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNodeList;\n\n  module.exports = XMLNodeList = (function() {\n    function XMLNodeList(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNodeList.prototype, 'length', {\n      get: function() {\n        return this.nodes.length || 0;\n      }\n    });\n\n    XMLNodeList.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNodeList.prototype.item = function(index) {\n      return this.nodes[index] || null;\n    };\n\n    return XMLNodeList;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLProcessingInstruction.prototype.isEqualNode = function(node) {\n      if (!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.target !== this.target) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text. \" + this.debugInfo());\n      }\n      this.type = NodeType.Raw;\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.raw(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      this.stream = stream;\n      XMLStreamWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStreamWriter.prototype.endline = function(node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return XMLStreamWriter.__super__.endline.call(this, node, options, level);\n      }\n    };\n\n    XMLStreamWriter.prototype.document = function(doc, options) {\n      var child, i, j, k, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.attribute.call(this, att, options, level));\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.cdata.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.comment.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.declaration.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, options, level) {\n      var child, j, len, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len = ref.length; j < len; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, j, len, name, prettySuppressed, ref, ref1;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level) + '<' + node.name);\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref1 = node.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.raw.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.text.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this, node, options, level));\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      }\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n      return r;\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalName = bind(this.assertLegalName, this);\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      if (!this.options.version) {\n        this.options.version = '1.0';\n      }\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.name = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalName('' + val || '');\n    };\n\n    XMLStringifier.prototype.text = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.textEscape('' + val || ''));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.attEscape(val = '' + val || ''));\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var regex, res;\n      if (this.options.noValidation) {\n        return str;\n      }\n      regex = '';\n      if (this.options.version === '1.0') {\n        regex = /[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      } else if (this.options.version === '1.1') {\n        regex = /[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.assertLegalName = function(str) {\n      var regex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      this.assertLegalChar(str);\n      regex = /^([:A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])([\\x2D\\.0-:A-Z_a-z\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])*$/;\n      if (!str.match(regex)) {\n        throw new Error(\"Invalid character in name\");\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.textEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text. \" + this.debugInfo());\n      }\n      this.name = \"#text\";\n      this.type = NodeType.Text;\n      this.value = this.stringify.text(text);\n    }\n\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function() {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n        str += this.data;\n        next = this.nextSibling;\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n        return str;\n      }\n    });\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.text(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLText.prototype.splitText = function(offset) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLText.prototype.replaceWholeText = function(content) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLText;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,\n    hasProp = {}.hasOwnProperty;\n\n  assign = require('./Utility').assign;\n\n  NodeType = require('./NodeType');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.filterOptions = function(options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref3 = (ref4 = options.dontPrettyTextNodes) != null ? ref4 : options.dontprettytextnodes) != null ? ref3 : 0;\n      filteredOptions.spaceBeforeSlash = (ref5 = (ref6 = options.spaceBeforeSlash) != null ? ref6 : options.spacebeforeslash) != null ? ref5 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    };\n\n    XMLWriterBase.prototype.indent = function(node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    };\n\n    XMLWriterBase.prototype.endline = function(node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    };\n\n    XMLWriterBase.prototype.attribute = function(att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      r = ' ' + att.name + '=\"' + att.value + '\"';\n      this.closeAttribute(att, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.cdata = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.comment = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.declaration = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.docType = function(node, options, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2;\n      level || (level = 0);\n      prettySuppressed = false;\n      r = '';\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r += this.indent(node, options, level) + '<' + node.name;\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        if (options.dontPrettyTextNodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && (child.value != null)) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.writeChildNode = function(node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    };\n\n    XMLWriterBase.prototype.processingInstruction = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.raw = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.text = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdAttList = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdElement = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdEntity = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdNotation = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.openNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.closeNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.openAttribute = function(att, options, level) {};\n\n    XMLWriterBase.prototype.closeAttribute = function(att, options, level) {};\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  NodeType = require('./NodeType');\n\n  WriterState = require('./WriterState');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name.\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.dtd(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n  module.exports.implementation = new XMLDOMImplementation();\n\n  module.exports.nodeType = NodeType;\n\n  module.exports.writerState = WriterState;\n\n}).call(this);\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n",null,"module.exports = require(\"assert\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","module.exports = require(\"timers\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(3109);\n"],"mappingsrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnrxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChrnxuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzhLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrp8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtrxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvvtvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrhnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACzhtflDA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACNA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;;;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACtBA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACdA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AChCA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACLA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACTA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACtrLA;AACA;AACA;AACA;;;A;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACNA;AACA;AACA;AACA;;;A;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC7NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC9PA;;;A;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACvjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACnnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACzjPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC/gzSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACzhxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACllpaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChzaA;;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;ACDA;AACA;AACA;AACA;;;;A","sourceRoot":""}